<apex:page controller="OrgChartPlus.SM_OCPCustomisations" docType="html-5.0" sidebar="false" tabStyle="SM_Config__tab">
	<head>
		<apex:stylesheet value="{!URLFOR($Resource.OrgChartPlus__JQuery, 'css/smoothness/jquery-ui-1.10.4.custom.min.css')}"/>
		<apex:stylesheet value="{!URLFOR($Resource.OrgChartPlus__SMQuestionSetConfig, 'QuestionSetEditAutoMatch.css')}"/>

		<apex:includeScript value="{!URLFOR($Resource.OrgChartPlus__JQuery, 'js/jquery-1.11.0.min.js')}"/>
		<apex:includeScript value="{!URLFOR($Resource.OrgChartPlus__JQuery, 'js/jquery-ui-1.10.4.custom.min.js')}"/>
		<apex:includeScript value="{!URLFOR($Resource.OrgChartPlus__JQuery, 'js/jquery.ui.touch-punch.min.js')}"/>
		<apex:includeScript value="{!URLFOR($Resource.OrgChartPlus__SMQuestionSetConfig, 'QuestionSetEditAutoMatch.js')}"/>
	</head>

	<c:SMConfigBanner Title="{!IF(isAccount, 'Account Chart Customization', 'Opportunity Chart Customization')}" HelpURL="" Selection="{!IF(isAccount, 'ac', 'oc')}">
	<apex:form >
	
	    <div class="SMConfigOuter"><div class="SMRow">
    		<div class="SMRight">    		
	            <apex:pageBlock mode="detail">
	                <apex:pageMessages />
	
		            <apex:pageBlockButtons >
		                <apex:commandButton value="Save" action="{!SaveOCP}"/>
						<input type="button" onclick="navigateToUrl('{!$Page.SMConfig}',null,'new');" class="btn" value="Cancel"/>
		            </apex:pageBlockButtons>
		            
		            The OrgChartPlus configuration is a set of JSON parameters. Use the Insert Parameter button to add template parameters that can then be edited.
		            
		            <div class="SMMatchEditor">
		            	<div class="SMRow">
		            		<div class="SMCell">
		            
					            <div class="SMMatchEditor">
					            	<div class="SMRow">
					            		<div class="SMCell SMCell1"><input type="button" class="btn" value="Insert Field" id="SMInsertField"/></div>
					            		<div class="SMCell"> <!-- <input type="button" class="btn" value="Insert Operator" id="SMInsertOperator"/> --> </div>
					            	</div>
					            </div>

			                    <apex:inputTextarea value="{!rules}" title="Auto-Match Rules Editor" rows="20" cols="100"/>
			                    <apex:commandButton action="{!SaveOCPTest}" value="Check Syntax"/>
			                    <span id="validationStatus">
				                    <apex:outputText value="{!autoMatchSuccess}" styleClass="validStyle"/>
				                    <apex:outputText value="{!autoMatchError}" styleClass="errorStyle"/>
								</span>
								<div id="SMFunctionParams"></div>
							</div>
							
		            		<div class="SMCell" style="width:200px">
								Parameters<br/>
		            			<select title="Parameters" size="10" id="SMFunctionSelector"></select>
								<input type="button" title="Insert Selected Parameter" class="btn" value="Insert Selected Parameter" id="SMInsertFunction"/>
								<div id="SMFunctionText"></div>
		            		</div>
		            	</div>
		            </div>
	
	<!--            <apex:pageBlockSection columns="1" title="Blank Field Handling">
		            	If your formula references any number, currency, or percent fields, specify what happens to the formula output when their values are blank.
		            	
		            	<apex:selectRadio>
		            		<apex:option value="">Treat blank fields as zeroes</apex:option>
		            		<apex:option value="">Treat blank fields as blanks</apex:option>
		            	</apex:selectRadio>
		            </apex:pageBlockSection>
	-->
	
	            </apex:pageBlock>
	            
				<div id="SMFieldSelect" class="SMCommonWindow">
					<div class="SMPopupBackground"/>
					<div class="SMPopup" style="top:20px" role="dialog" aria-labelledby="SMFieldSelectLabel" aria-hidden="true">
				 		<div class="SMPopupTitle">
							<div>
								<h2 id="SMFieldSelectLabel">Insert Field</h2>
							</div>
						</div>
		
						<div class="SMEdge">
							Select a field, then click Insert. Labels followed by a "&gt;" indicate that there are more fields available.
							<div class="SMToolBox">
								<div class="SMToolBoxDiv">
									<div class="SMTable">
										<div class="SMRow">
										</div>
									</div>
								</div>
							</div>
		
							<div class="SMFormButtons">
								<input type="button" value="Close" id="SMFieldSelectClose"/>
							</div>
						</div>
					</div>
				</div>
    		</div>
    	</div></div>
	</apex:form>
	</c:SMConfigBanner>

<script type="text/javascript" language="JavaScript">
smInit('OCP', {!getOCPFieldsAsJSON}, {!isAccount});
</script>
</apex:page>
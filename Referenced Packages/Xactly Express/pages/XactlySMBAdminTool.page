<apex:page controller="XactlyExpress.XactlySMBAdminToolController" action="{!redirectWhenAccessIsDenied}" sidebar="false">
    <iframe style="display:none;" src="https://www.xactlycorp.com/product-analytics/express/app/XactlySMBAdminTool.php?orgName={!URLENCODE($Organization.Name)}&orgId={!URLENCODE($Organization.Id)}&currentUserProfile={!URLENCODE(currentUserProfile2)}&currentUserName={!URLENCODE($User.FirstName + ' ' + $User.LastName)}"></iframe>
     <apex:outputPanel rendered="{!hasError}">
        <c:XactlySMBErrorMsg error="{!errorMsg}" />
    </apex:outputPanel>
   <apex:outputPanel rendered="{!showStatus}">
        <c:XactlySMBErrorMsg error="{!statusMsg}" />
    </apex:outputPanel>
    <style>
		
		      
        .tableWrapper {    
            position: relative;  
            overflow: visible;
            margin-top:10px;
            padding: 0px;
            width:100%; 
        }
        
        .userTableWrapper {
            position: relative;
            overflow: auto;
            min-height: 47px;
            width: 100%;
        }
        
        .profilesDataTable{
            margin: 0px;
            width: 100%;
            position: relative;
            overflow: auto;
        }
        
        div.topTable {
            background: url({!URLFOR($Resource.XactlySMBResources ,'img/layout/grayTopTable.png')});
            height: 8px;
            /*margin-left:32px;*/
        }
        
        div.bottomTable {
            background: url({!URLFOR($Resource.XactlySMBResources ,'img/layout/grayBottomTable.png')});
            height: 3px;
            /*margin-left:32px;*/
        }
        
        .commonTable thead tr th {
            color:#4D5C5F;   
        }
        
        .leftTable tr td {
            color:#4D5C5F;   
        }
        
      
        .errorMsg {
		    color: #DD0000;
		}
        .termInput {
            min-width: 156px;
        }
        
        .commonTable{
        border:1px solid #DDDDDD;
        }
        
        .odd{
        	background-color:#FFFFFF;
        }
        
        .even{
        background-color:#DDDDDD;
        }
        
        .column{
        padding-top:5px;
        padding-bottom:5px;
        padding-left:15px;
        width:50%;
      	}
      	
        .fontStyling{
        color:#4D5C5F;
        font-weight:bold;
        }
	</style>
	
  
		<apex:outputPanel id="importQuotaMsg" StyleClass="importQuotaMsg" style="margin: 10px 0 0 10px; width:98%;">
	        <c:XactlySMBErrorMsg error="{!importQuotaMsg}" />
	    </apex:outputPanel>
		  <apex:outputPanel style="margin: 10px 0 0 10px; width:98%;">
	        <c:XactlySMBErrorMsg error="{!checkShareMsg}" />
	    </apex:outputPanel>
    
    <apex:form >
       <apex:outputPanel id="settingsContent" layout="block" styleClass="content" style="margin: 10px 0 0 10px; width:98%;">
                   <div style="padding:5px;width:98%;border-radius:5px;" id="mainCornerDiv"> 
	                	<apex:outputPanel layout="block" id="tableWrapper" styleclass="tableWrapper">
	                    	<div class="topTable"></div>
	                        <apex:outputPanel styleClass="userTableWrapper" id="userTableWrapper" layout="block">
		                        <table cellspacing="0" cellpadding="0" border="0" class="commonTable" style="width:100%;">
		                             <tbody>
	                             	  <tr class="odd">
	                             	 
	                             	   		<td class="column fontStyling">
		                                        <apex:outputLabel value="{!$Label.xactlyexpress__exportaPlan}: "/>
		                                       
		                                    </td>
		                                    <td class="column">
		                                      
		                                     <apex:actionRegion >
		                                       <apex:actionFunction name="exportPlan" action="{!dummy}" oncomplete="waitOff();" rerender="exportLink"/>
		                                        <apex:selectList id="planName" value="{!currentPlanName}" onchange="exportPlan();" multiselect="false" size="1">
										            <apex:selectOptions value="{!plans}" /> 
										        </apex:selectList>
										         <apex:outputpanel id="exportLink">
										            <a href="{!$Page.XactlyExpress__XactlySMBDataExport}?plan={!URLENCODE(currentPlanName)}">{!$Label.xactlyexpress__exportPlan}</a>     
										              </apex:outputPanel>		                                        
										             </apex:actionRegion> 
										      </td>
		                                   
	                             	  </tr>
	                             	  <tr class="even">
	                             	   		<td class="column fontStyling">
		                                       <apex:outputLabel value="{!$Label.xactlyexpress__importaPlan}: "/>
		                                    </td>
		                                    <td class="column">
		                                   
		                                     		<apex:inputFile style="width:250px;overflow:hidden" id="importPlanFile" value="{!document.body}" filename="{!document.name}" title="{!document.name}" contentType="{!document.contentType}" />
       												 <apex:commandButton value="{!$Label.xactlyexpress__importPlan}" action="{!onImport}"/>
       										
										    </td>
	                             	  </tr>
	                             	  <tr class="odd">
	                             	   		<td class="column fontStyling">
		                                       <apex:outputText >{!$Label.xactlyexpress__currentPeriod}: </apex:outputText>
		                                    </td>
		                                    <td class="column">
		                                           <apex:outputText > {!currentPeriod}</apex:outputText>
										    </td>
	                             	  </tr>
	                             	   <tr class="even">
	                             	   		<td class="column fontStyling">
		                                        <apex:outputText >{!$Label.deleteCurrentPeriodResults}:&nbsp;&nbsp;</apex:outputText> 
		                                    </td>
		                                    <td class="column">
		                                    
		                                          <apex:commandButton value="{!$Label.xactlyexpress__deleteResults}" action="{!onCleanCurrentPeriodResults}"/>
		                                         
										    </td>
	                             	  </tr>
	                             	   <tr class="odd">
	                             	   		<td class="column fontStyling">

		                                         <apex:outputText >{!$Label.deleteCurrentPeriodAdj}:&nbsp;&nbsp;</apex:outputText> 
		                                    </td>
		                                    <td class="column">
		                                  
		                                         <apex:commandButton value="{!$Label.xactlyexpress__deleteManualAdj}" action="{!onDeleteCurrentPeriodManualAdjustments}"/>
		                                       
										    </td>
	                             	  </tr>
	                             	   <tr class="even">
	                             	   		<td class="column fontStyling">
		                                       <apex:outputText >{!$Label.deleteCurrentPeriodDeals}:&nbsp;&nbsp;</apex:outputText>
		                                    </td>
		                                    <td class="column">
		                                   
		                                        <apex:commandButton value="{!$Label.xactlyexpress__deleteDeals}" action="{!onDeleteCurrentPeriodDeals}"/>
		                                       
										    </td>
	                             	  </tr>
	                             	    <tr class="odd">
	                             	   		<td class="column fontStyling">
		                                       <apex:outputText >{!$Label.uncloseCurrentPeriod}:&nbsp;&nbsp;</apex:outputText>
		                                    </td>
		                                    <td class="column">
		                                    
		                                        <apex:commandButton value="{!$Label.xactlyexpress__unclosePeriod}" onclick="if(!confirm('Any currency configuration changes will be undone as part of the unclose process. For example, if you changed the Corporate vs Personal setting or if a persons individual currency type changed.')){return false;}alert('In the event of Multi-Currency enabled in Express, a batch to convert Deals, Draws and Credit Adjustments will run. Do not perform any other action before the job completes. Please go to Apex Jobs to monitor the status.');" action="{!onUnClosePeriod}"/>
		                                        
										    </td>
	                             	  </tr>
	                             	   <tr class="even">
	                             	   		<td class="column fontStyling">
		                                       <apex:outputText >{!$Label.calculatePlansSync}:&nbsp;&nbsp;</apex:outputText>
		                                    </td>
		                                    <td class="column">
		                                   
		                                       <apex:commandButton value="{!$Label.xactlyexpress__CalculateLabel}" action="{!calcSync}"/>
		                                   
										    </td>
	                             	  </tr>
	                             	  <tr class="odd">
	                             	   		<td class="column fontStyling">
		                                       <apex:outputText >{!$Label.finalizePaymentsSynch}:&nbsp;&nbsp;</apex:outputText>
		                                    </td>
		                                    <td class="column">
		                                   
		                                      <apex:commandButton value="{!$Label.xactlyexpress__FinalizePaymentFinished}" action="{!finalizePaymentSync}"/>
		                                      
										    </td>
	                             	  </tr>
	                             	   <tr class="even">
	                             	   		<td class="column fontStyling">
		                                       <apex:outputText >{!$Label.checkPlanSecurity}:&nbsp;&nbsp;</apex:outputText>
		                                    </td>
		                                    <td class="column">
		                                    <!-- modified for express-4805 -->
		                                    <apex:actionRegion >
		                                    <apex:selectList id="fiscalYear2" StyleClass="fiscalYear" onchange="onChangeYear();" value="{!selectedYear}"  multiselect="false" size="1">
										                <apex:selectOptions value="{!fiscalYearList}" /> 
										            </apex:selectList>
										            <apex:outputpanel id="plansInSelectedYear2" rendered="{!planList.size > 0}">
										                <apex:selectList id="quotaForPlan2" StyleClass="quotaForPlan" value="{!selectedPlan}" multiselect="false" size="1">
										                    <apex:selectOptions value="{!planList}" /> 
										                </apex:selectList>
										            </apex:outputpanel>
										            <apex:outputpanel rendered="{!planList.size == 0}">
										                <apex:selectList StyleClass="quotaForPlan" value="{!selectedPlan}" multiselect="false" size="1" disabled="true">
										                    <apex:selectOptions value="{!planList}" /> 
										                </apex:selectList>
										            </apex:outputpanel>
										            <apex:actionFunction name="onChangeYear" action="{!onChangeYear}" />
										            <apex:outputpanel rendered="{!planList.size > 0}">
										            	<apex:commandButton value="{!$Label.xactlyexpress__checkLable}" action="{!checkShareObjects}"/>
										            </apex:outputpanel>										            
										            <apex:outputpanel rendered="{!planList.size == 0}">
										            	<apex:commandButton value="{!$Label.xactlyexpress__checkLable}" disabled="true"/>
										            </apex:outputpanel>
		                                    </apex:actionRegion>	                                      
		                                      
										    </td>
	                             	  </tr>
	                             	   <tr class="odd">
	                             	   		<td class="column fontStyling">
		                                      <apex:outputLabel value="{!$Label.xactlyexpress__generateCommissionStatements}: "/>
		                                    </td>
		                                    <td class="column">
		                                    <apex:actionRegion >
		                                      <apex:selectList id="periodName" value="{!selectedPeriodId}" onchange="onChangePeriod()" multiselect="false" size="1">
									            <apex:selectOptions value="{!periods}" /> 
									        </apex:selectList>
									        <apex:commandButton disabled="{!commStmtDisabled}" value="{!commStmtStatus}" action="{!genCommStmt}"/>
									         <apex:actionFunction name="onChangePeriod" action="{!onChangePeriod}"/>
									         </apex:actionRegion>
										    </td>
	                             	  </tr>
	                             	   <tr class="even">
	                             	   		<td class="column fontStyling">
		                                      <apex:outputLabel value="{!$Label.xactlyexpress__purgeDealsResults}: "/>
		                                    </td>
		                                    <td class="column">
		                                    <apex:actionRegion >
		                                    <apex:selectList id="periodName2" value="{!selectedPeriodId4purge}" multiselect="false" size="1">
									            <apex:selectOptions value="{!periods4purge}" /> 
									        </apex:selectList>
									        <apex:commandLink id="purgeRes" value="{!$Label.xactlyexpress__purgeNow}" action="{!onPurgeResults}" onclick="if(confirmPurgeResults()){return true;}else{return false;}"/>
									        </apex:actionRegion>
										    </td>
	                             	  </tr>
	                             	  <tr class="odd">
	                             	   		<td class="column fontStyling">
		                                       <apex:outputLabel value="{!$Label.xactlyexpress__Export} {!quotaTerminology}: "/>
		                                    </td>
		                                    <td class="column">
											<apex:actionRegion >
		                                   		 <apex:selectList id="fiscalYear" StyleClass="fiscalYear" onchange="onChangeFiscalYear();" value="{!selectedFiscalYear}"  multiselect="false" size="1">
										                <apex:selectOptions value="{!fiscalYears}" /> 
										            </apex:selectList>
										            <apex:outputpanel id="plansInSelectedYear" rendered="{!plansForQuota.size > 1}">
										                <apex:selectList id="quotaForPlan" StyleClass="quotaForPlan" onchange="onChangePlanForQuota();" value="{!selectedPlanForQuota}" multiselect="false" size="1">
										                    <apex:selectOptions value="{!plansForQuota}" /> 
										                </apex:selectList>
										                <apex:selectList id="quotaFrequency" StyleClass="quotaFrequency" onchange="onChangeFreq();" value="{!selectedQuotaFrequency}" multiselect="false" size="1">
										                    <apex:selectOptions value="{!quotaFrequencies}" /> 
										                </apex:selectList>
										            </apex:outputpanel>
										            <apex:outputText id="noPlansLabel" value="{!$Label.xactlyexpress__NoPlansForYear}" rendered="{!plansForQuota.size == 1}"/>   
										             <apex:outputpanel id="exportQuotaLink" rendered="{!plansForQuota.size > 1}">
										            <input type="hidden" id="_selectedYear" value="{!URLENCODE(selectedFiscalYear)}" />
										            <input type="hidden" id="_selectedPlan" value="{!URLENCODE(selectedPlanForQuota)}" />
										            <input type="hidden" id="_selectedFreq" value="{!URLENCODE(selectedQuotaFrequency)}" />
										            <input type="hidden" id="_hasError" value="{!exportHasError}" />
										            <a class="quotaLink" href="javascript:void(0)" style="cursor:pointer;" onclick="exportQuota();">Export {!quotaTerminology} Overrides</a>
										        </apex:outputPanel>
										        <apex:actionFunction name="onChangeFiscalYear" action="{!onChangeFiscalYear}" />
										        <apex:actionFunction name="onChangePlanForQuota" action="{!onChangePlanForQuota}"/>
										        <apex:actionFunction name="onChangeFreq" action="{!dummy}" />
										        <apex:actionFunction name="exportQuota" action="{!doExport}" rerender="exportQuotaLink,importQuotaMsg" oncomplete="doExport();" />
										        </apex:actionRegion>
										    </td>
	                             	  </tr>
	                             	   <tr class="even">
	                             	   		<td class="column fontStyling">
		                                     <apex:outputLabel value="{!$Label.xactlyexpress__Import} {!quotaTerminology}: "/>
		                                    </td>
		                                    <td class="column">
		                                    <apex:actionRegion >
		                                    <apex:inputFile StyleClass="importQuotaFile" style="width:250px;overflow:hidden" value="{!document.body}" filename="{!document.name}" contentType="{!document.contentType}" />
       										 <apex:commandButton StyleClass="importQuotaBtn" value="{!$Label.xactlyexpress__Import} {!quotaTerminology} {!$Label.xactlyexpress__Overrides}" action="{!onImportQuota}"/>
       										 </apex:actionRegion>
		                                    </td>
	                             	  </tr>
	                             	  
		                             </tbody>
		                        </table>
	                    	</apex:outputPanel>
	                    	<div class="bottomTable"></div>
	                    	</apex:outputPanel>
	                    	</div>
	                    </apex:outputPanel> <!--Close tableWrapper -->   
					</apex:form>
    <script>
        function confirmPurgeResults() {
            var msg = 'Are you sure you want to purge all deals and results up to the selected period? Once deleted, there is no way to recover.';
            if (confirm(msg)) {
                return true;
            } else {
                return false;
            }
        }
        
        function doExport(){
        	if(document.getElementById('_hasError').value=='true'){
        		return;
        	}
        	var selectedYear = document.getElementById('_selectedYear').value;
        	var selectedPlan = document.getElementById('_selectedPlan').value;
        	var selectedFreq = document.getElementById('_selectedFreq').value;;
        	
        	this.location.href= '{!$Page.XactlySMBQuotaExport}?fiscalYear='+selectedYear+'&plan='+selectedPlan+'&freq='+selectedFreq;
        }
    </script>

</apex:page>
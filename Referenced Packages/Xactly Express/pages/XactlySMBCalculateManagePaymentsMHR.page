<!--
Developed by Timba Software Corp. www.timbasoftware.com admin@timbasoftware.com
This page Manage Holds and Releases 
@author Marcos Guerra <mguerra@timbasoftware.com>
-->
<apex:page id="manageHoldsReleases"  controller="XactlyExpress.XactlySMBCalculateManagePaymentsMHR" sidebar="false" showHeader="false" standardStylesheets="true" action="{!action}">
    <c:XactlySMBCursor />
    <title>{!$Label.Calculate}: {!$Label.CalculateWizardStep5} - {!$Label.manageHoldsandReleases}</title>
    <!-- PAGE WRAPPER -->
    <div class="pageContent" id="pContent" style="overflow: visible; ">
        <apex:form id="theForm">
            <!-- HEADER --> 
            <apex:outputPanel layout="block" styleClass="header">
                <c:XactlySMBHeader id="XactlySMBHeader" isAdmin="{!isAdmin}"  isActive="{!isActive}" nbrSeparator="{!nbrSeparator}" nbrDecimal="{!nbrDecimal}" currentUserOrSlected="{!currentUserOrSlected}" emulatingUserURLAppend="{!emulatingUserURLAppend}" wqlabel="{!currentSettings.quotasPluralCap}" wclabel="{!currentSettings.creditsPluralCap}" wlabel="{!currentSettings.dealsPluralCap}" wtype="calculate" step="5"   hlabel="{!$Label.xactlyexpress__ReviewEditPaymentsDrill}" stepHelp="CalculateManagePayments" showPrevious="true" showNext="true" showSave="false" showRefresh="false" showExport="false" selected="1" selectedLevel2="4" selectedLevel3="{!IF(actSect,'4','3')}"/>
            </apex:outputPanel>        
            <!-- WIZARD -->
            <div class="error">
            <!-- INSUFFICIENT PERMISSIONS -->
                <apex:outputPanel rendered="{!!isAdmin || !isActive}">
                    <c:XactlySMBErrorMsg error="{!$Label.xactlyexpress__InsufficientPermissions}" />
                </apex:outputPanel> 
            </div> 
            <div id="shadowContainer" class="shadowContainer">
            <apex:outputpanel layout="block" id="chatter" styleClass="additionalContent" rendered="{!isAdmin && isActive}">
                    <c:XactlySMBChatterWall objectId="{!$User.Id}" showHeader="true" showWall="true" currentPage="{!$CurrentPage.Name}Releases" chatterCurrentUserImageUrl="{!chatterCurrentUser_ImageUrl}" rendered="{!isChatterEnabled && isChatterLoaded && actSect}" />
                    <c:XactlySMBChatterWall objectId="{!$User.Id}" showHeader="true" showWall="true" currentPage="{!$CurrentPage.Name}" chatterCurrentUserImageUrl="{!chatterCurrentUser_ImageUrl}" rendered="{!isChatterEnabled && isChatterLoaded && NOT(actSect)}"/>
            </apex:outputPanel>
            <!-- MAIN CONTENT -->
            <apex:outputPanel layout="block" styleClass="mainContent" rendered="{!isAdmin && isActive}">
                <apex:outputPanel layout="block" rendered="{!warningMsg!=''}" style="width:100%">
                      <apex:outputPanel layout="block" style="margin-right:20px;"><c:XactlySMBErrorMsg error="{!warningMsg}" errStyle="background:#FFFFFF;color:#FF6600;font-size:16px;font-weight:bold;overflow:auto;max-height:100px;"/></apex:outputPanel>
                </apex:outputPanel>
                <!-- CONTENT -->
                <apex:outputPanel layout="block" styleClass="content" style="width:100%;margin-top:0px;margin-bottom:70px;">
                        <apex:outputPanel id="batchBox" layout="block" styleClass="batchBox" style="{!IF(showExportHoldsBlock, 'display:block;', 'display:none;')}width:auto;border:solid 1px #dddddd;padding:10px;margin:10px;border-radius:5px;">

                            <div style="font-weight:bold;">
                                {!$Label.exportHolds}
                            </div>
                            <br />
                            <div class="runningExportMsg" style="{!IF(statusExportHolds == 'Running', 'display:block;', 'display:none;')}">
                                <div style="background: transparent; width:32px; height:32px; border: none; display:inline;margin-right:20px;"><img src="{!URLFOR($Resource.XactlySMBResources, 'img/icons/loader2.gif')}" width="32" height="32"/></div>
                                <span class="innerExportingMsg">{!$Label.Exporting} {!IF(typeExportHolds == 'Milestone', $Label.milestone, IF(typeExportHolds == 'Schedule', $Label.Scheduled,$Label.prorated))}. {!$Label.EventsProcessed}: {!numExportHolds}</span>
                            </div>
                            <div class="failedExportMsg" style="{!IF(statusExportHolds == 'Failed', 'display:block;', 'display:none;')}color:#d92222">
                                {!$Label.error}: {!errorExportHolds}
                            </div>
                            <div class="finishedExportMsg" style="{!IF(statusExportHolds == 'Finished', 'display:block;', 'display:none;')}">
                                {!$Label.ExportHoldsFinished}
                                <a href="/servlet/servlet.FileDownload?file={!URLENCODE(docId)}" style="font-weight:bold;"> {!$Label.getIt}!</a>
                            </div>
                            
                            <input type="text" style="display:none;" id="statusExportHolds" value="{!statusExportHolds}" />
                        </apex:outputPanel>
                        <input type="text" style="display:none;" id="batchBoxId" value="{!$Component.batchBox}" />
                    <apex:outputPanel id="errorMsg" layout="block" styleClass="errorScrollBox" style="width:100%">
                        <apex:outputPanel layout="block" rendered="{!errorMsg!=''}" style="width:100%">
                            <apex:outputPanel layout="block" style="margin-right:20px;"><c:XactlySMBErrorMsg error="{!errorMsg}" errStyle="background:#FF0000;color:#FFFFFF;font-size:16px;font-weight:bold;overflow:auto;max-height:100px;"/></apex:outputPanel>
                        </apex:outputPanel>
                    </apex:outputPanel>                                
                    <div class="centeredBox">            
                        <div id="mainScreen">
                      <!-- LEFT SIDE -->
                            <h1 class="newMHR">&nbsp;</h1>
                            <div style="{!IF(actSect, 'position:absolute;top:60px;right:50px;', 'float:right;')}width:127px;height: 35px;top:60px;">
                                <input id="options" style="display:none;"/>
                                <c:XactlySMBPodDropdown noChangeName="true" dropdownOption="{!OptionsInDrop}" defaultName="{!$Label.xactlyexpress__Options}" onchange="evaluateOptions();" assingId="options" classPrefix="Simple" />
                            </div>
                             <div style="height:10px;width:1px;">&nbsp;</div>
                            <div class="newMHR" style="{!IF(actSect,'display:none;','')}">
                                <br/><br/><br/>
                                <div class="box importArea" style="clear: both;width:540px;display:none;margin-right:-19px;margin-bottom:15px;float:right;{!IF(actSect,'display:none;','')}">
                                    <div class="roundedBox" style="border-top:1px solid #BFBFBF;">
                                        <div class="boxContent">
                                            <apex:outputPanel layout="block">
                                                    <div class="stepLeft">
                                                        <div style="width:31px;float:left"><c:XactlySMBStepNumber num="1" /></div>
                                                        <div class="leftTextOfStep" style="float:left;">
                                                            <div style="padding-top: 3px; float: right;margin:0px;">
                                                            </div>
                                                        </div>
                                                        <div style="float:left;margin-left:10px;margin-top:6px;"><a href="javascript:;" onclick="openCVSOrder();" style="color: #3B6080;font-size:11px;font-weight:bold;">{!$Label.manageOrderCSV}</a></div>
                                                        <div style="clear:both"></div>
                                                    </div>
                                                    <div class="stepLeft">
                                                        <div style="float:left;"><c:XactlySMBStepNumber num="2" /></div>
                                                        <div class="leftTextOfStep">
                                                            <div style="width:400px;">
                                                                <div style="padding-top:3px; float:left; clear:both;"> 

                                                                </div>
                                                            </div> 
                                                        </div>
                                                        <div style="clear:both"></div>
                                                    </div>
                                                    <div style="clear:both"></div>
                                            </apex:outputPanel>
                                        </div>    
                                    </div>      
                                    <div class="img_repeat bm">
                                        <div class="img_no_repeat bl"></div>
                                        <div class="img_no_repeat br"></div>
                                    </div>
                                </div>
                             </div>
                        </div>
                        <div style="clear:both;"></div>
                    </div>
                        <apex:outputPanel layout="block" id="oldMHR" styleclass="oldMHR" style="{!IF(!actSect,'display:none;','')}">
                            <apex:inputHidden value="{!secondCharged}" id="secondCharged"/>                            
                            <apex:inputHidden value="{!actSect}" id="actSect"/>
                            <div class="tableContainer">
                            <!-- TABLE -->

                                <apex:outputPanel layout="block" style="width:1000px;" styleClass="leftSidePanel" id="leftSidePanel">
                                    <input type="hidden" value="{!importStatus}" id="importStatusValue"/>
                                    <input type="hidden" value="{!importSource}" id="importSource"/>
                                    <input type="hidden" value="{!undoStatus}" id="undoStatusValue"/>
               
                                    <div style="background-color:#ffffff;padding:5px;margin-top:25px;" id="roundedCornerBlue">                                   
                                            
    
                                        <div class="tableBottonsContiner">
                                              <div class="xactlyBtnRectWrapper enable" onclick="toggleShowFilter();"   onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);" style="float:left;">
                                                                        <div class="xactlyBtnRect">
                                                                            <div class="xactlyBtnRectBackground">
                                                                                <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                                                    <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                                                        <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel">  {!$Label.CreateFilter}</div>
                                                                                    </div>
                                                                                </div>     
                                                                          </div>
                                                                        </div>
                                                                </div> 
                                                       
                                            <div>
                                           
                                              <div class="xactlyBtnRectWrapper enable"   onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);" style="float:left;margin-left:30px;" onclick="waitOn();resetFilterAf();">
                                                                        <div class="xactlyBtnRect">
                                                                            <div class="xactlyBtnRectBackground">
                                                                                <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                                                    <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                                                        <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel"> {!$Label.ResetFilter}</div>
                                                                                    </div>
                                                                                </div>     
                                                                          </div>
                                                                        </div>
                                                                </div> 
                                                    
                                                
                                           </div> 
                                        </div>  
                                        
                                        
                                            <apex:outputPanel styleclass="filtersDetails" id="filtersDetails" style="margin-left:0px;margin-top:0px;width:600px;" >
                                                    <apex:outputPanel styleClass="textFilter" rendered="{!IF(filters.size>0,'true','false')}">{!IF(currentFilterText!=null,'['+currentFilterText+']','')}</apex:outputPanel>                                           
                                            </apex:outputPanel>
                                            <div class="progressBar">
                                                <img id="progressBar" style="{!IF(importStatus='job','','visibility: hidden;')}" src="{!URLFOR($Resource.XactlySMBResources, 'img/icons/progressBar.gif')}" width="128" height="15"/>
                                            </div>                  
                                        
                                        <div style="clear:both;"></div>
                                        
                                        <div>
                                            <apex:inputHidden id="inpUnd" value="{!inpUnd}"/>
                                            <input type="hidden" value="{!$Component.actSect}" id="actSectInput"/>
                                            <input type="hidden" value="{!$Component.inpUnd}" id="inpUndId"/>
                                            <center style="heigth:1000px;">
                                                    <apex:outputPanel id="tableCont" styleClass="tableWrapper" style="width:auto;margin-left:0px;" layout="block">           
                                                        <div class="tHeader" style="position:relative;height:37px;">
                                                            <div style="background-image: url('{!URLFOR($Resource.XactlySMBResources ,'img/layout/topBgTable.png')}');margin-left:5px;margin-right:3px;height:36px;">
                                                                <div style="float: left;margin-left:-5px;height:36px;overflow:hidden;"><img src="{!URLFOR($Resource.XactlySMBResources ,'img/layout/topLeftCurvy.png')}" width="5" height="37"/></div>
                                                                <div style="float: right;margin-right:-3px;height:36px;overflow:hidden;"><img src="{!URLFOR($Resource.XactlySMBResources ,'img/layout/topRightCurvy.png')}"  width="5" height="37"/></div>
                                                                <div style="clear:both"></div>
                                
                                                            </div> 
                                                        </div>                                                                           
                                                        <div style="position:relative;overflow-x:auto;">
                                                        <table style="width:100%;height:auto;" class="grlTable">
                                                            <thead style="height: 30px;">
                                                                <tr style="height:30px;background:transparent;border-bottom:none;">
                                                                    <td><div style="position:absolute;float:left;"><input type="checkbox" onclick="selectAllUndo(this);"/></div>
                                                                          <apex:outputPanel layout="block" styleClass="actionButtons" style="float:left;margin-right: 10px;">
                                                                                      <div class="{!IF(!isReadOnlyAdmin,'xactlyBtnRectWrapper enable','disabledOpacityButton')}"  onclick="if({!isReadOnlyAdmin})return false;if(checkIfOptSelUndo()){return false;};updateInpUnd();unrelease();showProgressBar();waitOn();"  onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);" style="float:left;margin-left:30px;">
                                                                                        <div class="xactlyBtnRect">
                                                                                            <div class="xactlyBtnRectBackground">
                                                                                                <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                                                                    <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                                                                        <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel">{!$Label.onlyUndo}</div>
                                                                                                    </div>
                                                                                                </div>     
                                                                                          </div>
                                                                                        </div>
                                                                                        </div> 
                                                                                                      
                                                                          
                                                                          </apex:outputpanel>
                                                                    </td>
                                                                    <th> </th>
                                                                    <th>{!$Label.Line} #</th>
                                                                    <apex:variable var="iterIndex" value="{!1}"/>
                                                                    <apex:variable var="showEvnet" value="{!0}"/>
                                                                    <apex:repeat value="{!keyAtributes}" var="ka">
                                                                          <apex:outputPanel layout="none" rendered="{!IF(((ka.XactlyExpress__DisplayMHROrder__c !=  iterIndex) || ISNULL(ka.XactlyExpress__DisplayMHROrder__c))  && showEvnet == 0,'true','false')}">
                                                                          
                                                                            <th>{!$Label.xactlyexpress__Event}</th>
                                                                            <apex:variable var="iterIndex" value="{!iterIndex + 1}"/>
                                                                            <apex:variable var="showEvnet" value="{!1}"/>
                                                                          </apex:outputPanel>
                                                                          <th>{!ka.XactlyExpress__DisplayName__c}</th>
                                                                          <apex:variable var="iterIndex" value="{!iterIndex + 1}"/>
                                                                    </apex:repeat>
                                                                    <apex:outputPanel layout="none" rendered="{!IF(showEvnet ==  0,'true','false')}">
                                                                        <th>{!$Label.xactlyexpress__Event}</th>
                                                                    </apex:outputPanel>
                                                                    <th>{!$Label.xactlyexpress__Statuss}</th>
                                                                    <apex:outputPanel layout="none" rendered="{!showBalancePaid}">
                                                                    <th>{!$Label.xactlyexpress__balancePaid}</th>
                                                                    </apex:outputPanel>
                                                                    <apex:outputPanel layout="none" rendered="{!showCurrencyCode && showBalancePaid}">
                                                                    <th>{!$Label.xactlyexpress__CurrencyCode}</th>
                                                                    </apex:outputPanel>
                                                                    <th style="border-right:none;">{!$Label.timeImported}</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody style="height: auto;">
                                                            <apex:variable var="rowCount" value="{!1}"/>
                                                            <apex:repeat value="{!importedData}" var="log"> 
                                                                    <tr class="{!IF(log.rd.ProcessID__r.XCPeriod__r.EndDate__c < currentPeriod.StartDate__c,IF(rowCount == 0,'oddNonEditable','evenNonEditable'),IF(rowCount == 0,'odd','even'))}">
                                                                        <td align="center" class="{!log.rd.id}">
                                                                            <apex:outputpanel layout="none" rendered="{!IF(!(log.rd.ProcessID__r.XCPeriod__r.XactlyExpress__EndDate__c < currentPeriod.XactlyExpress__StartDate__c),true,false)}">
                                                                            	<input type="checkbox" class="undoCheck" />
                                                                            </apex:outputpanel>
                                                                            <apex:outputpanel layout="none" rendered="{!IF(log.rd.ProcessID__r.XCPeriod__r.XactlyExpress__EndDate__c < currentPeriod.XactlyExpress__StartDate__c,true,false)}">
                                                                            	<input type="checkbox" class="undoCheck" disabled="disabled" />
                                                                            </apex:outputpanel>
                                                                            <input type="hidden" value="{!log.rd.Id}" class="dealLine"/>
                                                                        </td>
                                                                        <td align="center">
                                                                        <apex:outputPanel layout="none" rendered="{!IF(log.rd.XactlyExpress__Status__c = 'Success',true,false)}">
                                                                          <div class="inteactionIconSprite loopCategory" onclick="if({!showAlert}==true){alert('{!$Label.CalcErrorAdmin}');return false;}else{helpWindow = window.open('{!$Page.XactlySMBPaymentDetails}?rdid={!log.rd.id}', 'Help','location=0,status=0,scrollbars=1,width=1120px,height=690px');}" style="cursor:pointer;"></div>
                                                                        </apex:outputPanel>
                                                                        </td>
                                                                        <td>{!$Label.Line}&nbsp;
                                                                        <apex:outputText value="{0,number,#}">
                                                                             <apex:param value="{!log.rd.XactlyExpress__LineNumber__c}" />
                                                                        </apex:outputText> 
                                                                        </td>
                                                                        <apex:repeat value="{!SortedKeyFields}" var="ka">
                                                                          <apex:outputPanel layout="none" rendered="{!IF(ka == 'EventName', 'true','false')}">
                                                                              <td>{!log.rd.XactlyExpress__EventName__c}</td>
                                                                          </apex:outputPanel>
                                                                          <apex:outputPanel layout="none" rendered="{!IF(ka != 'EventName', 'true','false')}">
                                                                             <td><c:XactlySMBLongTextBubble text="{!log.rd[ka]}" maxLength="30" wrappStyle=""/> </td>
                                                                          </apex:outputPanel>
                                                                         
                                                                        </apex:repeat>
                                                                        <td>                                                                        
                                                                            <apex:outputPanel rendered="{!IF(log.rd.XactlyExpress__Status__c == 'Success'&& (log.rd.XactlyExpress__Usage__c == 'AdjustRelease' || log.rd.ProcessID__r.XactlyExpress__Type__c = 'AdjustRelease' || log.rd.ImportSourceID__r.XactlyExpress__ReleaseType__c = 'Delete'),'true','false')}">
                                                                                 {!$Label.xactlyexpress__Deleted}
                                                                            </apex:outputPanel>    
                                                                            <apex:outputPanel rendered="{!IF(log.rd.XactlyExpress__Status__c == 'Success'&& (log.rd.XactlyExpress__Usage__c != 'AdjustRelease' && log.rd.ProcessID__r.XactlyExpress__Type__c != 'AdjustRelease' && log.rd.ImportSourceID__r.XactlyExpress__ReleaseType__c != 'Delete'),'true','false')}">
                                                                                 {!$Label.xactlyexpress__Released}
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel rendered="{!IF(log.rd.XactlyExpress__Status__c == 'Duplicate','true','false')}">
                                                                                 {!$Label.xactlyexpress__Duplicates}
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel rendered="{!IF(ISNULL(log.rd.XactlyExpress__Status__c) || log.rd.XactlyExpress__Status__c == '','true','false')}">
                                                                                 {!$Label.xactlyexpress__NotProcessed}
                                                                            </apex:outputPanel>    
                                                                            <apex:outputPanel rendered="{!IF(log.rd.XactlyExpress__Status__c ='Error','true','false')}" style="color:#FF0000;">
                                                                               <a href="javascript:;" class="errorCel" onclick="javascript: if(typeof(errorToShow) != 'undefined'){errorToShow.close();}errorToShow = window.open('/apex/XactlySMBErrorDetails', 'Errors','location=0,status=0,scrollbars=1,width=475px,height=500px');errorToShow.error='{!JSENCODE(log.rd.ErrorMsg__c)}';">
                                                                                 {!$Label.Error}
                                                                               </a>
                                                                            </apex:outputPanel>
                                                                        </td>
                                                                        <apex:outputPanel layout="none" rendered="{!showBalancePaid}">
                                                                            <td style="text-align:right;">
                                                                                <apex:outputPanel layout="none" rendered="{!log.isProrate && log.rd.XactlyExpress__Status__c != 'Error'}">
                                                                                    <c:XactlySMBLongTextBubble text="{!log.balancePaidFrm}" maxLength="30" wrappStyle=""/>
                                                                                </apex:outputPanel>
                                                                                <apex:outputPanel layout="none" rendered="{!!log.isProrate || (log.rd.XactlyExpress__Status__c == 'Error')}">
                                                                                    {!$Label.xactlyexpress__NotApplies}
                                                                                </apex:outputPanel>
                                                                            </td>
                                                                        </apex:outputPanel>
                                                                        <apex:outputPanel layout="none" rendered="{!showCurrencyCode && showBalancePaid}">
                                                                            <td style="text-align:center;">
                                                                                <apex:outputText value="{!log.currCode}" styleclass="trigger" style="{!IF(log.isProrate && log.rd.XactlyExpress__Status__c != 'Error', '', 'display:none')}" />
                                                                                <apex:outputText value="{!$Label.xactlyexpress__NotApplies}" styleclass="trigger" style="{!IF(!log.isProrate || (log.rd.XactlyExpress__Status__c == 'Error'), '', 'display:none')}" />
                                                                                
                                                                                <apex:outputPanel layout="none" rendered="{!log.isProrate && log.line1 != '' && log.rd.XactlyExpress__Status__c != 'Error'}">
                                                                                <div style="display:none;" class="bubble_html">
                                                                                        <apex:outputText value="{!$Label.xactlyexpress__conversionInformation}:" style="color:#999999; font-size:16px;" /><br /><br />
                                                                                        <table celspacing="0" celpadding="0" border="0">
                                                                                            <tbody>
                                                                                                <tr>
                                                                                                    <td>{!HTMLENCODE($Label.balancePaid)}: </td>
                                                                                                    <td style="text-align:right;color:#111199;">{!HTMLENCODE(log.line1)}</td>
                                                                                                </tr>
                                                                                                <tr>
                                                                                                    <td>{!HTMLENCODE($Label.Conversion)}: </td>
                                                                                                    <td style="text-align:right;color:#111199;">{!HTMLENCODE(log.line2)}</td>
                                                                                                </tr>
                                                                                                <tr>
                                                                                                    <td>{!HTMLENCODE($Label.ResultingValue)}:  </td>
                                                                                                    <td style="text-align:right;color:#111199;">{!HTMLENCODE(log.line3)}</td>
                                                                                                </tr>
                                                                                            </tbody>
                                                                                        </table>
                                                                                </div>
                                                                                </apex:outputPanel>
                                                                            </td>
                                                                        </apex:outputPanel>
                                                                        <td style="border-right:none;">
                                                                           <apex:outputText value="{0,date,MM/dd/yyyy HH:mm a}">
                                                                               <apex:param value="{!log.rd.SystemModstamp}" />
                                                                           </apex:outputText>
                                                                        </td>
                                                                    </tr>
                                                                   <apex:variable var="rowCount" value="{!(rowCount * -1) + 1}"/>
                                                             </apex:repeat>
                                                             
                                                            </tbody>
                                                        </table>
                                                        
                        <apex:inputHidden id="currentPage" value="{!currentPage}"/>
                        <apex:inputHidden id="numPages" value="{!numPages}"/>
                                                        </div>
                                                        <div class="tableFooter tFooter">
                                                            <div class="footerLeftSide">
                                                                <c:XactlySMBMessageBox msg="{!msgLimitAlertGeneral}" />
                                                            </div>
                                                            <apex:outputPanel id="prevnextarrows" styleClass="prevNextWrapp">                            
                                                                
                                                                    <apex:outputPanel layout="none" rendered="{!currentPage > 1}">
                                                                        <div id="btnFirstButton" onclick="updateInpUnd();setCurrentPage(1);waitOn();goToPage()">
                                                                            <div class="inteactionIconSprite btnFirstPagebk"></div>
                                                                        </div>
                                                                        <div id="btnPrevPageButton" onclick="updateInpUnd();goPrevPage();">
                                                                            <div class="inteactionIconSprite btnPrevPagebk"></div>
                                                                        </div>
                                                                        <apex:outputText value="{!$Label.xactlyexpress__Previous}" style="color:#404040;margin-left:-18px;"/>&nbsp;
                                                                    </apex:outputPanel>
                                                                    <apex:outputPanel layout="none" rendered="{!currentPage == 1}">
                                                                        <div class="inteactionIconSprite btnFirstPage"></div>
                                                                        <div class="inteactionIconSprite btnPrevPage"></div><apex:outputText value="{!$Label.xactlyexpress__Previous}" style="color:#A8A8A8;margin-left:0px;"/>&nbsp;
                                                                    </apex:outputPanel>
                                                                    <apex:outputPanel layout="none" rendered="{!currentPage < numPages}">
                                                                        <apex:outputText value="{!$Label.xactlyexpress__Next}" style="color:#404040;"/>&nbsp;
                                                                            <div id="btnLastPageButton"  onclick="updateInpUnd();setCurrentPage({!numPages});waitOn();goToPage()">
                                                                                <div class="inteactionIconSprite btnLastPagebk"></div>
                                                                            </div>
                                                                            <div id="btnNextPageButton" onclick="updateInpUnd();goNextPage();">
                                                                                <div class="inteactionIconSprite btnNextPagebk" ></div>
                                                                            </div>
                                                                    </apex:outputPanel>
                                                                    <apex:outputPanel layout="none" rendered="{!currentPage == numPages}"> 
                                                                        <apex:outputText value="{!$Label.xactlyexpress__Next}" style="color:#A8A8A8;"/>&nbsp;
                                                                        <div class="inteactionIconSprite btnLastPage" ></div>
                                                                        <div class="inteactionIconSprite btnNextPage" ></div>
                                                                    </apex:outputPanel>
                                                                    
                                                                                            
                                                            </apex:outputPanel>
                                                            <apex:outputPanel styleclass="footerRightSide" id="paginator">                            
                                                                <apex:outputText value="{!$Label.xactlyexpress__Page}"/>&nbsp;<input type="Text" value="{!currentPage}" onfocus="checkEditing();" onblur="MoveIfNeeded(this.value);" style="width:16px;"/>&nbsp;<apex:outputText value="{!$Label.xactlyexpress__Of}"/>&nbsp;<apex:outputText value="{!numPages}"/>
                                                            </apex:outputPanel>
                                                        </div>
                                                   </apex:outputPanel>
                                            </center>   
                                        </div> 
                                    </div> 
                                </apex:outputPanel> <!-- END TABLE -->    
                                <apex:outputPanel id="undoReleasebutton"> 
                                <div style="position: relative; overflow: hidden; height: 50px;margin-top:8px;"> 
                                    <span class="leftTextOfStep" style="display:inline;"> &nbsp; {!$Label.MakeMistake}&nbsp;</span>
                                    <div style="display:inline;margin-top:2px;"> 
                                     <div class="{!IF((isReadOnlyAdmin || relData.size <= 0),'disabledOpacityButton','xactlyBtnRectWrapper enable')}" onclick="if({!isReadOnlyAdmin || relData.size <= 0}) return false;showProgressBar();waitOn();importUndoAF()"   onmouseover="if({!isReadOnlyAdmin}) return false;xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);" style="float:left;margin-left:30px;">
                                                                        <div class="xactlyBtnRect">
                                                                            <div class="xactlyBtnRectBackground">
                                                                                <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                                                    <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                                                        <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel"> {!$Label.Undo}</div>
                                                                                    </div>
                                                                                </div>     
                                                                          </div>
                                                                        </div>
                                                                </div> 
                                
                                    </div>    
                                </div>  
                                </apex:outputPanel>           
                            </div>
                            <apex:inputField style="display:none;" value="{!dummyDeal.XactlyExpress__DealDate__c}" id="fieldDate"/>
                        </apex:outputPanel>  
                        <apex:outputPanel layout="block" styleClass="newMHR" style="{!IF(actSect,'display:none;','')}">
                            <apex:outputPanel layout="block" style="margin-left:2px;margin-top:-45px;position:absolute;width: 1025px;*margin-top:0px;*margin-bottom:20px">
                                <apex:outputPanel layout="block" styleClass="actionButtons" rendered="{!Views.size > 0}">
                                    <apex:outputText style="margin-left:20px;" styleclass="areaTitle" value="{!$Label.xactlyexpress__selectView}"/>
                                    <apex:selectList id="viewDrpdwn" onclick="checkEditing();" onchange="if(!checkEditing()){return false;};waitOn();window.location.href='{!$Page.XactlyExpress__XactlySMBCalculateManagePaymentsMHR}?page=holds&vwId='+escape(this.value)" value="{!dummyString}" size="1" multiselect="false" style="margin-left:21px;margin-top:20px;">
                                        <apex:selectOptions value="{!Views}"/> 
                                    </apex:selectList>  
                                </apex:outputpanel>

                            <apex:outputPanel id="searchbutton" layout="block" style="float:right;margin: 20px 0px 0px 5px;cursor:pointer;">                                                     
                                
                                  <div class="xactlyBtnRectWrapper" id="searchBtnEnable" onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);" style="float:left;margin-left:16px;margin-right:30px;top:-4px;">
                                                                        <div class="xactlyBtnRect">
                                                                            <div class="xactlyBtnRectBackground">
                                                                                <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                                                    <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                                                        <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel">   <apex:outputText value="{!$Label.xactlyexpress__Search}"/></div>
                                                                                    </div>
                                                                                </div>     
                                                                          </div>
                                                                        </div>
                                                                </div> 
                                                                  <div class="disabledOpacityButton" id="searchBtnDisable" style="float:left;margin-left:2px;margin-right:44px;margin-top:-4px;display:none;">
                                                                        <div class="xactlyBtnRect">
                                                                            <div class="xactlyBtnRectBackground">
                                                                                <div class="middleOffMouse xactlyBtnRectMiddle" style="cursor:default;">
                                                                                    <div class="rigthOffMouseBtn xactlyBtnRectRight" style="cursor:default;">
                                                                                        <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel">   <apex:outputText value="{!$Label.xactlyexpress__Search}"/></div>
                                                                                    </div>
                                                                                </div>     
                                                                          </div>
                                                                        </div>
                                                                </div> 
                                    
                                                            
                            </apex:outputpanel>
                            <apex:outputPanel layout="block" styleClass="actionButtons" style="float:right;margin: 20px 0px 0px 20px;">                 
                                <apex:inputText value="{!searchstring}" id="theTextInput" style="text-align:right;"/>
                                 <input type="hidden" value="{!JSENCODE(searchstring)}" id="searchstringVal"/>
                                <script>
                                    var theTextInput = '{!$Component.theTextInput}'; 
                                    var searchbutton = '{!$Component.searchbutton}'; 
                                    var theTextInputJq = '{!$Component.theTextInput}'.replace(/:/g,'\\:');
                                    var searchbuttonJq = '{!$Component.searchbutton}'.replace(/:/g,'\\:');;  
                                </script>
                            </apex:outputpanel>   
                            </apex:outputPanel>
                            
                            <apex:outputPanel layout="block" style="margin-left:20px;margin-right:20px;margin-top:5px;margin-bottom:5px;" rendered="{!!canRelease}">
                                <apex:outputText style="color:#dd1111;font-size:12px;" value="{!cantReleaseMsg}"/>
                            </apex:outputPanel>
                            
                            
                            <apex:outputPanel id="tableWrapper" styleclass="tableWrapper" layout="block">
                                <div class="tHeader" style="*margin-top:60px;height:37px;">
                                    <div style="background-image: url('{!URLFOR($Resource.XactlySMBResources ,'img/layout/topBgTable.png')}');margin-left:5px;margin-right:3px;">
                                        <div style="float: left;margin-left:-5px;"><img src="{!URLFOR($Resource.XactlySMBResources ,'img/layout/topLeftCurvy.png')}" width="5" height="37"/></div>
                                        <div class="headerLeftSide">
                                            <a href="{!$Page.XactlySMBCreateEditViews}?sctn=payMHR" onclick="if(!checkEditing()){return false;};" style="{!IF(isReadOnlyAdmin,'display:none','')}"><apex:outputText value="{!$Label.xactlyexpress__createNewView} |"/></a>
                                            <apex:outputPanel layout="none" rendered="{!!ISNULL(currentView.id)}">
                                                <a href="{!$Page.XactlySMBCreateEditViews}?sctn=payMHR&id={!JSENCODE(currentView.id)}" style="{!IF(isReadOnlyAdmin,'display:none','')}" onclick="if(!checkEditing()){return false;};"><apex:outputText value="{!$Label.xactlyexpress__EditView} |"/></a>
                                                <apex:commandLink id="deleteViewLink" action="{!deleteView}" style="{!IF(isReadOnlyAdmin,'display:none','')}" onclick="if(confirmDeleteView()){if(!checkEditing()){return false;}}else{return false;};"><apex:outputText value="{!$Label.xactlyexpress__DeleteView} |"/></apex:commandLink>
                                                <a href="{!$Page.XactlySMBCalculateManagePaymentsMHR}?page=holds&vwId={!URLENCODE(currentView.id)}" style="font-weight:bold;" onclick="if(!checkEditing()){return false;}"><apex:outputText value="{!$Label.xactlyexpress__Refresh}"/></a>
                                            </apex:outputPanel>
                                        </div>
                                        <apex:outputPanel layout="block" styleClass="headerRightSide" rendered="{!attrType == 'string' || attrType == 'usertype'}">
                                            <apex:repeat value="{!LetterList}" var="iter">
                                                <apex:commandLink style="{!IF(SL == iter,'background-color:#DEECFC;','')}" action="{!applyView}" onclick="updateInpCSV();if(!checkEditing()){return false;};waitOn();" value="{!iter}" rerender="tableWrapper,errorMsg" oncomplete="initSuperbox();waitOff();fixCelsDimensions();introAsTab();recheckInpCSV();">
                                                    <apex:param value="{!iter}" name="SL"/>
                                                </apex:commandLink>
                                            </apex:repeat>
                                            <apex:commandLink style="{!IF(SL == 'Other','background-color:#DEECFC;','')}" action="{!applyView}" onclick="updateInpCSV();if(!checkEditing()){return false;};waitOn();" value="{!$Label.xactlyexpress__Other}" rerender="tableWrapper,errorMsg" oncomplete="initSuperbox();waitOff();fixCelsDimensions();introAsTab();recheckInpCSV();">
                                                <apex:param value="Other" name="SL"/>
                                            </apex:commandLink>
                                            <apex:commandLink style="{!IF(SL == 'All','background-color:#DEECFC;','')}" action="{!applyView}" onclick="updateInpCSV();if(!checkEditing()){return false;};waitOn();" value="{!$Label.xactlyexpress__all}" rerender="tableWrapper,errorMsg" oncomplete="initSuperbox();waitOff();fixCelsDimensions();introAsTab();recheckInpCSV();">
                                                <apex:param value="All" name="SL"/>
                                            </apex:commandLink>
                                        </apex:outputPanel>
                                        <div style="float: right;margin-right:-5px;"><img src="{!URLFOR($Resource.XactlySMBResources ,'img/layout/topRightCurvy.png')}"/></div>
                                        &nbsp;&nbsp;
                                        <div style="clear:both"></div>
                                    </div> 
                                </div>
                                <apex:inputHidden id="inpCSV" value="{!inpCSV}"/>
                                <apex:inputHidden id="selectAllInView" value="{!selectAllInView}"/>
                               
                                <script>
                                    var inpCSV = '{!$Component.inpCSV}'.replace(/:/g,'\\:');
                                    var selectAllInView = '{!$Component.selectAllInView}'.replace(/:/g,'\\:');                                    
                                </script>
                                <div class="tContent">
                                    <div id="selectAllInViewTrigger1" style="padding:5px;display:none;">{!$Label.nRowsSelected} <a href="javascript:;" onclick="updateInpCSV();waitOn();selectAllHolds();">{!$Label.pressHere}</a></div>
                                    <div id="selectAllInViewTrigger2" style="padding:5px;{!IF(selectAllInView, '', 'display:none;')}">{!$Label.toUnselectedRows} <a href="javascript:;" onclick="updateInpCSV();waitOn();selectAllHolds();">{!$Label.pressHere}</a></div>
                                    <apex:outputPanel rendered="{!IF(AND(visibleRows.size > 0,attrs.size > 0),false,true)}">
                                        <apex:outputText value="{!$Label.xactlyexpress__noMHRforThisView}"/>
                                    </apex:outputPanel>

                                    <apex:outputPanel rendered="{!IF(AND(visibleRows.size > 0,attrs.size > 0),true,false)}" id="tableContainer2" styleClass="tableContainer2 hideable " layout="block">            
                                        <div class="FixedCelsTable">
                                            <div class="tablesHolder">
                                                <apex:outputPanel id="FixedCelsTableGrid">
                                                    <div id="recordsList" class="recordsList">
                                                        <input type="hidden" id="focusHandler"/>
                                                        <!-- Left Panel -->
                                                        <div id="rowsContainer" class="rows" style="width:120px">
                                                            <div id="rowsHeaders" class="rowsHeader even">
                                                                <table border="0"  cellspacing="0" width="120px">
                                                                    <tr class="objectHeaders even" style="height:31px;">
                                                                        <td width="80px" style="border-right:1px solid #C2DFFF;padding: 0px !important;">
                                                                            
                                                                            <apex:outputPanel layout="none" rendered="{!canRelease && !isReadOnlyAdmin}">
                                                                                <div style="float:left;"><input id="inputSelectAllHolds" type="checkbox" onclick="selectAll(this);"/></div>
                                                                                <select id="releaseOption"  onchange="doActionRelease()">
                                                                                    <option value="none">{!$Label.Actions}</option>
                                                                                    <option value="release">{!$Label.Release}</option>
                                                                                    <option value="deleteHolds">{!$Label.Delete}</option>
                                                                                </select>
                                                                            </apex:outputPanel>
                                                                            
                                                                            <apex:inputText style="display:none;" id="importReleaseType" styleClass="importReleaseType" value="{!importReleaseType}" />
                                                                        </td>
                                                                        <!-- <td width="95px" style="border-right:1px solid #C2DFFF;">
                                                                            <div style="float: left; margin-left: 2px;color: #3B6080;font-size:11px;font-weight:bold;text-align:center;white-space:nowrap;">
                                                                                {!$Label.details}
                                                                            </div>
                                                                        </td> -->
                                                                    </tr>
                                                                </table>
                                                            </div>
                                                            <div id="rows" class="rowsScroll" style="padding-top: 26px;">
                                                                <table border="0" class="rowsTable" cellspacing="0" width="120px">
                                                                    <apex:variable var="iterIndex" value="{!1}"/>
                                                                    <apex:repeat var="d" value="{!visibleRows}">
                                                                        <tr class="dataRow whiteCells rows{!FLOOR(iterIndex)} {!IF(mod(FLOOR(iterIndex),2)!=0,'odd','even')}">                              
                                                                            <td width="80px" style="text-align:right;" class="{!d.toRelease}">
                                                                                <apex:outputpanel layout="none" rendered="{!canRelease}">
                                                                                    <input type="checkbox" class="dealCheck" onClick="toggleRelease(this, {!iterIndex});"/>
                                                                                    <input type="hidden" value="{!d.toRelease}" class="dealLine"/>
                                                                                </apex:outputpanel>
                                                                                <apex:outputpanel layout="none" rendered="{!!canRelease}">
                                                                                    <input type="checkbox" disabled="disabled" class="dealCheck" />
                                                                                </apex:outputpanel>
                                                                            
                                                                               <apex:outputpanel layout="inline" style="margin-left: 12px; margin-right: 20px; float: right;">
                                                                              <div class="inteactionIconSprite loopCategory" onclick="if(false){alert('{!$Label.CalcErrorAdmin}');return false;}else{helpWindow = window.open('{!$Page.XactlySMBPaymentDetails}?deal={!d.d.id}&evn={!URLENCODE(d.eventName)}&pro={!IF(d.showBalancePaid, '1', '0')}', 'Help','location=0,status=0,scrollbars=1,width=1120px,height=690px');}" style="cursor:pointer;margin-left:auto;margin-right:auto;"></div>
                                                                               </apex:outputpanel>
                                                                            </td>
                                                                        </tr>
                                                                        <apex:variable var="iterIndex" value="{!iterIndex + 1}"/>
                                                                    </apex:repeat>
                                                                </table>
                                                          
                                                            </div>
                                                        </div>
                                                    
                                                        <!-- Top Panel -->
                                                        <div id="colsContainer" class="colsContainer">
                                                            <div id="cols"  class="columns">
                                                                <table id="cellsTable" cellspacing="0" border="0" style="margin-top: 0px;">
                                                                    <tr class="objectHeaders even" style="height:30px;">
                                                                        <apex:repeat var="h" value="{!attrs}"> 
                                                                           <td>                                                                           
                                                                              <div class="titles" style="overflow:hidden;">
                                                                                  <apex:outputPanel rendered="{!sortBy == h.XactlyExpress__DealColumnName__c}" layout="block" style="float:left;margin-top:3px;">
                                                                                        <div class="inteactionIconSprite {!IF(sortByDesc == true,'arrowDown','arrowUp')}"></div>
                                                                                  </apex:outputPanel>
                                                                                  <apex:commandLink rendered="{!balancePaidConstant != h.XactlyExpress__DealColumnName__c && balanceRemainingConstant != h.XactlyExpress__DealColumnName__c}" action="{!applyView}" onclick="if(!checkEditing()){return false;};waitOn();" value="{!IF((LOWER(h.XactlyExpress__DataType__c) == 'currency' || LOWER(h.XactlyExpress__DataType__c) == 'decimal') && h.id != null,h.Name+'*',IF(h.Name == 'Product Id',$Label.xactlyexpress__Product,IF(h.Name == 'Account Id',$Label.xactlyexpress__Account,h.Name)) )}" style="float: left; margin-left: 2px;color: #3B6080;font-size:11px;font-weight:bold;text-align:center;white-space:nowrap;" rerender="tableWrapper,errorMsg" oncomplete="initSuperbox();fixCelsDimensions();introAsTab();">
                                                                                      <apex:param value="{!h.XactlyExpress__DealColumnName__c}" name="sb"/>
                                                                                  </apex:commandLink>
                                                                                  <apex:outputPanel rendered="{!balancePaidConstant == h.XactlyExpress__DealColumnName__c || balanceRemainingConstant == h.XactlyExpress__DealColumnName__c}" layout="block" style="float: left; margin-left: 2px;color: #3B6080;font-size:11px;font-weight:bold;text-align:center;white-space:nowrap;">
                                                                                      <c:XactlySMBLongTextBubble text="{!h.Name}" maxLength="20" />
                                                                                  </apex:outputPanel>
                                                                              </div>
                                                                           </td> 
                                                                        </apex:repeat>
                                                                    </tr>
                                                                </table>
                                                            </div>
                                                        </div>
        
                                                        <!-- Cells Panel -->
                                                        <div id="cellContainer" class="cellContainer">
                                                            <div id="cells" class="cells">
                                                                <table id="dealsTable" cellspacing="0" border="0">
                                                                    <apex:variable var="iterIndex" value="{!1}"/>
                                                                    <apex:repeat var="d" value="{!visibleRows}">
                                                                        <tr class="dataRow whiteCells rows{!FLOOR(iterIndex)} {!IF(mod(FLOOR(iterIndex),2)!=0,'odd','even')}">
                                                                            <apex:repeat value="{!d.attrs}" var="y">
                                                                                <td>  
                                                                                    <apex:outputPanel rendered="{!TEXT(iterIndex) == '1'}" style="display:none" styleClass="cWidth">
                                                                                        <apex:outputText value="{!TEXT(FLOOR(y.customWidth))}"/>
                                                                                    </apex:outputPanel> 
                                                                                    <apex:outputPanel layout="block" style="width:{!IF(NOT(ISNULL(y.customWidth)),TEXT(FLOOR(y.customWidth)-4),'146')}px;overflow:hidden;white-space:nowrap">
                                    
                                                                                        <apex:outputPanel styleclass="rowShow{!RIGHT(TEXT(iterIndex),2)}" rendered="{!LEFT(y.field,7) == 'Boolean'}" layout="block">
                                                                                            <apex:outputText value="{!y.value}"/>&nbsp;
                                                                                        </apex:outputPanel>
                                                                                        <apex:outputPanel styleclass="rowShow{!RIGHT(TEXT(iterIndex),2)}" style="margin-left:3px;" rendered="{!balancePaidConstant == y.field}" layout="block">
                                                                                            <apex:inputText rendered="{!d.showBalancePaid}"  style="width:98% !important;display:none;" styleClass="balancePaid" value="{!d.balancePaid}" onblur="this.value = formatNumberEx(this.value, false)"/>
                                                                                        </apex:outputPanel>
                                                                                        <apex:outputPanel styleclass="rowShow{!RIGHT(TEXT(iterIndex),2)} {!IF(NOT(CONTAINS(d.BalanceRemaining,'-')),'editablePositive','editableNegative')}" rendered="{!balanceRemainingConstant == y.field}" layout="block">
                                                                                            <c:XactlySMBLongTextBubble text="{!d.BalanceRemaining}" maxLength="20" />
                                                                                        </apex:outputPanel>
                                                                                        <apex:outputPanel styleclass="rowShow{!RIGHT(TEXT(iterIndex),2)}" rendered="{!y.field == 'ProfileId__c'}" layout="block" onclick="OpenningUser(getId('{!JSENCODE(d.d.XactlyExpress__ProfileID__c)}'));">
                                                                                            <apex:outputText style="cursor:pointer;color:#396F90;" value="{!d.Salesperson}"/>&nbsp;
                                                                                        </apex:outputPanel>
                                                                                        <apex:outputPanel styleclass="rowShow{!RIGHT(TEXT(iterIndex),2)}" rendered="{!y.field == 'ProductId__c'}" layout="block" style="white-space:nowrap;">
                                                                                            <a href="../{!d.d.XactlyExpress__ProductID__c}"><apex:outputText value="{!d.ProductName}"/></a>&nbsp;
                                                                                        </apex:outputPanel>
                                                                                        
                                                                                        <apex:outputPanel styleclass="rowShow{!RIGHT(TEXT(iterIndex),2)}" rendered="{!y.field == 'AccountId__c'}" layout="block" style="white-space:nowrap;">
                                                                                            <a href="../{!d.d.XactlyExpress__AccountID__c}"><apex:outputText value="{!d.AccountName}"/></a>&nbsp;
                                                                                        </apex:outputPanel>
                                                                                        
                                                                                        <apex:outputPanel styleclass="rowShow{!RIGHT(TEXT(iterIndex),2)}" rendered="{!y.field == 'DealId__c'}" layout="block">
                                                                                            <apex:outputText value="{!d.d.XactlyExpress__DealID__c}"/>&nbsp;
                                                                                        </apex:outputPanel>
                                                                                        
                                                                                        <apex:outputPanel styleclass="rowShow{!RIGHT(TEXT(iterIndex),2)}" rendered="{!y.field == 'DealDate__c'}" layout="block">
                                                                                            <apex:outputText value="{!d.dateFormat}"/>&nbsp;
                                                                                        </apex:outputPanel>
                                                                                            
                                                                                        <apex:outputPanel styleclass="rowShow{!RIGHT(TEXT(iterIndex),2)}" rendered="{!AND(y.field != 'DealDate__c', y.datatype=='date')}" layout="block">
                                                                                            <apex:outputText value="{!y.value}"/>&nbsp;
                                                                                        </apex:outputPanel>  
                                                                                                                                                           
                                                                                        <apex:outputPanel styleclass="rowShow{!RIGHT(TEXT(iterIndex),2)} {!IF(OR(y.datatype == 'currency', y.datatype == 'decimal'),IF(NOT(CONTAINS(y.value,'-')),'editablePositive','editableNegative'),'')}" rendered="{!AND(y.field != balanceRemainingConstant, y.field != balancePaidConstant, y.field != 'ProductId__c', y.field != 'AccountId__c', y.field != 'DealId__c', y.field != 'ProfileId__c', y.field != 'DealDate__c', y.field != 'ProfileId__r.UserId__c',y.datatype!='date', LEFT(y.field,7) != 'Boolean')}" layout="block">
                                                                                            <apex:outputText value="{!y.value}"/>&nbsp;
                                                                                        </apex:outputPanel>  
                                                                                    </apex:outputPanel>
                                                                                </td>
                                                                            </apex:repeat>                                      
                                                                        </tr>
                                                                        <apex:variable var="iterIndex" value="{!iterIndex + 1}"/>
                                                                    </apex:repeat>
                                                                </table>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </apex:outputPanel>
                                            </div>
                                        </div>      
                                    </apex:outputPanel>                                   
                                </div>

                                <apex:inputHidden id="currentPage2" value="{!currentPage2}"/>
                                <apex:inputHidden id="limitAlertAny" value="{!limitAlert}"/>
                                <script>
                                    var currentPage2 = '{!$Component.currentPage2}'.replace(/:/g,'\\:');
                                    var limitAlertAny = '{!$Component.limitAlertAny}';
                                </script>
                                <div class="tFooter">
                                    <div class="footerLeftSide">
                                        <c:XactlySMBMessageBox msg="{!msgLimitAlert}" />
                                        <c:XactlySMBMessageBox msg="{!msgLimitSearchAlert}" />
                                    </div>
                                    <div class="prevNextWrapp">
                                             <apex:outputPanel layout="none" rendered="{!currentPage2 > 1}">
                                               <div id="btnFirstButton" onclick="jQuery('#'+currentPage2).val(1);waitOn();updateInpCSV();goToPageNew()">
                                            <div class="inteactionIconSprite btnFirstPagebk"></div>
                                            </div>
                                            <div id="btnPrevPageButton" onclick="if(!checkEditing()){return false;};$('#'+currentPage2).val($('#'+currentPage2).val()==1?1:parseInt($('#'+currentPage2).val())-1);waitOn();updateInpCSV();goToPageNew()">
                                                <div class="inteactionIconSprite btnPrevPagebk"></div>
                                            </div>
                                            <apex:outputText value="{!$Label.xactlyexpress__Previous}" style="color:#404040;"/>&nbsp;
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="none" rendered="{!currentPage2 == 1}">
                                                <div class="inteactionIconSprite btnFirstPage"></div>
                                                <div class="inteactionIconSprite btnPrevPage"></div><apex:outputText value="{!$Label.xactlyexpress__Previous}" style="color:#A8A8A8;"/>&nbsp;
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="none" rendered="{!currentPage2 < numPages2}">
                                              <apex:outputText value="{!$Label.xactlyexpress__Next}" style="color:#404040;"/>&nbsp;
                                               <div id="btnLastPageButton" onclick="if(!checkEditing()){return false;};$('#'+currentPage2).val({!numPages2});waitOn();updateInpCSV();goToPageNew()">
                                                   <div class="inteactionIconSprite btnLastPagebk"></div>
                                               </div>
                                                <div id="btnNextPageButton" onclick="if(!checkEditing()){return false;};$('#'+currentPage2).val($('#'+currentPage2).val()=={!numPages2}?{!numPages2}:parseInt($('#'+currentPage2).val())+1);waitOn();updateInpCSV();goToPageNew()">
                                                   <div class="inteactionIconSprite btnNextPagebk" ></div>
                                               </div>
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="none" rendered="{!currentPage2 == numPages2}">
                                                <apex:outputText value="{!$Label.xactlyexpress__Next}" style="color:#A8A8A8;"/>&nbsp;
                                                <div class="inteactionIconSprite btnLastPage" ></div>
                                                <div class="inteactionIconSprite btnNextPage" ></div>
                                            </apex:outputPanel>
                                            
                                     </div>
                                    <div class="footerRightSide">
                                        <apex:outputText value="{!$Label.xactlyexpress__Page}"/>&nbsp;
                                        <input type="Text" value="{!currentPage2}" onfocus="if(!checkEditing()){return false;};" onblur="if(!checkEditing()){return false;};if(isNaN(this.value) || this.value {!TRIM('<')} 1 || this.value {!TRIM('>')} {!numPages2}){return false};$('#'+currentPage2).val(this.value);waitOn();updateInpCSV();goToPageNew()" style="width:16px;"/>&nbsp;<apex:outputText value="{!$Label.xactlyexpress__Of}"/>&nbsp;<apex:outputText value="{!numPages2}"/>
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </apex:outputPanel>
                </apex:outputPanel><!-- END CONTENT -->
                <div style="clear:both"></div>
            </apex:outputPanel><!-- END CONTENTWRAPPER -->
            
            </div>
            <!-- FOOTER  -->
            <c:XactlySMBFooter packageVersion="{!packageVersion}" showPrevious="true" showNext="true" showSave="false" showRefresh="false" showExport="false"/>

            <!-- FILTERS -->
                
                <div id="filterScreen" style="width:850px; background:#F4F8FB; border: 3px solid #000000; padding:20px; top:150px; left:110px; position:absolute; z-index:3;{!IF(filterErrorMsg == '','display:none;','')}">
                    <apex:outputPanel id="filtersContent">
                        <div id="currentFilterText" style="margin-left:100px; margin-bottom:20px; font-weight:bold">
                            {!currentFilterText}
                        </div>
                        <div id="filterErrorMsg">
                        <apex:outputText value="{!filterErrorMsg}" escape="false" styleClass="errorCel"/>
                         <input type="hidden" value="{!filterErrorMsg}" id="filterErrorMsgVal"/>
                         </div>
                        <br/>                          
                        <div id="hideFilterButton" style="margin-left:15px;">
                            <div class="separateBtn btnToLeft btnAction">
                                <a href="javascript:;"  onclick="toggleShowFilter();" class="areaTitle actionButton newActionbutton">
                                    <span class="rightBtnOrange">
                                        <span class="leftBtnOrange">
                                            <span class="middleBtnOrange">
                                                {!$Label.HideFilter}
                                            </span>
                                        </span>
                                    </span>
                                </a>           
                            </div>  
                        </div>
                        <div style="clear:both;"></div>
                        <div id="whiteBox" style="width:820px; padding:10px; margin-top:20px; margin-left:5px; border: 1px solid #AAAAAA; background:#FFFFFF;">
                            <div style="font-weight:bold;">
                               
                                <apex:outputText value="{!$Label.xactlyexpress__ShowMeAllPaymentsWhere}...">
                                      <apex:param value="releases" />
                               </apex:outputText> 
                               
                            </div>
                            <div id="questionMark" style="position;absolute; width:32px; height:32px; top:0px; right:0px">
                            
                            </div>
                            <div id="leftFilterBox" style="padding:20px; background: #F4F8FB; float:left; width:385px;">
                                <apex:outputText value="{!$Label.xactlyexpress__FilterPayment}...">
                                      <apex:param value="releases" />
                               </apex:outputText> 
                                    
                            
                                <div id="leftBoxScroll" style="height:185px; overflow:auto;">                                    
                                    <apex:outputPanel id="filtersOptions">

                                        <table id="copyFilterValues">
                                            <apex:repeat value="{!filters}" var="filter">
                                                <tr> 
                                                    <td>  
                                                        <apex:selectList value="{!filter.field}" multiSelect="false" size="1" onchange="changeFilterField(this);waitOn();" styleClass="filterSelect{!filter.i}">
                                                            <apex:selectOptions value="{!filterFieldOptions}" />
                                                        </apex:selectList>
                                                    </td> 
                                                    <td>
                                                        <apex:selectList value="{!filter.operator}" multiSelect="false" size="1">
                                                            <apex:selectOptions value="{!filter.filterOptions}" /> 
                                                        </apex:selectList>
                                                    </td>
                                                    <td>          
                                                     <apex:inputText id="inp" value="{!filter.value}" style="{!IF(filter.field!='Status__c' && filter.fieldType != 'Salesperson' && filter.fieldType != 'CurrencySymb', '', 'display:none;')}" styleClass="filterInput" onfocus="ifDateCalendar({!filter.i}, '{!$Component.inp}', '{!filter.fieldType}');" onchange="refresFilterValue(this, '{!$Component.hdValue}')" />  
                                                     <apex:outputPanel layout="none" rendered="{!filter.fieldType != 'Salesperson'}">
                                                        <script>
                                                            document.getElementById('{!$Component.inp}').value = '';
                                                        </script>
                                                     </apex:outputPanel>
                                       
                                                     <apex:selectList value="{!filter.value}" multiSelect="false" size="1" id="crselect" style="{!IF(filter.fieldType == 'CurrencySymb', '', 'display:none;')}" onchange="refresFilterValue(this, '{!$Component.hdValue}');">
                                                         <apex:selectOptions value="{!allcurrencies}" /> 
                                                     </apex:selectList>
                                                     
                                                     <apex:selectList value="{!filter.value}" multiSelect="false" size="1" id="spselect" style="{!IF(filter.fieldType == 'Salesperson', '', 'display:none;')}" onchange="refresFilterValue(this, '{!$Component.hdValue}')">
                                                         <apex:selectOptions value="{!salespersons}" /> 
                                                     </apex:selectList>
                                                     
                                                     <apex:selectList value="{!filter.value}" multiSelect="false" size="1" id="statusSelect" style="{!IF(filter.field=='Status__c' && filter.fieldType != 'Salesperson' && filter.fieldType != 'CurrencySymb', '', 'display:none;')}" onchange="refresFilterValue(this, '{!$Component.hdValue}')">
                                                         <apex:selectOptions value="{!statusValues}" />
                                                     </apex:selectList>
                                                     <apex:inputHidden id="hdValue" value="{!filter.value}"/>   
                                                    </td>  
                                                    <td>  
                                                        <apex:commandLink action="{!removeFilter}" rerender="filtersContent" styleClass="remove{!filter.i}" onClick="waitOn();" oncomplete="fixCelsDimensions();loadBubbles();adjustSizeOnDrag();waitOff();">
                                                            <apex:param value="{!filter.i}" name="index"/>
                                                        </apex:commandLink>   
                                                        <div class="inteactionIconSprite delete_small" onclick="jQuery('.remove{!filter.i}').click();"></div>  
                                                    </td>
                                                </tr> 
                                            </apex:repeat>
                                        </table>
                                        
                                        <apex:actionFunction name="selectOperatorReload" action="{!selectOperatorReloadC}" rerender="filtersOptions" oncomplete="fixCelsDimensions();waitOff();adjustSizeOnDrag();">                        
                                            <apex:param name="fieldValue" value="" />
                                        </apex:actionFunction>
                                      </apex:outputPanel>
                                </div>
                                <div style="font-weight:bold; color:#446076;">
                                    <apex:commandLink action="{!addFilter}" rerender="filtersOptions" onclick="waitOn();" oncomplete="waitOff();fixCelsDimensions();loadBubbles();adjustSizeOnDrag();">
                                       {!$Label.xactlyexpress__AddAnotherFilter}
                                    </apex:commandLink>
                                </div>                                
                            </div>
                            <div id="rightFilterBox">
                            
                            </div>      
                            <div style="clear:both;"></div>
                            <div id="filterButtons" style="margin-top:10px">
                                <div class="btnToCenter btnAction">
                                    <div class="separateBtn">   
                                        <apex:commandLink action="{!applyFilters}" rerender="leftSidePanel, filtersContent"  onclick="updateInpUnd();waitOn();" oncomplete="waitOff();recheckInpUnd();fixCelsDimensions();changeApplyComplete();">
                                            <span class="rightBtnSilver">
                                                <span class="leftBtnSilver"> 
                                                    <span class="middleBtnSilver">
                                                        {!$Label.ApplyChanges}
                                                    </span>
                                                </span>  
                                            </span> 
                                        </apex:commandLink>
                                    </div>
                                    <div class="separateBtn">
                                        <apex:commandLink action="{!discardChange}" onclick="waitOn();" rerender="filtersContent" oncomplete="waitOff();fixCelsDimensions();toggleShowFilter();">
                                            <span class="rightBtnSilver"> 
                                                <span class="leftBtnSilver"> 
                                                    <span class="middleBtnSilver">
                                                        {!$Label.DiscardChanges}
                                                    </span>
                                                </span>
                                            </span>
                                        </apex:commandLink>
                                    </div>  
                                    <div class="separateBtn">
                                        <apex:commandLink action="{!clearAllFilter}" onclick="waitOn();updateInpUnd();" rerender="filtersContent" oncomplete="waitOff();recheckInpUnd();fixCelsDimensions();">
                                                    <span class="rightBtnSilver">
                                                        <span class="leftBtnSilver">
                                                            <span class="middleBtnSilver">
                                                                {!$Label.ClearFilters}
                                                            </span>
                                                        </span>
                                                    </span>
                                                </apex:commandLink>
                                            </div>  
                                        </div>
                                    </div> 
                                    <div style="clear:both;"></div>  
                               </div>
                            </apex:outputPanel>                 
                        </div>

            
            <apex:actionFunction action="{!applyView}" name="refreshRowLimit"/>
            <apex:actionFunction action="{!selectAllHolds}" name="selectAllHolds" rerender="errorMsg,inpCSV,selectAllInView" oncomplete="waitOff();recheckInpCSV();" />
            <apex:actionFunction name="goToPageNew" action="{!goToPageNew}"/>

            <apex:actionFunction name="doSearch" action="{!doSearch}" rerender="tableWrapper, viewDrpdwn, FixedCelsTableGrid" onComplete="initSuperbox();SearchComplete();recheckInpCSV();"/>                                           
            <apex:actionFunction name="exportHold" action="{!exportHolds}" rerender="batchBox" oncomplete="waitOff();checkExportingHolds();" />
            <apex:actionFunction name="checkExportHolds" action="{!checkExportHolds}" rerender="batchBox" oncomplete="waitOff();checkExportingHolds();" />

            <apex:actionFunction name="clearErrorMessage" action="{!clearErrorMsg}" rerender="errorMsg" oncomplete="waitOff();"/>
            <apex:actionFunction name="loadOldPage" action="{!loadOldPage}" rerender="oldMHR" oncomplete="initSuperbox();fixCelsDimensions();$('.oldMHR').show();$('.newMHR').hide();togglePage();"/>

            <apex:actionFunction name="refreshImportStatus" action="{!refreshImportStatusC}" rerender="leftSidePanel,undoReleasebutton" oncomplete="initSuperbox();fixCelsDimensions();waitOff();refreshingImport();"/>
            <apex:actionFunction name="ultimateRefreshImportStatus" action="{!refreshImportStatusC}" rerender="leftSidePanel,tableWrapper,undoReleasebutton" oncomplete="initSuperbox();fixCelsDimensions();waitOff();recheckInpUnd();"/>
            <apex:actionFunction name="unrelease" action="{!doUnrelease}"  rerender="leftSidePanel,undoReleasebutton" oncomplete="initSuperbox();fixCelsDimensions();waitOff();refreshingUndo();recheckInpUnd();"/>
            <apex:actionFunction name="refreshUndoStatus" action="{!refreshUndoStatusC}" rerender="leftSidePanel,undoReleasebutton" oncomplete="initSuperbox();fixCelsDimensions();waitOff();refreshingUndo();"/>
            <apex:actionFunction name="ultimateRefreshUndoStatus" action="{!refreshUndoStatusC}" rerender="leftSidePanel,undoReleasebutton" oncomplete="initSuperbox();fixCelsDimensions();waitOn();refreshView();"/>
            <apex:actionFunction name="resetFilterAf" action="{!discardFilters}" rerender="filtersDetails, filtersOptions, tableCont, paginator" oncomplete="initSuperbox();fixCelsDimensions();waitOff();" />
            <apex:actionFunction name="refreshView" action="{!applyView}" rerender="tableWrapper,errorMsg,undoReleasebutton" oncomplete="initSuperbox();fixCelsDimensions();introAsTab();waitOff();"/>
            <apex:actionFunction name="releaseNew" action="{!doRelease}"/>                                            
            <apex:actionFunction name="release" action="{!doRelease}"/>     
            <apex:actionFunction name="goToPageAF" action="{!goToPage}"/>
                
            <apex:actionfunction id="chatterLoader" name="loadChatter" action="{!loadChatter}" rerender="chatter" oncomplete="waitOff();initChatter();jQuery('.innerOcultar a').click();"/>
            <apex:actionFunction name="exportRelease" action="{!genReleaseResults}" />
            <apex:actionFunction action="{!importUndo}"  name="importUndoAF"/>      
           
        <!--URLS-->
    <input type="hidden" value="{!$Page.XactlySMBCalculateManagePaymentsMHR}" id="XactlySMBCalculateManagePaymentsMHRURL"/>
    <input type="hidden" value="{!$Page.XactlySMBMHRAttributeOrder}" id="XactlySMBMHRAttributeOrderURL"/>
    <input type="hidden" value="{!$Page.XactlySMBCalculateManagePayments}" id="XactlySMBCalculateManagePaymentsURL"/>
    <input type="hidden" value="{!$Page.XactlySMBManageDraws}?page=holds" id="XactlySMBManageDrawsURL"/>
    <input type="hidden" value="{!$Page.XactlySMBDealDetails}" id="XactlySMBDealDetailsURL"/>
    <!--controller vars -->
    <input type="hidden" value="{!actSect}" id="actSectVal"/>

    <input type="hidden" value="{!doingSearch}" id="doingSearchVal"/>
   
    <input type="hidden" value="{!JSENCODE(currentView.id)}" id="currentViewID"/>
   
    <input type="hidden" value="{!numPages}" id="numPagesVal"/>
    
    <!--Labels -->
    <input type="hidden" value="{!$Label.confirmDeleteHolds}" id="confirmDeleteHoldsLabel"/>
    <input type="hidden" value="{!$Label.NotACSVFile}" id="NotACSVFileLabel"/>
    <input type="hidden" value="{!$Label.youMustSelectARow}" id="youMustSelectARowLabel"/>
    <input type="hidden" value="{!JSENCODE($Label.exportTooLargeHolds)}" id="exportTooLargeHoldsLabel"/>
    <input type="hidden" value="{!$Label.importFinishSuccess}" id="importFinishSuccessLabel"/>
    <input type="hidden" value="{!$Label.deleteReleaseFinishSuccess}" id="deleteReleaseFinishSuccessLabel"/>
    <input type="hidden" value="{!$Label.releaseFinishError}" id="releaseFinishErrorLabel"/>
    <input type="hidden" value="{!$Label.releaseUndoFinishSuccess}" id="importUndoFinishSuccessLabel"/>
    <input type="hidden" value="{!$Label.releaseUndoFinishError}" id="importUndoFinishErrorLabel"/>
    <input type="hidden" value="{!$Label.deleteCreditQuest}" id="deleteCreditQuestLabel"/>
    <input type="hidden" value="{!$Label.releaseFinishSuccess}" id="releaseFinishSuccessLabel"/>
    <input type="hidden" value="{!$Label.importFinishError}" id="importFinishErrorLabel"/>
    <input type="hidden" value="{!$Label.SearchEmpty}" id="SearchEmptyLabel"/>
    <input type="hidden" value="{!$Label.SearchMaxLimit}" id="SearchMaxLimitLabel"/>
    </apex:form>
    </div>
    
    <a id="manageDeactiveUsersTrigger" rel="superbox[iframe#split.xactlySuperBox][506x370]" href="{!$Page.XactlySMBManageDeactiveUsers}" style="display:none;"></a>
    <a id="openImportReleasePopup" rel="superbox[iframe#split.xactlySuperBox][1000x750]" href="{!$Page.XactlySMBImportReleases}"></a>
    <c:XactlySMBFooterScript isChatterEnabled="{!isChatterEnabled}" loadPerformantJs="true" loadHeaderJs="true" />
    <apex:stylesheet value="{!URLFOR($Resource.XactlyExpress__XactlySMBResources ,'pages/css/XactlySMBCalculateManagePaymentsMHR.css')}" />
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources ,'js/jQueryOverflow.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources,'pages/js/XactlySMBCalculateManagePaymentMHR.js')}"></script> 
     <c:XactlySMBFeedbackTab />
<script>
jQuery(document).ready(function (){
    loadBubbles();
        });
 </script> 
</apex:page>
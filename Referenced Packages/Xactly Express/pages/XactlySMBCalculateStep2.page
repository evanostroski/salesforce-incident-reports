<!--
    Developed by Timba Software Corp. www.timbasoftware.com admin@timbasoftware.com
    This page lists plans
    @author Alvaro Scuccimarra <ascuccimarra@timbasoftware.com>
-->
<apex:page id="manageDeals" cache="false" controller="XactlyExpress.XactlySMBCalculateStep2" sidebar="false" showHeader="false" standardStylesheets="true"  action="{!redirectWhenAccessIsDenied}">
    <c:XactlySMBCursor />
    <title>{!$Label.xactlyexpress__Calculate}: {!$Label.xactlyexpress__ImportData}</title>
    <apex:stylesheet value="{!URLFOR($Resource.XactlyExpress__XactlySMBResources ,'pages/css/XactlySMBCalculateStep2.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.XactlyExpress__XactlySMBResources ,'pages/css/XactlySMBCalculateCalculate.css')}"/>
    <!-- PAGE WRAPPER -->
    <div class="pageContent" id="pContent">

        <apex:form id="theForm1">
            <!-- HEADER -->
            <apex:outputPanel layout="block" styleClass="header">
                <c:XactlySMBHeader useGearImp="true" isAdmin="{!isAdmin}"  isActive="{!isActive}" nbrSeparator="{!nbrSeparator}" nbrDecimal="{!nbrDecimal}" currentUserOrSlected="{!currentUserOrSlected}" emulatingUserURLAppend="{!emulatingUserURLAppend}" wqlabel="{!currentSettings.quotasPluralCap}" wclabel="{!currentSettings.creditsPluralCap}" wlabel="{!currentSettings.dealsPluralCap}" stepHelp="CalculateStep2"  hlabel="{!ImportYourLatestDealDataLabel}" step="1" wtype="calculate" showPrevious="false" showNext="true" showSave="false" showRefresh="false" showExport="false" selected="1" selectedLevel2="1"  selectedLevel3="1"/>
            </apex:outputPanel>
        </apex:form>


        <apex:form id="theForm2">
            <div class="error">
            <!-- INSUFFICIENT PERMISSIONS -->
                <apex:outputPanel rendered="{!!isAdmin || !isActive}">
                    <c:XactlySMBErrorMsg error="{!$Label.xactlyexpress__InsufficientPermissions}" />
                </apex:outputPanel>
            </div>
        </apex:form>

        <div id="shadowContainer" class="shadowContainer">
        <apex:outputpanel layout="block" id="chatter" styleClass="additionalContent" rendered="{!isAdmin && isActive}">
            <apex:form id="theForm3">
              <c:XactlySMBChatterWall objectId="{!$User.Id}" showHeader="true" showWall="true" currentPage="{!$CurrentPage.Name}" chatterCurrentUserImageUrl="{!chatterCurrentUser_ImageUrl}" rendered="{!isChatterEnabled && isChatterLoaded}"/>
            </apex:form>
        </apex:outputPanel>

        <!-- MAIN CONTENT -->
        <apex:outputPanel layout="block" styleClass="mainContent" id="mainContent" rendered="{!isAdmin && isActive}">
            <apex:form id="theForm4">

                <apex:actionFunction name="changeImportSourceF" action="{!onChangeImportSource}" />

                <!-- CONTENT -->
                <apex:outputPanel layout="block" styleClass="content" id="content" style="width:100%">

                    <apex:outputPanel id="errorMsg" layout="block" styleClass="errorScrollBox" style="width:100%">
                        <apex:outputPanel layout="block" rendered="{!errorMsg!=''}" style="width:100%">
                          <apex:outputPanel layout="block" style="margin-right:20px;"><c:XactlySMBErrorMsg error="{!toShowError + errorMsg}" errStyle="background:#FF0000;color:#FFFFFF;font-size:16px;font-weight:bold;overflow:auto;max-height:100px;"/></apex:outputPanel>
                        </apex:outputPanel>
                    </apex:outputPanel>

                    <div style="width:840px;margin-left:100px;">
                        <div class="box">
                            <div class="img_repeat tm">
                                <div class="img_no_repeat tl"></div>
                                <div class="img_no_repeat tr"></div>
                                <div style="clear:both"></div>
                            </div>
                            <div class="roundedBox">
                                <div class="boxHeader">
                                    <div class="titleWrapper">
                                        <div class="mainTitle PNovaSemiBold17c3">{!$Label.SourceOfImport}</div>
                                        <div class="detailedTitle HelveticaRegular12c3">{!$Label.ImportStep1Sub}</div>
                                    </div>
                                    <div class="extraTitleStuff"></div>
                                    <div style="clear:both"></div>
                                </div>

                                <div class="boxContent">
                                    <div style="float:left;padding-top:12px">
                                        <div class="importSourceSprite transparentArrow" style="left:{!IF(currentImportSource.SourceType__c == IMPORT_SOURCE_SALESFORCE,'167',IF(currentImportSource.SourceType__c == IMPORT_SOURCE_CSV, '414', '663'))}px;"></div>
                                        <div class="{!IF(importSources.size==0,'disabledOpacityButton','')} importSourceSprite salesforceIcon importSourceIcon" style="vertical-align:middle;">
                                            <apex:outputPanel layout="none" rendered="{!selectedSourceType == IMPORT_SOURCE_SALESFORCE}">
                                                <input id="IS1" type="radio" value="{!IMPORT_SOURCE_SALESFORCE}" name="ImportSource"  onclick="changeImportSource(this.value);"  style="display: {!IF(importSources.size == 0,'none','')};" class="{!IF(importSources.size == 0,'disabledOpacityButton','')}" checked="checked" />
                                                <input id="disabledInput" type="radio" value="{!IMPORT_SOURCE_SALESFORCE}" disabled="disabled" style="display: {!IF(importSources.size == 0,'','none')};" />
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="none" rendered="{!selectedSourceType != IMPORT_SOURCE_SALESFORCE}">
                                                <input id="IS1" type="radio" value="{!IMPORT_SOURCE_SALESFORCE}" name="ImportSource"  onclick="changeImportSource(this.value);" style="display: {!IF(importSources.size == 0,'none','')};" class="{!IF(importSources.size == 0,'disabledOpacityButton','')}" />
                                                <input id="disabledInput" type="radio" value="{!IMPORT_SOURCE_SALESFORCE}" disabled="disabled" style="display: {!IF(importSources.size == 0,'','none')};" />
                                            </apex:outputPanel>
                                        </div>
                                        <div class="importSourceSprite csvIcon importSourceIcon">
                                            <apex:outputPanel layout="none" rendered="{!selectedSourceType == IMPORT_SOURCE_CSV}">
                                                <input id="IS2" type="radio" value="{!IMPORT_SOURCE_CSV}" name="ImportSource"  onclick="changeImportSource(this.value);" checked="checked" />
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="none" rendered="{!selectedSourceType != IMPORT_SOURCE_CSV}">
                                                <input id="IS2" type="radio" value="{!IMPORT_SOURCE_CSV}" name="ImportSource"  onclick="changeImportSource(this.value);"/>
                                            </apex:outputPanel>
                                        </div>
                                        <apex:outputPanel layout="none" rendered="{!quickbooksImportSources.size > 0}">
                                        <div class="importSourceSprite quickbooksIcon importSourceIcon {!IF(NOT(isIntuitConnected), 'disabledOpacityButton', '')}">
                                            <apex:outputtext escape="false" value="<input id='IS3' type='radio' value='{!IMPORT_SOURCE_QUICKBOOK}' name='ImportSource' {!IF(quickbooksImportSources.size == 0 || NOT(isIntuitConnected), 'disabled', '')} onclick='changeImportSource(this.value);' "/><apex:outputtext escape="false" value="{!IF(selectedSourceType == IMPORT_SOURCE_QUICKBOOK,'checked=\"checked\"','')}" />
                                            <apex:outputtext escape="false" value="/>"/>
                                        </div>
                                        <apex:outputtext rendered="{!NOT(isIntuitConnected)}" style="color: #F00000;font-size: 13px;font-weight: bold;right: 245px;position: absolute; margin-top: 35px;" value="{!$Label.xactlyexpress__NotConnected}" />
                                        </apex:outputPanel>
                                        <apex:inputHidden value="{!selectedSourceType}" id="selectedSourceType"/>
                                    </div>
                                    <div style="clear:both"></div>
                                </div>
                            </div>
                            <div style="width:auto" class="img_repeat bm roundedBox"></div>
                            <!--Beginning of criteria section-->
                            <div class="roundedBox">
                                <div class="boxContent">
                                    <div class="ImportTypeSalesforce" style="padding-top:12px;{!IF(selectedSourceType == IMPORT_SOURCE_SALESFORCE,'','display:none')}">
                                        <div style="float:left;margin-right:24px;">
                                            <span style="margin-left: 31px; margin-right: 15px;">{!$Label.xactlyexpress__ForMapping}</span>
                                            <apex:selectList styleClass="toReSetter fieldDropdown" id="salesforceSource" onchange="changeImportSource(null);" size="1" multiselect="false" value="{!SelectedImportSourceID}">
                                                 <apex:selectOptions value="{!importSources}" />
                                            </apex:selectList>
                                        </div>
                                        <div style="{!IF(selectedSourceType == IMPORT_SOURCE_CSV,'display:none;','')}">
                                           {!$Label.IsThereAF}&nbsp;
                                           <apex:outputpanel layout="none" rendered="{!IF(ImportCriteria == 'formula',true,false)}">
                                               <input type="checkbox" checked="checked" onclick="waitOn();if(this.checked == true)jQuery('.SetImportCriteria')[0].value='formula'; else jQuery('.SetImportCriteria')[0].value= jQuery('.opportunityFieldReadyEmptyValue')[0].value;refreshConditionField();" />
                                           </apex:outputpanel>
                                           <apex:outputpanel layout="none" rendered="{!IF(ImportCriteria == 'formula',false,true)}">
                                               <input type="checkbox" onclick="waitOn();if(this.checked == true)jQuery('.SetImportCriteria')[0].value='formula'; else jQuery('.SetImportCriteria')[0].value= jQuery('.opportunityFieldReadyEmptyValue')[0].value;refreshConditionField();" />
                                           </apex:outputpanel>
                                        </div>
                                        <div style="margin:20px 0 0 30px">
                                            <apex:outputPanel layout="block" style="float:left;margin-right:30px;{!IF(ImportCriteria == 'formula','display:none;','')}">
                                                <span style="margin: 0 15px 0 7px;">{!$Label.xactlyexpress__WhenField}</span>
                                                <apex:selectList id="oppFildName" size="1" multiselect="false" styleClass="opportunityFieldName fieldDropdown" value="{!settings.XactlyExpress__OpportunityFieldReady__c}"  disabled="{!importCriteria == 'formula'}"  onchange="swapMainTypeCondition();jQuery('[id$=\'OpportunityFieldReadyValue\']')[0].value = '';"  >
                                                    <apex:selectOptions value="{!opportunityFields}" />
                                                </apex:selectList>
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="block" style="float:left;margin-right:30px;{!IF(ImportCriteria == 'formula','display:none;','')}">
                                                <apex:selectList size="1" id="opportunityFieldReadyEmptyValue" multiselect="false" styleClass="opportunityFieldReadyEmptyValue" disabled="{!importCriteria == 'formula'}" value="{!importCriteria}" onchange="jQuery('.SetImportCriteria')[0].value= this.value;swapMainTypeCondition();">
                                                    <apex:selectOptions value="{!fieldReadyEmptyValues}" />
                                                </apex:selectList>
                                                <apex:inputText value="{!importCriteria}" styleClass="SetImportCriteria" id="SetImportCriteria"/>
                                                <span id="isnotblank" style="{!IF(settings.XactlyExpress__OpportunityFieldReadyEmptyValue__c,'','display:none;')}">({!$Label.xactlyexpress__EGIsNotBlank})</span>
                                            </apex:outputPanel>
                                            <div id="mainConditionWrapper" style="float:left;margin-right:30px; {!IF(importCriteria == 'formula', 'display:none;', '')}">

                                                <div style="display:none;"><apex:inputField id="dealDate" value="{!dummyDeal.XactlyExpress__DealDate__c}" /></div>

                                                <input id="OpportunityFieldReadyValueString" class="stringInputCriteria" value="{!IF(importCriteria != 'true' && selectedAttributeType == 'String', ''+settings.OpportunityFieldReadyValue__c, '')}"  onclick="criteriasHandler.clrErr(this);" onblur="isValidValue(this);jQuery('[id$=\'OpportunityFieldReadyValue\']')[0].value = this.value;" style="{!IF(importCriteria != 'true' && selectedAttributeType == 'String','','display:none;')}" />
                                                <input id="OpportunityFieldReadyValueDecimal" onblur="jQuery('[id$=\'OpportunityFieldReadyValue\']')[0].value = unformatNumber(this.value);criteriasHandler.formatNbr(this, jQuery('input[id$=\'selectedAttributeType\']')[0]);criteriasHandler.chkVal(this, jQuery('input[id$=\'selectedAttributeType\']')[0]);this.value = unformatNumber(this.value);this.value = formatNumberEx(this.value, false);" class="numberInputCriteria {!IF(selectedAttributeType == 'Integer','impInt','')} {!IF(importCriteria != 'true' && (selectedAttributeType == 'Decimal' ||selectedAttributeType == 'Currency' || selectedAttributeType == 'Number' || selectedAttributeType == 'Integer'),' displayed',' hidden')}" value="{!IF(importCriteria != 'true' && (selectedAttributeType == 'Decimal' ||selectedAttributeType == 'Currency' || selectedAttributeType == 'Number' || selectedAttributeType == 'Integer'), ''+OpportunityFieldReadyValue, '')}" />
                                                <input id="OpportunityFieldReadyValueDate" name="OpportunityFieldReadyValueDate" autocomplete="off" onclick="criteriasHandler.clrErr(this);" onfocus="showCalendar('OpportunityFieldReadyValueDate');" onchange="criteriasHandler.chkVal(this, jQuery('input[id$=\'selectedAttributeType\']')[0]);jQuery('[id$=\'OpportunityFieldReadyValue\']')[0].value = this.value;" class="dateInputCriteria {!IF(importCriteria != 'true' && (selectedAttributeType == 'Date' || selectedAttributeType == 'DateTime'),' displayed',' hidden')}"  value="{!IF(importCriteria != 'true' && (selectedAttributeType == 'Date' || selectedAttributeType == 'DateTime'), ''+settings.OpportunityFieldReadyValue__c, '')}" />

                                                <apex:selectList id="OpportunityFieldReadyValueBoolean" onchange="jQuery('[id$=\'OpportunityFieldReadyValue\']')[0].value = this.value;" multiselect="false" size="1" value="{!settings.XactlyExpress__OpportunityFieldReadyValue__c}" styleClass="booleanInputCriteria {!IF(importCriteria != 'true' && selectedAttributeType == 'Boolean', 'displayed', 'hidden')}">
                                                    <apex:selectOptions value="{!booleanOptions}" />
                                                </apex:selectList>

                                                <apex:selectList id="OpportunityFieldReadyValueSalespersons" multiselect="false" size="1" value="{!settings.XactlyExpress__OpportunityFieldReadyValue__c}" onchange="jQuery('[id$=\'OpportunityFieldReadyValue\']')[0].value = this.options[this.selectedIndex].value;" styleClass="salespersonDropdown {!IF(importCriteria != 'true' && selectedAttributeType == 'User',' displayed',' hidden')}">
                                                    <apex:selectOptions value="{!Salespersons}" />
                                                </apex:selectList>

                                                <apex:selectList id="OpportunityFieldReadyValueCurrencySymbOptions" multiselect="false" size="1" value="{!settings.XactlyExpress__OpportunityFieldReadyValue__c}" onchange="jQuery('[id$=\'OpportunityFieldReadyValue\']')[0].value = this.options[this.selectedIndex].value;"  styleClass="currencySymbOptions {!IF(importCriteria != 'true' && selectedAttributeType == 'CurrencySymb' ,' displayed',' hidden')}" style="margin-right:20px;">
                                                    <apex:selectOptions value="{!allcurrencies}" />
                                                </apex:selectList>

                                                <div id="999999-account" style="width:120px;margin-right:20px;" class="accountInputCriteria{!IF(importCriteria != 'true' && selectedAttributeType == 'Account',' displayed',' hidden')}">
                                                     <apex:inputText id="orderInput" styleClass="999999-accountName accountName" onfocus="this.blur();jQuery(this).prop('readonly', true);" value="{!selectedLookupName}" style="width:100px !important;width:100px;color:#000000;cursor:default;background-color:#EFEFEF;"/>
                                                      <div class="inteactionIconSprite magnifier" style="cursor:pointer;float:right" onclick="criteriasHandler.clrErr(this);javascript: accountsWindow = window.open('/apex/XactlySMBAccountPopup?index=999999', 'Accounts','location=0,status=0,scrollbars=1,width=700px,height=500px'); accountsWindow.moveTo(100,100);"></div>

                                                     <input id="999999-account-hidden" type="text" style="display:none;" class="999999-accountId lookupHiddenId" value="{!settings.XactlyExpress__OpportunityFieldReadyValue__c}"/>
                                                </div>

                                                <apex:inputHidden id="OpportunityFieldReadyValue" value="{!settings.XactlyExpress__OpportunityFieldReadyValue__c}" />
                                                <apex:inputHidden id="selectedAttributeType" value="{!selectedAttributeType}" />

                                            </div>
                                        </div>
                                        <div style="clear:both;"></div>

                                            <apex:repeat value="{!IF(selectedSourceType == IMPORT_SOURCE_QUICKBOOK, quickbooksAttrTypes, attributeTypes)}" var="at">
                                                <input type="hidden"  value="{!at.typ}" id="attrTypes{!at.s}"/>
                                            </apex:repeat>
                                        <div id="criteriasFormula" style="width: 830px; {!if(importCriteria == 'formula','','display:none;')}">
                                            <apex:actionFunction name="dummy" action="{!addCriteria}" oncomplete="waitOff();setOperatorSelectValues();introAsTab();criteriasHandler.updateAdvancedFormula();" rerender="fieldSetContainer"/>
                                            <apex:outputPanel id="fieldSetContainer">
                                                <div style="margin-top:10px;max-height:265px;overflow:auto" id="tableCrtieriasContainer">
                                                    <table id="tableCriterias">
                                                        <tbody id="tableCriteriasBody">
                                                            <apex:repeat value="{!importCriterias}" id="repImportCriterias" var="c">
                                                                <tr class="tableCriteriasRow{!ROUND(c.c.Order__c,0)}">
                                                                    <td> <div class="" style="{!IF(ROUND(c.c.Order__c,0) == 1, '', 'margin-right:78px')}">{!ROUND(c.c.Order__c,0)}<apex:outputPanel layout="inline" style="margin-left: 27px; margin-right: 11px;" rendered="{!ROUND(c.c.XactlyExpress__Order__c,0) == 1}">{!$Label.xactlyexpress__WhenField}</apex:outputPanel></div></td>
                                                                    <td class="dealAttrCell">
                                                                    
                                                                        <apex:selectList id="selectAttr" style="margin-right:20px;" value="{!c.c.XactlyExpress__ReadyField__c}" multiselect="false" size="1" styleClass="criteriaAttributeSelect fieldDropdown" onchange="criteriasHandler.criteriaAttributeChange(document.getElementById('{!$Component.selectAttr}'),document.getElementById('{!$Component.dataType}'));jQuery('.errorMsg',jQuery(this).parent().parent()).remove();jQuery('.tableCriteriasRow{!ROUND(c.c.XactlyExpress__Order__c,0)} .salespersonDropdown:visible').change();">
                                                                            <apex:selectOptions value="{!opportunityFields}" />
                                                                        </apex:selectList>
                                                                    
                                                                    </td>
                                                                    <td class="operatorCell">

                                                                        <apex:selectList value="{!c.c.XactlyExpress__ReadyOperator__c}" multiselect="false" size="1" id="comparatorOptions" styleClass="strOps hiddenOpSelect {!IF(c.dataType == 'String' || c.dataType == 'Lookups',' displayed',' hidden')}" onchange="criteriasHandler.hiddenOpChange(this);criteriasHandler.toogleValueCell(this);" style="width:100px;margin-right:20px;">
                                                                            <apex:selectOptions value="{!comparatorOptions}" />
                                                                        </apex:selectList>

                                                                        <apex:selectList value="{!c.c.XactlyExpress__ReadyOperator__c}" multiselect="false" size="1" id="NonStrcomparatorOptions" styleClass="nonStrOps hiddenOpSelect {!IF(c.dataType == 'Decimal' || c.dataType == 'Currency' || c.dataType == 'Integer' && c.dataType != 'Date' && c.dataType != 'DateTime',' displayed',' hidden')}" onchange="criteriasHandler.hiddenOpChange(this);criteriasHandler.toogleValueCell(this);" style="width:100px;margin-right:20px;">
                                                                            <apex:selectOptions value="{!NonStrcomparatorOptions}" />
                                                                        </apex:selectList>

                                                                        <apex:selectList value="{!c.c.XactlyExpress__ReadyOperator__c}" multiselect="false" size="1" id="lookupComparatorOptions" styleClass="lookupOps hiddenOpSelect{!IF(c.dataType == 'Account' || c.dataType == 'Product' || (c.dataType != 'User' && c.dataType != 'Decimal' && c.dataType != 'Currency' && c.dataType != 'Integer' && c.dataType != 'Date' && c.dataType != 'DateTime' && c.dataType != 'String' && c.dataType != 'Boolean' && c.dataType != 'Lookups'),' displayed',' hidden')}" onchange="criteriasHandler.hiddenOpChange(this);criteriasHandler.toogleValueCell(this);" style="width:100px;margin-right:20px;">
                                                                            <apex:selectOptions value="{!lookupComparatorOptions}" />
                                                                        </apex:selectList>

                                                                        <apex:selectList value="{!c.c.XactlyExpress__ReadyOperator__c}" multiselect="false" size="1" id="comparatorEqualNotEqualOptions" styleClass="equalNotEqualOps {!IF(c.c.XactlyExpress__ReadyOperator__c=='<>'  && JSENCODE(c.dataType)== 'Boolean','toChangeDist','')} hiddenOpSelect{!IF(c.dataType == 'Boolean' || c.dataType == 'User', ' displayed',' hidden')}" onchange="criteriasHandler.hiddenOpChange(this);criteriasHandler.toogleValueCell(this);" style="width:100px;margin-right:20px;">
                                                                            <apex:selectOptions value="{!comparatorEqualNotEqualOptions}" />
                                                                        </apex:selectList>

                                                                        <apex:selectList value="{!c.c.XactlyExpress__ReadyOperator__c}" multiselect="false" size="1" id="DateComparatorOptions" styleClass="dateByCurrPrdOps hiddenOpSelect{!IF((c.dataType == 'Date' || c.dataType == 'DateTime'),' displayed',' hidden')}" onchange="criteriasHandler.hiddenOpChange(this);criteriasHandler.toogleValueCell(this);firstSelectCriteriaValue({!ROUND(c.c.XactlyExpress__Order__c,0)});" style="margin-right:20px;">
                                                                            <apex:selectOptions value="{!DateComparatorOptions}" />
                                                                        </apex:selectList>

                                                                        <apex:inputHidden value="{!c.c.XactlyExpress__ReadyOperator__c}" />


                                                                    </td>
                                                                    <td class="valueCell">

                                                                        <input id="decimalC{!ROUND(c.c.Order__c,0)}" autofocus="autofocus" onblur="criteriasHandler.formatNbr(this, document.getElementById('{!$Component.dataType}'));criteriasHandler.chkVal(this, document.getElementById('{!$Component.dataType}'));jQuery('.masterInput', jQuery(this).parent())[0].value = unformatNumber(this.value);this.value = unformatNumber(this.value);this.value = formatNumberEx(this.value, false);" class="numberInputCriteria {!IF(c.dataType == 'Integer','impInt','')} {!IF(c.dataType != 'Account' && c.dataType != 'Product' && (c.dataType == 'Decimal' || c.dataType == 'Currency' || c.dataType == 'Integer') && c.c.ReadyOperator__c != 'blankOrNot',' displayed',' hidden')}" value="{!c.ReadyValue}" style="margin-right:20px;"/>

                                                                        <input id="dateValue{!ROUND(c.c.Order__c,0)}" onfocus="showCalendar(dateValue{!ROUND(c.c.Order__c,0)});" onchange="criteriasHandler.chkVal(this, document.getElementById('{!$Component.dataType}'));jQuery('.masterInput', jQuery(this).parent())[0].value = this.value;" class="dateInputCriteria {!IF(c.dataType != 'Account' && c.dataType != 'Product' && (c.dataType == 'Date' || c.dataType == 'DateTime') && c.c.ReadyOperator__c != 'crrPrd' && c.c.ReadyOperator__c != 'blankOrNot',' displayed',' hidden')}"  value="{!c.c.XactlyExpress__ReadyValue__c}" style="margin-right:20px;"/>

                                                                        <div id="{!TEXT(ROUND(c.c.Order__c,0)) & '-account'}" style="width:200px;margin-top:-3px;margin-top /*\**/:-5px\9;margin-top:expression('10px');margin-right:20px;" class="accountInputCriteria{!IF(c.dataType == 'Account' && c.c.ReadyOperator__c != 'blankOrNot',' displayed',' hidden')}">
                                                                            <apex:inputText id="orderInput" styleClass="{!ROUND(c.c.XactlyExpress__Order__c,0)}-accountName accountName" onfocus="this.blur();jQuery(this).prop('readonly', true);" value="{!c.accountName}" style="width:180px !important;color:#000000;cursor:default;background-color:#EFEFEF;"/>
                                                                            <apex:image styleClass="img-magnifier" url="{!URLFOR($Resource.XactlyExpress__XactlySMBResources, 'img/icons/magnifier.png')}" style="cursor:pointer;" onclick="criteriasHandler.clrErr(this);javascript: accountsWindow = window.open('/apex/XactlySMBAccountPopup?index={!ROUND(c.c.XactlyExpress__Order__c,0)}', 'Accounts','location=0,status=0,scrollbars=1,width=700px,height=500px'); accountsWindow.moveTo(100,100);"/>
                                                                            <input type="text" style="display:none;" class="{!ROUND(c.c.Order__c,0)}-accountId lookupHiddenId" value="{!c.c.XactlyExpress__ReadyValue__c}" />
                                                                        </div>

                                                                        <div id="{!TEXT(ROUND(c.c.Order__c,0)) & '-product'}" style="width:200px;margin-top:-3px;margin-top /*\**/:-5px\9;margin-top:expression('10px');margin-right:20px;" class="productInputCriteria{!IF(c.dataType == 'Product' && c.c.ReadyOperator__c != 'blankOrNot',' displayed',' hidden')}">
                                                                            <apex:inputText id="orderInput2" styleClass="{!ROUND(c.c.XactlyExpress__Order__c,0)}-productName productName" onfocus="this.blur();jQuery(this).prop('readonly', true);" value="{!c.productName}" style="width:180px !important;color:#000000;cursor:default;background-color:#EFEFEF;"/>
                                                                            <apex:image styleClass="img-magnifier" url="{!URLFOR($Resource.XactlyExpress__XactlySMBResources, 'img/icons/magnifier.png')}" style="cursor:pointer;" onclick="criteriasHandler.clrErr(this);javascript: productsWindow = window.open('/apex/XactlySMBProductPopup?index={!ROUND(c.c.XactlyExpress__Order__c,0)}', 'Products','location=0,status=0,scrollbars=1,width=700px,height=500px'); productsWindow.moveTo(100,100);"/>
                                                                        </div>

                                                                        <apex:selectList id="booleanOptions" onchange="jQuery('.masterInput', jQuery(this).parent())[0].value = this.value;" multiselect="false" size="1" value="{!c.c.XactlyExpress__ReadyValue__c}" styleClass="booleanInputCriteria {!IF(c.dataType == 'Boolean',' displayed',' hidden')}" style="margin-right:20px;">
                                                                            <apex:selectOptions value="{!booleanOptions}" />
                                                                        </apex:selectList>

                                                                        <apex:selectList id="ByCurrentPeriodOptions" onchange="jQuery('.masterInput', jQuery(this).parent())[0].value = this.value;" multiselect="false" size="1" value="{!c.c.XactlyExpress__ReadyValue__c}" styleClass="dateCurrPrdInputCriteria {!IF((c.dataType == 'Date' || c.dataType == 'DateTime') && c.c.XactlyExpress__ReadyOperator__c == 'crrPrd',' displayed',' hidden')}" style="margin-right:20px;">
                                                                            <apex:selectOptions value="{!ByCurrentPeriodOptions}" />
                                                                        </apex:selectList>

                                                                        <apex:selectList id="blankNotBlankOptions" multiselect="false" size="1" value="{!c.c.XactlyExpress__ReadyValue__c}" styleClass="blankNotBlankCriteria {!IF((c.dataType == 'Integer' || c.dataType == 'String' || c.dataType == 'DateTime' || c.dataType == 'Date' || c.dataType == 'Account' ||c.dataType =='Decimal' || c.dataType=='Currency' || c.dataType == 'CurrencySymb' ) && c.c.XactlyExpress__ReadyOperator__c == 'blankOrNot',' displayed',' hidden')}" style="margin-right:20px;">
                                                                            <apex:selectOptions value="{!blankNotBlankOptions}" />
                                                                        </apex:selectList>

                                                                        <apex:selectList id="currencySymbOptions" onchange="jQuery('.masterInput', jQuery(this).parent())[0].value = this.value;" multiselect="false" size="1" value="{!c.c.XactlyExpress__ReadyValue__c}"  styleClass="currencySymbOptions {!IF(c.dataType == 'CurrencySymb' && c.c.XactlyExpress__ReadyOperator__c != 'blankOrNot' ,' displayed',' hidden')}" style="margin-right:20px;">
                                                                            <apex:selectOptions value="{!allcurrencies}" />
                                                                        </apex:selectList>

                                                                        <div class="salespersonInputCriteria">
                                                                            <apex:selectList id="Salespersons" multiselect="false" size="1" value="{!c.c.XactlyExpress__ReadyValue__c}" onchange="jQuery('.masterInput',jQuery(this).parent().parent()).val(this.options[this.selectedIndex].value);" styleClass="salespersonDropdown{!IF(c.dataType == 'User',' displayed toRunChange',' hidden')} " style="margin-right:20px;">
                                                                                <apex:selectOptions value="{!Salespersons}" />
                                                                            </apex:selectList>
                                                                            <input type="text" style="display:none;" class="HiddenId" value="{!c.c.XactlyExpress__ReadyValue__c}"/>
                                                                        </div>
                                                                        <apex:inputText id="strInpCrit" styleClass="stringInputCriteria masterInput {!ROUND(c.c.XactlyExpress__Order__c,0)}-accountId {!ROUND(c.c.XactlyExpress__Order__c,0)}-productId lookupHiddenId inputCriteria{!IF(c.dataType != 'User' && c.dataType != 'Boolean'  && c.dataType != 'Account' && c.dataType != 'CurrencySymb' && c.dataType != 'Product' && c.dataType != 'Decimal' && c.dataType != 'Currency' && c.dataType != 'Integer' && c.dataType != 'Date' && c.dataType != 'DateTime' && c.c.XactlyExpress__ReadyOperator__c != 'blankOrNot',' displayed',' hidden')}" value="{!c.c.XactlyExpress__ReadyValue__c}" style="margin-right:20px;" onclick="criteriasHandler.clrErr(this);" />

                                                                        <apex:inputHidden value="{!c.dataType}" id="dataType"/>
                                                                    </td>
                                                                    <td style="float: left;position: relative;top: 6px;">
                                                                        <div class="">
                                                                            <a href="javascript:;" style="color:#CE641B;font-size:7pt;font-weight:bolder;" onclick="criteriasHandler.updateHiddenToSelectedValues();criteriasHandler.removeCriteria('{!$Component.deleteCriteriaKeyInput}','{!FLOOR(c.c.Order__c-1)}', '{!$Component.advancedFormula}');">
                                                                                <apex:outputText value="{!$Label.xactlyexpress__REMOVE}"/>
                                                                            </a>
                                                                        </div>

                                                                    </td>
                                                                    <td class="{!IF(ROUND(c.c.Order__c,0)!=importCriterias.size,'importAndOrCell ','')}operatorAndOrCell">
                                                                        <apex:selectList id="booleanOperatorOptions" styleClass="operatorSelectClass" multiselect="false" size="1" onchange="criteriasHandler.refreshCriteriaOperator(this, '{!$Component.advancedFormula}');" value="{!c.operator}" style="{!IF(ROUND(c.c.XactlyExpress__Order__c,0)!=importCriterias.size && currentImportSource.XactlyExpress__IsAdvancedFormula__c != true,'','display:none;')}">
                                                                            <apex:selectOptions value="{!booleanOperatorOptions}" />
                                                                        </apex:selectList>
                                                                    </td>
                                                                </tr>
                                                            </apex:repeat>
                                                        </tbody>
                                                    </table>
                                                </div>
                                                <br/>
                                                   <hr style="background-color: #BFBFBF;border: medium none;height: 1px;left: -38px;position: relative;width: 838px;"/>
                                                   <apex:outputPanel id="addCrit" layout="block" styleClass="actionButtonWrapper" style="margin-top:-1px;">
                                                    <div class="xactlyBtnRectWrapper"  onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);"  onclick="criteriasHandler.checkErrors();"  style="float:left;">
                                                  <div class="xactlyBtnRect">
                                                      <div class="xactlyBtnRectBackground">
                                                          <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                             <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                                    <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel" style="">
                                                                           {!$Label.AddMoreCriteria}
                                                                    </div>
                                                             </div>
                                                          </div>
                                                      </div>
                                                  </div>
                                               </div>

                                                   </apex:outputPanel>
                                                <apex:inputText id="deleteCriteriaKeyInput" value="{!deleteCriteriaKey}" style="display:none;" />
                                                <apex:actionFunction name="deleteCriteriaAction" action="{!removeCriteria}" rerender="fieldSetContainer" oncomplete="criteriasHandler.updateAdvancedFormula();waitOff();setOperatorSelectValues();introAsTab();"/>
                                                <div id="isThereContainer" style="clear:both;">
                                                    {!$Label.IsThere}<apex:inputCheckbox value="{!currentImportSource.XactlyExpress__IsAdvancedFormula__c}" id="isAdvFormula" onclick="criteriasHandler.updateAdvancedFormula(); criteriasHandler.toggleAdvFormulas()" />
                                                    <br />
                                                    <apex:inputField id="advancedFormula" styleClass="advancedFormula {!IF(currentImportSource.XactlyExpress__IsAdvancedFormula__c == true,'displayed','hidden')}" value="{!currentImportSource.XactlyExpress__AdvancedFormula__c}" />
                                                </div>
                                            </apex:outputPanel>
                                        </div>
                                    </div>
                                    <div class="ImportTypeFile" style="{!IF(selectedSourceType == IMPORT_SOURCE_CSV,'','display:none')}">
                                        <div class="selectContainer">
                                            <div style="float:left;">
                                                <apex:selectList id="CSVoptions" multiselect="false" size="1" value="{!selectedCSVoption}" style="min-width:266px;margin-right:10px;" onChange="changeImportSource();">
                                                    <apex:selectOptions value="{!CSVoptions}" />
                                                </apex:selectList>
                                            </div>
                                            <div style="float:left;">
                                                <apex:inputFile id="selectFile" onblur="checkFileExtension(this.value);" onchange="checkFileExtension(this.value);" value="{!document.body}" filename="{!document.name}" contentType="{!document.contentType}"  rendered="{!selectedSourceType == IMPORT_SOURCE_CSV}"/>
                                            </div>
                                            <div style="float:right;margin-right:30px;">
                                                <apex:inputCheckbox id="haveHeaders" value="{!settings.XactlyExpress__haveHeaders__c}"/>
                                                <label for="{!$Component.haveHeaders}">{!$Label.fileContainsHeader}</label>
                                            </div>
                                            <div style="clear:both;"></div>
                                            <apex:outputPanel id="boldExport" layout="block" style="margin-top:20px;">
                                                <a href="{!$Page.XactlyExpress__XactlySMBImportDealsTemplate}?id={!selectedCSVoption}" id="templatelink">
                                                    <apex:outputtext value="{!$Label.xactlyexpress__templateAccess}" escape="false">
                                                        <apex:param value="{!boldExport}"/>
                                                    </apex:outputtext>
                                                </a>
                                            </apex:outputPanel>
                                        </div>
                                    </div>
                                    <!-- START OF QUICKBOOKS SECTION -->
                                    <apex:actionFunction name="addQuickbooksCritera" action="{!addQuickbooksCriteria}" onComplete="waitOff();" rerender="qbCriteriaList"/>
                                    <apex:actionFunction name="removeQuickbooksCriteria" action="{!removeQuickbooksCriteria}" onComplete="waitOff();" rerender="qbCriteriaList"/>
                                    <apex:actionFunction name="addQuickbooksCriteraFirstLevel" action="{!addQuickbooksCriteriaFirstLevel}" onComplete="waitOff();" rerender="qbCriteriaList"/>
                                    <apex:actionFunction name="removeQuickbooksCriteriaFirstLevel" action="{!removeQuickbooksCriteriaFirstLevel}" onComplete="waitOff();" rerender="qbCriteriaList"/>
                                    <apex:actionFunction name="showAdvancedFilters" action="{!showAdvancedFilters}" onComplete="waitOff();" rerender="qbCriteriaList"/>
                                    <apex:actionFunction name="hideAdvancedFilters" action="{!hideAdvancedFilters}" onComplete="waitOff();" rerender="qbCriteriaList"/>
                                    <div class="ImportTypeQuickbooks" style="{!IF(selectedSourceType == IMPORT_SOURCE_QUICKBOOK,'','display:none')}">
                                        <apex:outputPanel layout="block" id="qbCriteriaList">
                                            <span style="margin-left: 31px; margin-right: 15px;">{!$Label.xactlyexpress__ForMapping}</span>
                                            <apex:selectList styleClass="fieldDropdown" id="qbSource" onchange="changeImportSource(null);" size="1" multiselect="false" value="{!quickbooksImportSourceID}" style="margin-bottom:20px;">
                                                 <apex:selectOptions value="{!quickbooksImportSources}" />
                                            </apex:selectList>
                                            <table id="qbFlFilters">
                                            <apex:repeat value="{!quickbooksCriteriasFirstLevel}" var="qbc" id="qbflCriteriaRepeat">
                                                <tr class="qbCriteria" style="margin:0px 0 10px 30px;width: 670px;" valign="top">
                                                    <td class="{!IF(ROUND(qbc.c.Order__c,0) != 1, 'hidden', '')}"><div style="margin-left: 34px; margin-top: 5px;">{!$Label.xactlyexpress__WhenField}</div></td>
                                                    <td class="{!IF(ROUND(qbc.c.Order__c,0) != 1, '', 'hidden')}"><div style="margin-left: 34px; margin-top: 5px;">{!$Label.And}</div></td>
                                                    <td>
                                                        <apex:selectList id="qbflFieldName" size="1" multiselect="false" style="margin-left: 11px;" styleClass="fieldDropdown" value="{!qbc.c.XactlyExpress__ReadyField__c}" onchange="qbSwapMainTypeConditionfl(this)">
                                                            <apex:selectOptions value="{!quickbooksFieldsFirstLevel}" />
                                                        </apex:selectList>
                                                    </td>
                                                    <td>
                                                        <apex:outputPanel layout="none" rendered="{!IF(qbc.c.XactlyExpress__ReadyOperator__c = '=','true','false')}">
                                                            <select class="operatorDrpdwn" style="margin-left: 30px;{!if((qbc.dataType != 'Date' && qbc.dataType != 'DateTime'),'display:none;','')}" name="operator" size="1" onchange="jQuery('.filterOperator',jQuery(this).parent()).val(jQuery(this).val());">
                                                                <option value="=" selected="selected">{!$Label.HasTheValue}</option>
                                                                <option value=":BF:">{!$Label.BeforeCap}</option>
                                                                <option value=":AF:">{!$Label.AfterCap}</option>
                                                            </select>
                                                        </apex:outputPanel>
                                                        <apex:outputPanel layout="none" rendered="{!IF(qbc.c.XactlyExpress__ReadyOperator__c = ':BF:','true','false')}">
                                                            <select class="operatorDrpdwn" style="margin-left: 30px;{!if((qbc.dataType != 'Date' && qbc.dataType != 'DateTime'),'display:none;','')}" name="operator" size="1" onchange="jQuery('.filterOperator',jQuery(this).parent()).val(jQuery(this).val());">
                                                                <option value="=" selected="selected">{!$Label.HasTheValue}</option>
                                                                <option value=":BF:" selected="selected">{!$Label.BeforeCap}</option>
                                                                <option value=":AF:">{!$Label.AfterCap}</option>
                                                            </select>
                                                        </apex:outputPanel>
                                                        <apex:outputPanel layout="none" rendered="{!IF(qbc.c.XactlyExpress__ReadyOperator__c = ':AF:','true','false')}">
                                                            <select class="operatorDrpdwn" style="margin-left: 30px;{!if((qbc.dataType != 'Date' && qbc.dataType != 'DateTime'),'display:none;','')}" name="operator" size="1" onchange="jQuery('.filterOperator',jQuery(this).parent()).val(jQuery(this).val());">
                                                                <option value="=">{!$Label.HasTheValue}</option>
                                                                <option value=":BF:">{!$Label.BeforeCap}</option>
                                                                <option value=":AF:" selected="selected">{!$Label.AfterCap}</option>
                                                            </select>
                                                        </apex:outputPanel>
                                                        <span style="margin-left: 35px;margin-right: 12px;{!if((qbc.dataType == 'Date' || qbc.dataType == 'DateTime'),'display:none;','')}" class="hasTheValueLabel">{!$Label.HasTheValue}</span>
                                                        <apex:inputText style="display:none;" value="{!qbc.c.XactlyExpress__ReadyOperator__c}" id="op" styleclass="filterOperator"/>
                                                    </td>
                                                    <td>
                                                        <apex:outputPanel id="qbflMainConditionWrapper" layout="block" style="margin-left: 30px;" styleClass="{!IF(qbc.c.XactlyExpress__ReadyOperator__c == 'true','hidden','')}">
                                                            <apex:inputText id="qbflValueString" styleClass="qbflValInput {!IF(qbc.dataType != 'String', 'hidden', '')}" onclick="criteriasHandler.clrErr(this);" onblur="" value="{!qbc.c.XactlyExpress__ReadyValue__c}"/>
                                                            <apex:inputText id="qbflValueDecimal" styleClass="qbflValInput {!IF(qbc.dataType != 'Decimal', 'hidden', '')}" onclick="criteriasHandler.clrErr(this);" onblur="this.value = unformatNumber(this.value);this.value = formatNumberEx(this.value, false);" value="{!qbc.c.XactlyExpress__ReadyValue__c}"/>
                                                            <apex:inputText id="qbflValueDate" styleClass="qbflValInput {!IF((qbc.dataType != 'Date' && qbc.dataType != 'DateTime'), 'hidden', '')}" onclick="criteriasHandler.clrErr(this);" onfocus="showCalendar('{!$Component.qbflValueDate}');" onchange="criteriasHandler.chkVal(this, jQuery('input[id$=qbflAttributeType]', this.parentNode)[0]);" value="{!qbc.c.XactlyExpress__ReadyValue__c}"/>
                                                            <apex:inputHidden id="qbflReadyValue" value="{!qbc.c.XactlyExpress__ReadyValue__c}" />
                                                            <apex:inputHidden id="qbflAttributeType" value="{!qbc.dataType}" />
                                                        </apex:outputPanel>
                                                    </td>
                                                    <td>
                                                        <apex:outputLink id="qbflRemoveCriteria" value="javascript:;" style="margin-left:30px;margin-top:5px;color:#CE641B;font-size:7pt;font-weight:bolder;float:right;" onclick="waitOn();jQuery('input[id$=qbflSelectedCriteria]').val(parseInt(this.id.split(':').reverse()[1]) + 1);qbUpdateReadyValues();removeQuickbooksCriteriaFirstLevel();">
                                                            <apex:outputText value="{!$Label.xactlyexpress__REMOVE}"/>
                                                        </apex:outputLink>
                                                    </td>
                                                </tr>
                                            </apex:repeat>
                                            </table>
                                            <apex:inputHidden id="qbflSelectedCriteria" value="{!quickbooksSelectedCriteriaFirstLevel}" />
                                            <hr style="{!if(showAdvancedFiltersIntuit,'display:none;','')}background-color: #BFBFBF;border: medium none;height: 1px;left: -38px;position: relative;width: 838px;"/>
                                            <apex:outputPanel id="addQBCritfl" layout="block" styleClass="actionButtonWrapper" style="margin-top:5px;margin-right: 30px;">
                                                <div class="xactlyBtnRectWrapper"  onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);" onclick="if(qbFlNoErrors()){waitOn();qbUpdateReadyValues(false);addQuickbooksCriteraFirstLevel();}" style="float:left;">
                                                    <div class="xactlyBtnRect">
                                                        <div class="xactlyBtnRectBackground">
                                                            <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                                <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                                    <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel" style="">
                                                                       {!$Label.AddMoreCriteria}
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </apex:outputPanel>
                                            <apex:outputPanel id="advFilters" layout="block" styleClass="actionButtonWrapper" style="margin-top:5px;">
                                                <div class="xactlyBtnRectWrapper"  onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);" onclick="waitOn();qbUpdateReadyValues(false);{!if(showAdvancedFiltersIntuit,'hideAdvancedFilters();','showAdvancedFilters();')}" style="float:left;">
                                                    <div class="xactlyBtnRect">
                                                        <div class="xactlyBtnRectBackground">
                                                            <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                                <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                                    <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel" style="">
                                                                       <apex:outputText value="{!if(showAdvancedFiltersIntuit,$Label.xactlyexpress__hideAdvancedFilters,$Label.xactlyexpress__showAdvancedFilters)}"/>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </apex:outputPanel>
                                            <div style="margin-top:13px">
                                                <apex:outputText value="*{!$Label.xactlyexpress__importQuickbooksFiltersNote}" style="margin-top:45px;color:grey;font-size:8pt"/>
                                            </div>
                                            <apex:outputPanel layout="none" rendered="{!showAdvancedFiltersIntuit}">
                                                <hr style="margin-top: 10px;background-color: #BFBFBF;border: medium none;height: 1px;left: -38px;position: relative;width: 838px;"/>
                                                <table id="qbFilters">
                                                <apex:repeat value="{!quickbooksCriterias}" var="qbc" id="qbCriteriaRepeat">
                                                    <tr class="qbCriteria" style="margin:0px 0 10px 30px;width: 670px;">
                                                        <td class="{!IF(ROUND(qbc.c.Order__c,0) != 1, 'hidden', '')}"><span style="margin-left: 34px;">{!$Label.xactlyexpress__WhenField}</span></td>
                                                        <td class="{!IF(ROUND(qbc.c.Order__c,0) == 1, 'hidden', '')}"><apex:selectList id="qbBooleanOperator" style="margin-left: 51px;" multiselect="false" size="1" onchange="" value="{!qbc.operator}">
                                                            <apex:selectOptions value="{!booleanOperatorOptions}" />
                                                        </apex:selectList></td>
                                                        <td><apex:selectList id="qbFieldName" size="1" multiselect="false" style="margin-left: 11px;" styleClass="fieldDropdown" value="{!qbc.c.XactlyExpress__ReadyField__c}" onchange="qbSwapMainTypeCondition(this)">
                                                            <apex:selectOptions value="{!quickbooksFields}" />
                                                        </apex:selectList></td>
                                                        <td><apex:selectList size="1" id="qbOperator" multiselect="false" style="margin-left: 30px;" value="{!qbc.c.XactlyExpress__ReadyOperator__c}" onchange="qbSwapOperator(this)">
                                                            <apex:selectOptions value="{!fieldReadyEmptyValues}" />
                                                        </apex:selectList></td>
                                                        <td><apex:outputPanel id="qbIsNotBlank" layout="inline" style="margin-right: 30px;" styleClass="{!IF(qbc.c.XactlyExpress__ReadyOperator__c == 'true','','hidden')}">({!$Label.xactlyexpress__EGIsNotBlank})</apex:outputPanel>
                                                        <apex:outputPanel id="qbMainConditionWrapper" layout="block" style="margin-left: 30px;" styleClass="{!IF(qbc.c.XactlyExpress__ReadyOperator__c == 'true','hidden','')}">
                                                            <apex:inputText id="qbValueString" styleClass="qbValInput {!IF(qbc.dataType != 'String', 'hidden', '')}" onclick="criteriasHandler.clrErr(this);" onblur="" value="{!qbc.c.XactlyExpress__ReadyValue__c}"/>
                                                            <apex:inputText id="qbValueDecimal" styleClass="qbValInput {!IF(qbc.dataType != 'Decimal', 'hidden', '')}" onclick="criteriasHandler.clrErr(this);" onblur="this.value = unformatNumber(this.value);this.value = formatNumberEx(this.value, false);" value="{!qbc.c.XactlyExpress__ReadyValue__c}"/>
                                                            <apex:inputText id="qbValueDate" styleClass="qbValInput {!IF((qbc.dataType != 'Date' && qbc.dataType != 'DateTime'), 'hidden', '')}" onclick="criteriasHandler.clrErr(this);" onfocus="showCalendar('{!$Component.qbValueDate}');" onchange="criteriasHandler.chkVal(this, jQuery('input[id$=qbAttributeType]', this.parentNode)[0]);" value="{!qbc.c.XactlyExpress__ReadyValue__c}"/>
                                                            <apex:selectList id="qbValueBoolean" styleClass="qbValInput {!IF(qbc.dataType != 'Boolean', 'hidden', '')}" onchange="" multiselect="false" size="1" value="{!qbc.c.XactlyExpress__ReadyValue__c}">
                                                                <apex:selectOptions value="{!booleanOptions}" />
                                                            </apex:selectList>
                                                            <apex:selectList id="qbValueSalesperson" styleClass="qbValInput {!IF(qbc.dataType != 'Salesperson', 'hidden', '')}" multiselect="false" size="1" onchange="" value="{!qbc.c.XactlyExpress__ReadyValue__c}">
                                                                <apex:selectOptions value="{!Salespersons}" />
                                                            </apex:selectList>
                                                            <apex:selectList id="qbValueCurrency" styleClass="qbValInput {!IF(qbc.dataType != 'Currency', 'hidden', '')}" multiselect="false" size="1" onchange="" style="margin-right:20px;" value="{!qbc.c.XactlyExpress__ReadyValue__c}">
                                                                <apex:selectOptions value="{!allcurrencies}" />
                                                            </apex:selectList>
                                                            <apex:inputHidden id="qbReadyValue" value="{!qbc.c.XactlyExpress__ReadyValue__c}" />
                                                            <apex:inputHidden id="qbAttributeType" value="{!qbc.dataType}" />
                                                        </apex:outputPanel></td>
                                                        <td><apex:outputLink id="qbRemoveCriteria" value="javascript:;" style="margin-left:30px;color:#CE641B;font-size:7pt;font-weight:bolder;float:right;" onclick="waitOn();jQuery('input[id$=qbSelectedCriteria]').val(parseInt(this.id.split(':').reverse()[1]) + 1);qbUpdateReadyValues(false);removeQuickbooksCriteria();">
                                                            <apex:outputText value="{!$Label.xactlyexpress__REMOVE}"/>
                                                        </apex:outputLink></td>
                                                    </tr>
                                                </apex:repeat>
                                                </table>
                                                <apex:inputHidden id="qbSelectedCriteria" value="{!quickbooksSelectedCriteria}" />
                                                <apex:outputPanel id="addQBCrit" layout="block" styleClass="actionButtonWrapper" style="margin-top:5px;">
                                                    <div class="xactlyBtnRectWrapper"  onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);" onclick="if(qbNoErrors()){waitOn();qbUpdateReadyValues(false);addQuickbooksCritera();}" style="float:left;">
                                                        <div class="xactlyBtnRect">
                                                            <div class="xactlyBtnRectBackground">
                                                                <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                                    <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                                        <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel" style="">
                                                                           {!$Label.AddMoreCriteria}
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </apex:outputPanel>
                                            </apex:outputPanel>
                                        </apex:outputPanel>
                                        <div style="clear:both;"></div>
                                    </div>
                                    <!-- END OF QUICKBOOKS SECTION -->
                                </div>
                            </div>
                            <div class="img_repeat bm">
                                <div class="img_no_repeat bl"></div>
                                <div class="img_no_repeat br"></div>
                            </div>
                            <!-- End of criteria section -->
                        </div>
                        <br/>

                        <br/>
                        <div class="box">
                            <div class="img_repeat tm">
                                <div class="img_no_repeat tl"></div>
                                <div class="img_no_repeat tr"></div>
                                <div style="clear:both"></div>
                            </div>
                            <div class="roundedBox">
                                <div class="boxHeader">
                                    <div class="titleWrapper">
                                        <div class="mainTitle PNovaSemiBold17c3">{!$Label.ProcessImport}</div>
                                    	<apex:outputText id="importStep3Sub" rendered="{!currentImportSource.XactlyExpress__UsageType__c == importSourceUsageImport}" value="{!SUBSTITUTE($Label.xactlyexpress__ImportStep3Sub,'{0}',currentSettings.dealsPluralCap)}" />
                                    </div>
                                    <div class="extraTitleStuff"></div>
                                    <div style="clear:both"></div>
                                </div>


                            </div>

                            <div class="roundedBox" style="position:relative;">

                                <iframe id="iframeResult" src="{!$Page.XactlySMBImportFromCSV}{!IF(hitImportBtn=true,'?hit=hit','')}" width="838" height="100%" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" allowtransparency="false" onload="document.getElementById('iframeResult').style.height = document.getElementById('iframeResult').contentWindow.document.body.offsetHeight + 'px';"></iframe>

                                <div style="z-index:1;left: 44px;position: absolute;top: 20px;">
                                    <div style="float:left;margin-right:60px;">
                                        <apex:selectList style="margin-top:6px;width:190px;visibility:{!IF(currentImportSource.XactlyExpress__UsageType__c == IMPORT_SOURCE_USAGE_RELEASE, 'hidden', 'visible')}" id="updateDeals" size="1" value="{!settings.XactlyExpress__UpdateDealOnUpload__c}">
                                            <apex:selectOptions value="{!updateDeals}" />
                                        </apex:selectList>
                                    </div>
                                    <div style="float:left;">
                                        <apex:outputPanel id="updateDateBox" layout="block" styleClass="btnAction">
                                            <apex:commandLink id="updateDataLink" action="{!importGeneral}" onclick="{!IF(selectedSourceType == IMPORT_SOURCE_QUICKBOOK, 'if(qbNoErrors()&&qbFlNoErrors()){disableButtons();qbUpdateReadyValues(true);waitOn();} else {return false;}', 'if(!chkOppDateValues())return false;updateLookupFields();' & IF(importCriteria == 'formula','if(!checkErrorsSave()){return false;} else {disableButtons();}','') & 'if(!validateFile()){return false;} else {disableButtons();}')}">
                                                <apex:outputText id="importDealsEnable" styleClass="greenBtn greenButton" value="{!$Label.xactlyexpress__CalculateWizardStep1}">
                                                    <apex:param value="{!IF(currentImportSource.XactlyExpress__UsageType__c == importSourceUsageImport, currentSettings.dealsPluralCap, IF(currentImportSource.XactlyExpress__ReleaseType__c == IMPORT_SOURCE_RELEASE_TYPE_DELETE, $Label.xactlyexpress__Deletes, $Label.xactlyexpress__Releases))}"/>
                                                </apex:outputText>
                                            </apex:commandLink>
                                            <apex:outputText id="importDealsDisable" styleClass="greenBtn disabled" style="display:none" value="{!$Label.xactlyexpress__CalculateWizardStep1}">
                                                    <apex:param value="{!IF(currentImportSource.XactlyExpress__UsageType__c == importSourceUsageImport, currentSettings.dealsPluralCap, IF(currentImportSource.XactlyExpress__ReleaseType__c == IMPORT_SOURCE_RELEASE_TYPE_DELETE, $Label.xactlyexpress__Deletes, $Label.xactlyexpress__Releases))}"/>
                                            </apex:outputText>
                                            <div class="ErrorMessage" style="display: {!IF(existErrorConnection,'','none')};">{!$Label.xactlyexpress__ErrorNotConnected}</div>
                                        </apex:outputPanel>
                                    </div>
                                    <div style="clear:both"></div>
                                </div>
                            </div>
                            <div class="img_repeat bm">
                                <div class="img_no_repeat bl"></div>
                                <div class="img_no_repeat br"></div>
                            </div>
                        </div>
                    </div>
                </apex:outputPanel><!-- END CONTENT -->
                <apex:inputHidden id="newOpportunityFieldValue" value="{!newOpportunityFieldValue}" />
                <apex:inputHidden id="newOpportunityFieldLabel" value="{!newOpportunityFieldLabel}" />
                <apex:inputHidden id="newOpportunityFieldType" value="{!newOpportunityFieldType}" />
                <apex:inputHidden id="newOpportunityFieldId" value="{!newOpportunityFieldId}" />
                
                <apex:actionFunction name="refreshConditionField2" action="{!dummy}" onComplete="waitOff();"/>
                <apex:actionFunction name="refreshConditionField" rerender="content" action="{!dummy}" onComplete="waitOff();"/>
                <apex:actionFunction name="dummyLookupds" action="{!dummy}" onComplete="criteriasHandler.updateNewOpportunityFieldId2();"/>
                <apex:actionFunction name="addOpportunityField" action="{!addOpportunityField}" rerender="theForm4" onComplete="criteriasHandler.updateNewOpportunityFieldId();"/>
                <apex:actionFunction name="dummyLookupds2" action="{!dummy}" onComplete="updateNewOpportunityFieldId3();"/>
                <apex:actionFunction name="addOpportunityField2" action="{!addOpportunityField}" rerender="theForm4" onComplete="updateNewOpportunityFieldId2();"/>
            
            </apex:form>
            <div style="clear:both"></div>
        </apex:outputPanel><!-- END CONTENTWRAPPER -->
        </div>

        <apex:form id="theForm5">
            <!-- FOOTER  -->
            <c:XactlySMBFooter isReadOnlyAdmin="{!isReadOnlyAdmin}" packageVersion="{!packageVersion}" showPrevious="false" showNext="true" showSave="false" showRefresh="false" showExport="false"/>
            <apex:actionfunction id="chatterLoader" name="loadChatter" action="{!loadChatter}" rerender="chatter" oncomplete="waitOff();initChatter();jQuery('.innerOcultar a').click();"/>
        </apex:form>
      </div>

    
    
	   <!-- criteriasHandler inputs -->
	<input type="hidden" value="{!$Label.AdvFormulaMissingParenthesis}" id="labelsArr0"/>
	<input type="hidden" value="{!$Label.advancedIsEmpty}" id="labelsArr1"/>
	<input type="hidden" value="{!$Label.AdvanceFormulaCheckLogicalStatement}" id="labelsArr2"/>
	<input type="hidden" value="{!$Label.AdvanceFormulaWrongChar}" id="labelsArr3"/>
	<input type="hidden" value="{!$Label.WrongDateFormatJS}" id="labelsArr4"/>
	<input type="hidden" value="{!$Label.errorsInCriteria}" id="labelsArr5"/>
	<input type="hidden" value="{!$Label.deleteAFilterCriteria}" id="labelsArr6"/>
	<input type="hidden" value="{!$Label.CriteriaNumberNotExists}" id="labelsArr7"/>
	<input type="hidden" value="{!$Label.CriteriaNegativeNumbers}" id="labelsArr8"/>
	<input type="hidden" value="{!$Label.incompleteAdvFmla}" id="labelsArr9"/>
	<input type="hidden" value="{!$Label.invalidAdvFormula}" id="labelsArr10"/>
	<input class="hidden" value="{!$Label.CriteriaNoLongerExist}" id="labelsArr11"/>
	<input class="hidden" value="{!$Label.InvalidCharsOnAdvFormula}" id="labelsArr12"/>
	<!-- End of criteriasHandler inputs -->
    
    
    <input type="hidden" value="{!dateFirst}" id="dateFirst"/>
    <input type="hidden" value="{!dateSeparator}" id="dateSeparator"/>
    <input type="hidden" value="{!$Label.wrongExtension}" id="labelWrongExtension"/>
    <input type="hidden" value="{!$Label.PleaseEnterValidNumber}" id="labelPleaseEnterValidNumber"/>
    <input type="hidden" value="{!$Label.Releases}" id="labelReleases"/>
    <input type="hidden" value="{!$Label.Error}" id="lbl_error"/>
    <input type="hidden" value="{!currentSettings.dealsPluralCap}" id="labelDeals"/>
    <input type="hidden" value="{!importSourceUsageImport}" id="importSourceUsageImport"/>
    <input type="hidden" value="{!SETTINGS_CSV_RELEASES}" id="settingsCSVRelease"/>

    <c:XactlySMBFooterScript isChatterEnabled="{!isChatterEnabled}" loadPerformantJs="true" loadHeaderJs="true" />
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'components/js/XactlySMBSObjDescribe.js')}"></script>
    <script type="text/javascript" language="javascript" src="{!URLFOR($Resource.XactlySMBResources, 'js/importcriteriasHandler.js')}"></script>
    <script type="text/javascript" language="javascript" src="{!URLFOR($Resource.XactlySMBResources, 'pages/js/XactlySMBCalculateStep2.js')}"></script>
    <c:XactlySMBFeedbackTab />
    <c:XactlySMBSObjDescribe title="{!$Label.xactlyexpress__addFieldViaLookup}" sub_title="{!$Label.xactlyexpress__addFieldOrMore}" />     
</apex:page>
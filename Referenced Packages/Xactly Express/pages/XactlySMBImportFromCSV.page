<apex:page controller="XactlyExpress.XactlySMBCalculateStep2" standardStylesheets="false" sidebar="false" showHeader="false" cache="false" >
<apex:styleSheet value="{!URLFOR($Resource.XactlyExpress__XactlySMBResources ,'css/XactlySMBFontStyles.css')}"/>
<style>
        body{font-size: 75%;background-color:#FAFAFA}
        .popupBub {
		    border-collapse: collapse;
		    display: none;
		    position: absolute;
		    z-index: 495;
		}
        .xactlyBtnRectWrapper {
            cursor:default;
            height:25px;
            position:relative;
            left:-14px;
            }
            .xactlyBtnRect {
            height:25px;
            text-align:center;
            }
            .xactlyBtnRectBackground {
            z-index:0;
            position:relative;
            top:0;
            left:0;
            }
            .middleOffMouse {
            background:url({!URLFOR($Resource.XactlySMBResources ,'img/buttons/middleButton.png')}) no-repeat scroll left top transparent;
            height:25px;
            position:relative;
            margin:0;
            cursor:pointer;
            width:auto;
            }
            .rigthOffMouseBtn {
            background:url({!URLFOR($Resource.XactlySMBResources ,'img/buttons/rightButton.png')}) transparent no-repeat scroll right top;
            float:right;
            float:left;
            height:25px;
            position:relative;
            left:25px;
            padding:0;
            top:0;
            width:auto;
            cursor:pointer;
            }
            .xactlyBtnRectTextWrapper {
            color:#717479;
            top:5px;
            position:relative;
            font-size:11px;
            font-family:helvetica!important;
            z-index:1;
            width:auto;
            margin-left:-10px;
            margin-right:12px;
            min-width:25px;
            }
        .separator {
            width: auto;
            background: url({!URLFOR($Resource.XactlySMBResources ,'img/layout/divBox.png')}) repeat-x scroll 0 -20px transparent;
            height: 19px;
        }
        .statusSection {background-position: right -105px;background-repeat: no-repeat;height: 103px;margin-top: -32px;position: relative;top: 32px;}
        .importSourceSprite{background-image:url({!URLFOR($Resource.XactlySMBResources ,'img/icons/importSourceIcons.png')});}
        tr.odd {
        background:#fff;
        height:30px;
        }

        tr.even {
        background:#e7e7e7;
        height:31px;
        }
        td{
            padding-left:5px;
            padding-right:30px;
        }
        .nameCell {
            padding-left:15px;
        }
         a, a:hover {
            cursor:pointer;
            text-decoration:none;
         }
         .errorCel{
            color:#FF0000;
            font-weight:bold;
         }

        .statusDetail{
            width:100%;
            border: 3px solid #E7E7E7;
        }
        #importResults{
            background-color: #FFFFFF;
            margin-left: auto;
            margin-right: auto;
            width: 746px;
        }
        .resultCell a:hover{
            color:#0000FF !important;
        }
        .statusImage{
            height:22px;
            width:22px;
            position:absolute;
            margin: 0 10px 0 16px;
            background-image:url({!URLFOR($Resource.XactlySMBResources, 'img/icons/InputCheckMark.png')});
        }
        .statusImage.success {
            background-position: 0 -22px
        }
        .statusImage.warning {
            background-position: 0 -44px
        }
        .statusImageRunning {
            height: 32px;
		    margin: 0 20px 0 16px;
		    position: absolute;
		    width: 32px;
            background-image:url({!URLFOR($Resource.XactlySMBResources, 'img/icons/loader2.gif')});
        }
    </style>
    <body>
        <apex:form >
            <apex:outputPanel layout="block"  id="mainStatusPanel" styleClass="statusContenct">
                <div style="background-color:#FFFFFF;height: 122px;">
                    <div class="importSourceSprite statusSection">
                        <div class="{!IF(AND(NOT(ISNULL(lastImportResult)),lastImportResult != ''), '', 'hidden')}" style="position:relative;float: right;height: 83px;padding-top: 20px;width: 209px;">
                            <apex:outputPanel layout="block" styleClass="{!IF(lastImportResult == 'Started' ||lastImportResult == 'Finished', 'statusImage success', IF(lastImportResult == 'Failed' || lastImportResult == 'Stopped', 'statusImage warning', IF(lastImportResult == 'Running' || lastImportResult == 'Queued', 'statusImageRunning','')))}"/>
                            <span style="color: #999999;display: block;float: right;font-family: ProximaNovaSemiBold;font-size: 20px;margin-right: 10px; text-align: center;width: 160px;">
                            <apex:outputPanel layout="none" rendered="{!(lastImportIsRelease || lastImportIsDelete) && (successfulRows > 0)}">
                              <a style="color: #999999;" href="{!$Page.XactlySMBCalculateManagePaymentsMHR}?page=releases" target="_parent">{!successfulRows}</a>
                            </apex:outputPanel>
                            <apex:outputPanel layout="none" rendered="{!!((lastImportIsRelease || lastImportIsDelete) && (successfulRows > 0))}">
                              {!successfulRows}
                            </apex:outputPanel>
                            &nbsp;{!$Label.RowsSuccessful}
                            <apex:outputPanel style="font-size: 60%;" rendered="{!lastImportIsRelease && (successfulRows > 0)}">
                              <br />{!$Label.PendingRelease}
                            </apex:outputPanel>
                            <apex:outputPanel style="font-size: 60%;" rendered="{!lastImportIsDelete && (successfulRows > 0)}">
                              <br />{!$Label.PendingDelete}
                            </apex:outputPanel>
                            </span>
                        </div>
                    </div>
                    <div style="width:auto" class="separator"></div>
                </div>
                <div id="importResults">

                    <div>
                        <table class="statusDetail" cellspacing="0" cellpadding="0">
                            <tr class="even">
                                <td class="nameCell">
                                    {!$Label.LastImport}:
                                </td>
                                <td class="resultCell">
                                    {!IF(ISNULL(lastImportStartDate) || lastImportStartDate = '','',$Label.StartedAt)} {!lastImportStartDate}
                                </td>
                                <td class="nameCell">
                                    {!$Label.RowsWithErrors}:
                                </td>
                                <td class="resultCell">
                                    <apex:outputPanel rendered="{!rowsWithErrors > 0}" layout="none">
                                       <a onclick="window.open('{!$Page.XactlySMBImportErrorPopup}?id={!idProccess}', 'importLog','location=0,status=0,scrollbars=1,height=600px,width=760px');" href="javascript:;" class="errorCel">
                                            <span class="areaTitle">{!rowsWithErrors}</span>
                                        </a>
                                    </apex:outputPanel>                               
                                    <apex:outputPanel rendered="{!rowsWithErrors == 0}" layout="none">
                                    	<span class="areaTitle">{!rowsWithErrors}</span>
                                    </apex:outputPanel>    
                                    <input type="hidden" value="{!hitImportBtn}" id="importStatusValue"/>
                                    <input type="hidden" value="{!CustomImportLogFreq}" id="importLogFreq"/>
                                </td>
                            </tr>
                            <tr class="odd">
                                <td class="nameCell">
                                    {!$Label.ImportSource}:
                                </td>
                                <td class="resultCell">
                                    {!lastImportSource}
                                </td>
                                <td class="nameCell">
                                    {!$Label.DuplicateRows}:
                                </td>
                                <td class="resultCell">
                                    <apex:outputPanel rendered="{!duplicateRows > 0 && !(lastImportIsRelease || lastImportIsDelete)}" layout="none">
                                        <a onclick="window.open('{!$Page.XactlySMBImportLinkToDeals}?id={!idProccess}', 'importLog','location=0,status=0,scrollbars=1,height=600px,width=760px');" href="javascript:;" class="errorCel">
                                            {!duplicateRows}
                                        </a>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!duplicateRows == 0 || (lastImportIsRelease || lastImportIsDelete)}" layout="none">
                                        {!duplicateRows}
                                    </apex:outputPanel>
                                </td>
                            </tr>
                            <tr class="even">
                                <td class="nameCell">{!$Label.ImportTarget}:</td>
                                <td class="resultCell">{!lastImportTarget}</td>
                                <td class="nameCell">{!$Label.RowsSuccessful}:</td>
                                <td class="resultCell">
                                    <apex:outputPanel layout="none" rendered="{!(lastImportIsRelease || lastImportIsDelete) && (successfulRows > 0)}">
                                        <a style="text-decoration: underline;" href="{!$Page.XactlySMBCalculateManagePaymentsMHR}?page=releases" target="_parent">{!successfulRows}</a>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="none" rendered="{!!((lastImportIsRelease || lastImportIsDelete) && (successfulRows > 0))}">
                                        {!successfulRows}
                                    </apex:outputPanel>
                                    
                                </td>
                            </tr>
                            <tr class="odd">
                                <td class="nameCell">
                                    {!$Label.ImportStatus}:
                                </td>
                                <td  class="resultCell">
                                    <apex:outputPanel rendered="{!lastImportSummary != '' || lastImportResult == 'Failed'}" layout="none">
                                       <a onclick="window.open('{!$Page.XactlySMBImportErrorPopup}?id={!idProccess}', 'importLog','location=0,status=0,scrollbars=1,height=600px,width=760px');" href="javascript:;" class="errorCel">
                                           <apex:outputText value="{!lastImportSummary}" rendered="{!lastImportSummary != ''}" />

                                           <apex:outputPanel rendered="{!lastImportSummary == ''}">
                                                <apex:outputText value="{!$Label.xactlyexpress__Error}" />
                                            </apex:outputPanel>
                                        </a>
                                    </apex:outputPanel>

                                    <apex:outputPanel rendered="{!lastImportSummary == '' && lastImportResult != 'Failed'}">
                                        <apex:outputText value="{!$Label.xactlyexpress__InProgress}" rendered="{!lastImportResult == 'Running'}" />
                                        <apex:outputText value="{!$Label.xactlyexpress__Success}" rendered="{!lastImportResult == 'Finished'}" />
                                        <apex:outputText value=" - {!$Label.xactlyexpress__PendingRelease}" rendered="{!lastImportResult == 'Finished' && lastImportIsRelease}" />
                                        <apex:outputText value=" - {!$Label.xactlyexpress__PendingDelete}" rendered="{!lastImportResult == 'Finished' && lastImportIsDelete}" />
                                        <apex:outputText value="{!$Label.xactlyexpress__Queued}" rendered="{!lastImportResult == 'Queued'}" />
                                    </apex:outputPanel>
                                </td>
                                <td class="nameCell">
                                    {!$Label.TotalRows}:
                                </td>
                                <td class="resultCell">
                                    <span class="areaTitle">{!totalRows}</span>
                                </td>
                            </tr>
                            <tr class="even">
                                <td class="nameCell" colspan="4" style="padding-left: 332px;">
                                    <div class="xactlyBtnRectWrapper"  onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);"  onclick="window.open('{!$Page.XactlySMBImportLogPopup}', 'importLog','location=0,status=0,scrollbars=1,height=600px,width=760px');"  style="float:left;">
                                       <div class="xactlyBtnRect">
                                           <div class="xactlyBtnRectBackground">
                                               <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                  <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                         <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel" style="">
                                                                {!$Label.ViewImportLog}
                                                         </div>
                                                  </div>
                                               </div>
                                           </div>
                                       </div>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </apex:outputPanel>
            <apex:actionFunction name="rerenderPanel" action="{!refreshStatus}" oncomplete="checkReload();" rerender="mainStatusPanel" />
            <input type="hidden" id="iFrameContentHeight"/>  
        </apex:form>

    <script type="text/javascript" language="javascript" src="{!URLFOR($Resource.XactlySMBResources, 'js/XactlySMBJavascript.js')}"></script>
    <style>.hidden { display: none; }</style>
    <div class="hidden">
        <input type="hidden" id="orgName" value="{!URLENCODE($Organization.Name)}" />
        <input type="hidden" id="orgId" value="{!URLENCODE($Organization.Id)}" />
        <input type="hidden" id="currentUserProfile" value="{!URLENCODE(currentUserProfile)}" />
        <input type="hidden" id="currentUserName" value="{!URLENCODE($User.FirstName + ' ' + $User.LastName)}" />
    </div>
    
    <script language="javascript" type="text/javascript">

        jQuery(document).ready(function(){
            checkReload();
        });

        function checkReload(){
            if(String(document.getElementById('importStatusValue').value).toLowerCase() == 'true'){
                setTimeout('rerenderPanel()', parseInt(document.getElementById('importLogFreq').value));
            }
        }

        function xactlyBtnRectMouseOut(e){
            jQuery(".xactlyBtnRectMiddle",jQuery(e)).css('background-position','left top');
            jQuery(".xactlyBtnRectRight",jQuery(e)).css('background-position','right top');
            jQuery(".xactlyBtnRectLabel",jQuery(e)).css('color','#717479');
        }
        function xactlyBtnRectMouseOver(e){
            jQuery(".xactlyBtnRectMiddle",jQuery(e)).css('background-position','left bottom');
            jQuery(".xactlyBtnRectRight",jQuery(e)).css('background-position','right bottom');
            jQuery(".xactlyBtnRectLabel",jQuery(e)).css('color','#454647');
        }
        

    </script>
</body>
</apex:page>
<apex:page controller="XactlyExpress.XactlySMBReviewPlanPodLoader" sidebar="false" showHeader="false" standardStylesheets="false">
    
<style>

    body{
        min-width:900px;
        background:white;
    }

     /* STYLES FOR PLAN QUOTA  */
    
        .rPlanQuotasHeaderP{
            display:none;
        }
        
        .rPlanQuotasCellM{
            display:none;
        }
                
        .rPlanQuotasHeaderN, .rPlanQuotasHeaderA, .rPlanQuotasHeaderQ, .rPlanQuotasHeaderP, .rPlanQuotasCellN, .rPlanQuotasCellA, .rPlanQuotasCellQ, .rPlanQuotasCellM{
            text-align:center;
            color:#3c6e92;
        }
        
        .rPlanQuotasTextHeader{
            color: #3C6E92;
            font-family:'ProximaNovaRegular' !important;
            font-weight:normal !important;
            font-size:14px;
            text-decoration:none;
        }
        
        .rPlanQuotasTextBody{
            font-size:12px;
            color:#3c6e92;
        }
        
        .rPlanCollapsedArrowQuotas{
            width:10px;
            height:10px;        
            float:right;
            margin-right:5px;
        }
        
        .rPlanCollapsedArrowQuotasRight{
            background:url({!URLFOR($Resource.XactlySMBResources,'img/buttons/jaguararrow_right.png')}) no-repeat;
            cursor:pointer;
            width:10px;
            height:11px;
            float:right;
            margin-right:5px;
        }
        
        .rPlanCollapsedArrowQuotasDown{
            background:url({!URLFOR($Resource.XactlySMBResources,'img/buttons/jaguararrow_down.png')}) no-repeat;
            cursor:pointer;
            width:11px;
            height:10px;
            float:right;
            margin-right:5px;
        }
        
      
   

        /* STYLES FOR EDIT AREAS */
    
        .rPlanAreaTickButton{
            cursor:pointer;
            height:15px;
            float:right;
            margin-top:2px;
            margin-right:90px;
            width:auto;
            *width:120px;
        }
        .rPlanAreaPencilButton{
            cursor:pointer;
            display:none;
            height:18px;
            float:right;
            margin-top:3px;
            margin-right:90px;
            width:auto;
            *width:120px;
        }
        
        .rPlanAreaCancelButton {
            cursor: pointer;
            float: right;
            height: 18px;
            margin-right: 75px;
            margin-top: 2px;
            width: auto;
            *width:120px;
        }


        
        /* STYLES FOR PAYMENTS  */
        .formulaIcon{
            background: url({!URLFOR($Resource.XactlySMBResources,'img/buttons/formulaIcon.png')});
            background-position:top;
            width:25px;
            height:21px;
            float:right;
            margin-left: 5px;
        }
        
        table.gray thead tr th{
            height:18px;
            white-space: nowrap;
        }
</style>    
    
    <c:XactlySMBCursor />
    
    <apex:form id="theForm">
    
    
        <apex:outputPanel layout="block" id="paymentPodWrapper" rendered="{!podType == 'payments'}">       
        
            
                    <apex:outputPanel layout="none" rendered="{!IF(canEdit, false, true)}">
                    
                        <div id="paymentDescriptionText" style="height:75px;">
                            <apex:outputpanel style="width:50px;height:50px;float:left;">
                                <img src="{!URLFOR($Resource.XactlySMBResources,'img/layout/quotas1.png')}" />
                            </apex:outputpanel>
                            <div id="paymentDescriptionRealText" style="width:805px;margin-top:15px;float:left;border:solid 1px transparent;padding:5px;margin-left:8px;">
                                {!payment.sObjectPayment.XactlyExpress__Description__c}
                            </div>
                            <apex:outputpanel style="width:50px;height:50px;float:left;">
                                <img src="{!URLFOR($Resource.XactlySMBResources,'img/layout/quotas2.png')}" />
                            </apex:outputpanel>
                            <div style="clear:both;"></div>
                        </div>
                    
                    </apex:outputPanel>
                    
                    <apex:outputPanel layout="none" rendered="{!IF(canEdit, true, false)}">
                    
                        <div id="paymentDescriptionText" onmouseover="rPlanShowPencil(this);" onmouseout="rPlanHidePencil(this);" style="height:75px;margin-bottom:10px;">
                            <div style="width:50px;height:50px;float:left;"><img src="{!URLFOR($Resource.XactlySMBResources,'img/layout/quotas1.png')}" /></div>
                            <div id="paymentDescriptionRealText" style="width:805px;margin-left:8px;margin-top:15px;padding:5px;float:left;border:solid 1px transparent;" onmouseover="style.border='solid 1px #dddddd';" onmouseout="style.border='solid 1px transparent';">
                                {!payment.sObjectPayment.XactlyExpress__Description__c}
                            </div>
                            <div style="width:50px;height:50px;float:left;"><img src="{!URLFOR($Resource.XactlySMBResources,'img/layout/quotas2.png')}" /></div>
                            <div style="float:right">
                            	<apex:outputPanel layout="none" rendered="{!IF(isReadOnlyAdmin, false, true)}">
	                                <div class="rPlanAreaPencilButton" onclick="descriptionSwapEditMode(this, 'open', 'paymentDescriptionText', 'paymentDescriptionEdit', 'paymentDescriptionRealText')">
	                                     <apex:outputText value="{!$Label.xactlyexpress__editDescription}" style="font-size:10px;color:#3C6E92;" />    
	                                       <div class="inteactionIconSprite pencilEdit"></div>
	                                </div>
	                            </apex:outputPanel>
                            </div>
                            <div style="clear:both;"></div>
                        </div>
                    
                    </apex:outputPanel>


                    <div id="paymentDescriptionEdit" style="background:#ffffff;border:solid 1px #aaaaaa;padding:20px 50px 25px 50px;margin-bottom:15px;display:none;">
                         <div><apex:outputText styleClass="rPlanDescriptionTitle" value="{!$Label.xactlyexpress__paymentDescription}" /></div>
                         <div>
                             <apex:outputPanel layout="block" rendered="{!canEdit}">
                                <apex:inputTextarea cols="96" rows="6" value="{!payment.sObjectPayment.XactlyExpress__Description__c}" style="border:none;" onkeypress="checkLimitArea(this, 1024);" />                             
                             </apex:outputPanel>
                               <div class="rPlanAreaCancelButton" onclick="descriptionSwapEditMode(this, 'cancel', 'paymentDescriptionText', 'paymentDescriptionEdit', 'paymentDescriptionRealText');">
                                   <apex:outputText value="{!$Label.xactlyexpress__cancelEdition}" style="font-size:10px;color:#3C6E92;" />
                                    <div class="inteactionIconSprite delete_small" style="margin-left: 72px;margin-right: 17px;margin-top: -14px;"></div>
                            </div>
                             <div class="rPlanAreaTickButton" onclick="descriptionSwapEditMode(this, 'edit', 'paymentDescriptionText', 'paymentDescriptionEdit', 'paymentDescriptionRealText');">
                                <div class="inteactionIconSprite tickIcon" style="margin-left: 4px; float: right;"></div>
                                <apex:outputText value="{!$Label.xactlyexpress__saveDescription}" style="font-size:10px;color:#3C6E92;" />                                     
                             </div>                                    
                         </div>
                     </div>
            
             <apex:outputPanel rendered="{!payment.showDetailBox}">
                <apex:outputPanel layout="block" style="float:left;width:265px;" styleClass="paymentBackground">               
                    <table cellspacing="0" cellpadding="10" border="0" style="margin-left:10px;margin-top:15px;">
                        <tr>
                            <td class="first">
                                    {!labels[1]}
                            </td>
                            <td>
                            	<a target="_blank" style="display:{!IF(canEdit,'','none')};" href="{!$Page.XactlySMBPlanCreateCredits}?credit={!payment.sObjectPayment.CreditRuleID__r.id}&id={!payment.sObjectPayment.PlanID__c}&step=2">{!payment.sObjectPayment.CreditRuleID__r.Name}</a>
                                
                                <apex:outputpanel layout="none" rendered="{!!canEdit}">
                                    {!payment.sObjectPayment.CreditRuleID__r.Name}
                                </apex:outputpanel>
                                
                            </td>
                        </tr>
                        <apex:outputPanel layout="none" rendered="{!AND(payment.sObjectPayment.CreditRuleID__r.XactlyExpress__QuotaID__c != null,payment.sObjectPayment.XactlyExpress__PaymentRampType__c != rampTypeResutl)}">                        
                            <tr>
                                <td class="first">
                                        {!labels[2]}
                                </td>
                                <td>
                                	
                                	<a target="_blank" style="display:{!IF(canEdit,'','none')};" href="{!$Page.XactlySMBPlanCreateStep3}?quota={!payment.sObjectPayment.CreditRuleID__r.QuotaID__c}&id={!payment.sObjectPayment.PlanID__c}&step=3">{!payment.sObjectPayment.CreditRuleID__r.QuotaID__r.Name} ({!payment.FrequencyLabel})</a>
                                    
                                    <apex:outputpanel layout="none" rendered="{!!canEdit}">
                                        {!payment.sObjectPayment.CreditRuleID__r.QuotaID__r.Name} ({!payment.FrequencyLabel})
                                    </apex:outputpanel>
                                    
                                </td>
                            </tr>
                        </apex:outputPanel>
                        <tr>
                            <td class="first">
                                    {!labels[3]}
                            </td>
                            <td>
                            
                                <a target="_blank" style="display:{!IF(canEdit,'','none')};" href="{!$Page.XactlySMBPlanCreateStep5}?payment={!payment.sObjectPayment.Id}&id={!payment.sObjectPayment.PlanID__c}&step=5">{!payment.frequencyName}</a>
                                
                                <apex:outputpanel layout="none" rendered="{!!canEdit}">
                                    {!payment.frequencyName}
                                </apex:outputpanel>
                                
                            </td>
                        </tr>
                    </table>
                    </apex:outputPanel>
                </apex:outputPanel>            
            
        
                <apex:variable var="showRateAsCPeriod" value="{!0}" />
                <div style="float:left;">
                    <div style="width:640px;max-width:640px;overflow:auto;">
	                     <div style="display: table;">
	                     	<div style="display: table-row;">
		                        <table cellpadding="0" cellspacing="0" border="0" class="gray" style="width:100%;">
		                            <thead>
		                                
		                                <tr>
		                                    <th>
		                                        <div style="padding-right:10px;">
		                                            <apex:outputpanel layout="none">
		                                                <apex:outputpanel layout="none" rendered="{!payment.sObjectPayment.XactlyExpress__PaymentRampType__c == labels[6]}">
		                                                    {!$Label.xactlyexpress__Tiers} ({!$Label.xactlyexpress__Percent} {!$Label.xactlyexpress__to} {!labels[2]})
		                                                </apex:outputpanel>
		                                                <apex:outputpanel layout="none" rendered="{!payment.sObjectPayment.XactlyExpress__PaymentRampType__c == labels[7]}">
		                                                    {!$Label.xactlyexpress__tiersAmountSold}
		                                                </apex:outputpanel>
		                                            </apex:outputpanel>
		                                        </div>
		                                    </th>
		                                    
		                                    <apex:repeat value="{!payment.qualifierNameList}" var="qualifierName">
		                                        <th colspan="2">
		                                            <div style="padding-right:10px;">
		                                                <apex:outputpanel layout="none" >
		                                                    <c:XactlySMBLongTextBubble text="{!qualifierName}" maxLength="16" wrappStyle="color: #426E83;font-family: 'ProximaNovaRegular' !important;font-weight: normal !important;font-size: 14px;text-align:center;" />
		                                                </apex:outputpanel>
		                                            </div>
		                                        </th>
		                                    </apex:repeat>
		                                    
		                                    <th colspan="2">
		                                        <div style="padding-right:10px;">
		                                            <apex:outputpanel layout="none">
		                                                
		                                                <apex:outputpanel layout="none" rendered="{!payment.sObjectPayment.XactlyExpress__PaymentAmountType__c != labels[5] && payment.sObjectPayment.XactlyExpress__PaymentAmountType__c != labels[8]}">
		                                                    <apex:outputText value="{!IF(payment.qualifierNameList.size>0,labels[0],$Label.xactlyexpress__rates)}" />
		                                                </apex:outputpanel>
		
		                                                <apex:outputpanel layout="none" rendered="{!payment.sObjectPayment.XactlyExpress__PaymentAmountType__c == labels[5]}">
		                                                    <apex:outputText value="{!$Label.xactlyexpress__Amounts}" />
		                                                </apex:outputpanel>
		
		                                                <apex:outputpanel layout="none" rendered="{!payment.sObjectPayment.XactlyExpress__PaymentAmountType__c == labels[8]}">
		                                                    <apex:outputText value="{!$Label.xactlyexpress__Prize}" />
		                                                </apex:outputpanel>
		                                                
		                                            </apex:outputpanel>
		                                        </div>    
		                                    </th>
		                                   </tr>
		                                   
		                            </thead>
		                            <tbody>
		
		                                <apex:variable var="rowCount" value="{!0}"/>
		                                <apex:repeat value="{!payment.paymentRuleRampList}" var="paymentRuleRamp">
		                                    <tr class="{!IF(rowCount = 0, 'even','odd')}">
		                                        
		                                        <apex:outputPanel layout="none" rendered="{!(payment.sObjectPayment.XactlyExpress__PaymentAmountType__c == labels[5]) || (payment.sObjectPayment.XactlyExpress__PaymentAmountType__c == labels[8])}">
		                                            <td>
		                                                <div style="padding-right:10px;">{!paymentRuleRamp.Min} </div>
		                                            </td>
		                                        </apex:outputPanel>
		                                        
		                                        <apex:outputPanel layout="none" rendered="{!(payment.sObjectPayment.XactlyExpress__PaymentAmountType__c != labels[5]) && (payment.sObjectPayment.XactlyExpress__PaymentAmountType__c != labels[8])}">
		                                            <td>
		                                                <div style="padding-right:10px;">{!paymentRuleRamp.Min} - {!paymentRuleRamp.Max} </div>
		                                            </td>
		                                        </apex:outputPanel>
		                                        
		                                        <apex:repeat value="{!paymentRuleRamp.tiers}" var="tier">
		                                            <apex:variable var="showRateAsCPeriod" value="{!IF(tier.showRateAsCPeriodLabel, 1, showRateAsCPeriod)}" />
		                                            <apex:outputPanel layout="block" rendered="{!tier.isDisplayed}">
		                                            <td style="border: none;">
		                                                <div style="padding-right:10px;">		                                                		
                                                                <div>{!tier.ValueOrFormula}
                                                                <apex:outputpanel layout="none" rendered="{!tier.showPercentage && payment.sObjectPayment.XactlyExpress__PaymentAmountType__c != labels[4] && payment.sObjectPayment.XactlyExpress__PaymentAmountType__c != labels[5] && payment.sObjectPayment.XactlyExpress__PaymentAmountType__c != labels[8]}">
                                                                %
                                                                </apex:outputpanel>
                                                                
                                                                    <apex:outputpanel layout="none" rendered="{!tier.showFormula != null}">
                                                                        <apex:outputPanel id="hiddenFormula" styleClass="bubble_html" style="display:none">
                                                                            <apex:outputPanel layout="block">
                                                                                <apex:outputPanel layout="block" styleClass="PNovaSemiBold14c2">{!$Label.xactlyexpress__rateFormula}:</apex:outputPanel>
                                                                                <apex:outputPanel layout="block" style="text-align:center;">{!tier.showFormula}</apex:outputPanel>
                                                                            </apex:outputPanel>
                                                                        </apex:outputPanel>
                                                                    </apex:outputpanel>
                                                                
                                                                </div>                                                              
                                                                
		                                                </div>
		                                            </td>		                                             
		                                            <td>
		                                            	<apex:outputPanel id="formulaIconByProfilePlan" layout="block" style="display:{!IF(tier.showFormula != null,'relative','none')}" onmouseover="lunchCustomBubble(this)" onmouseout="adjustmentBoxHide()" styleClass="formulaIcon {!IF(tier.details,'trigger2','')}" ></apex:outputPanel>
		                                                
		                                                
		                                                <apex:outputPanel id="calculatedFormulaByProfilePlan" layout="none"> 
                                                            <apex:outputPanel id="hiddenFormulaByProfilePlan" styleClass="bubble_html2" style="display:none">
                                                                  <apex:outputPanel layout="block">
                                                                      <apex:outputPanel layout="block" styleClass="PNovaSemiBold14c2">{!$Label.xactlyexpress__rateFormula}:</apex:outputPanel>
                                                                      <apex:outputPanel layout="block" style="text-align:center;">{!tier.showFormula}</apex:outputPanel>
                                                                      <br />
                                                                      <apex:outputPanel layout="block" style="text-align:center;" rendered="{!tier.details}">
                                                                          <apex:variable var="rowDetailCount" value="{!0}"/>
                                                                          <table cellspacing="0" cellpadding="0" border="0" class="gray" style="width:100%;">
                                                                              <thead>
                                                                                  <apex:repeat value="{!tier.formulaDetailsHeader}" var="dh">
                                                                                      <tr>
                                                                                          <apex:repeat value="{!dh.cells}" var="dh">
                                                                                              <th>{!dh.value}</th>
                                                                                          </apex:repeat>
                                                                                      </tr>
                                                                                  </apex:repeat>
                                                                              </thead>
                                                                              <tbody>
                                                                                  <apex:repeat value="{!tier.formulaDetails}" var="dr">
                                                                                      <tr class="{!IF(rowDetailCount = 0, 'even','odd')}">
                                                                                          <apex:repeat value="{!dr.cells}" var="dc">
                                                                                              <td>{!dc.value}</td>
                                                                                          </apex:repeat>
                                                                                      </tr>
                                                                                      <apex:variable var="rowDetailCount" value="{!(rowDetailCount * -1) + 1}"/>
                                                                                  </apex:repeat>
                                                                              </tbody>
                                                                          </table>
                                                                      </apex:outputPanel>
                                                                  </apex:outputPanel>
                                                              </apex:outputPanel> 
                                                          </apex:outputPanel>
                                                          
                                                          
                                                          
		                                            </td>
		                                            </apex:outputPanel>
		                                        </apex:repeat>
		                                        
		                                    </tr>
		                                    <apex:variable var="rowCount" value="{!(rowCount * -1) + 1}"/>
		                                </apex:repeat>
		                                
		                                
		                            </tbody>
		                        </table>
	                        </div>
	                        <div style="width:auto;padding:3px;background:#c7c7c7;color:#426E83;display: table-row;">
	                            <apex:outputpanel rendered="{!showRateAsCPeriod == 1 || showRateAsCPeriod == 1.0}" layout="inline">
	                                {!$Label.xactlyexpress__ratesAsOfCurrentPeriod}
	                            </apex:outputpanel>
	                            &nbsp;
	                        </div>
                        </div>
                    </div>
                </div>
                <div style="clear:both;" />
        
        
        
        </apex:outputPanel>

        <apex:outputPanel layout="block" id="planQuotaBodyWrapperComponent" rendered="{!podType == 'quotas'}">
            <c:XactlySMBPlanQuota id="XactlySMBPlanQuota" onDash="{!onDashboard}" pq="{!pq}" setReviewPlanStyles="true" currentSettings="{!currentSettings}"/>
        </apex:outputPanel>

    
        <apex:actionFunction action="{!save}" name="save" rerender="theForm" oncomplete="waitOff();"/>
    
    </apex:form>

    <input type="hidden" id="label_close" value="{!$Label.close}" />

<table id="adjustmentBox" class="adjustmentBoxBase" cellspacing="0" cellpadding="0" style="top: 0px; left: 0px; position: absolute; z-index: 3999999;">
 <tbody>
  <tr class="adjustmentBoxBase"><td class="adjustmentBoxBase"></td><td class="adjustmentBoxBase"></td><td class="adjustmentBoxBase"></td></tr>
  <tr class="adjustmentBoxBase"><td class="corner topleft bgVertical adjustmentBoxBase"></td><td class="top bgVertical adjustmentBoxBase"></td><td class="corner topright bgVertical adjustmentBoxBase"></td></tr>
  <tr class="adjustmentBoxBase">
    <td class="left bgHorizontal adjustmentBoxBase"></td>
    <td class="bubble_content adjustmentBoxBase">
        <div id="adjustmentBoxContent" style="border:0;width:33px;height:33px;">
        
        
        </div>
    </td>
    <td class="right bgHorizontal adjustmentBoxBase"></td></tr>
  <tr class="adjustmentBox">
    <td class="corner bottomleft bgVertical adjustmentBoxBase"></td>
    <td class="bottom bgVertical adjustmentBoxBase" style="height:20px;" ><center><div class="imgBubTail bgVertical" style="display:none;height:29px;width:29px;">&nbsp;</div></center></td>
    <td class="corner bottomright bgVertical adjustmentBoxBase"></td>
  </tr>
 </tbody>
</table>     

<div id="adjustmentBoxCursor" style="display:none;background: transparent; width:32px; height:32px; z-index: 10000; border: none; padding:0px"><img src="{!URLFOR($Resource.XactlySMBResources, 'img/icons/loader2.gif')}" /></div>


    <apex:stylesheet value="{!URLFOR($Resource.XactlyExpress__XactlySMBResources ,'css/XactlySMBStyles.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.XactlyExpress__XactlySMBResources ,'components/css/XactlySMBShowAdjustments.css')}" />
        
    <script type="text/javascript" language="javascript" src="{!URLFOR($Resource.XactlySMBResources, 'js/XactlySMBJavascript.js')}"></script>
    <script type="text/javascript" language="javascript" src="{!URLFOR($Resource.XactlySMBResources, 'components/js/XactlySMBShowAdjustments.js')}"></script>
    
<script>
        function rPlanShowPencil(obj){
            if(!jQuery(obj).hasClass('rPlanEditMode')){
                var btn = jQuery(obj).find('.rPlanAreaPencilButton')[0];
                jQuery(btn).show();
            }
        }
        function rPlanHidePencil(obj){
            if(!jQuery(obj).hasClass('rPlanEditMode')){
                var btn = jQuery(obj).find('.rPlanAreaPencilButton')[0];
                jQuery(btn).hide();
            }
        }
        
        function descriptionSwapEditMode(btn, mode, dText, dEdit, realText ){           
                                      //(this,'cancel', 'planDescriptionText', 'planDescriptionEdit', 'planDescriptionRealText');
            var divText = document.getElementById(dText); 
            var divEdit = document.getElementById(dEdit);
            var divTextReal = document.getElementById(realText);
            var divTextArea = jQuery(divEdit).find('textarea')[0];
            var t = ' ';
             
            if(mode == 'open'){
                t = jQuery.trim(jQuery(divTextReal).html());
                t = t.substring(0, 1024);
                t = t.replace(/<br \/>/g, '\n');
                t = t.replace(/<br\/>/g, '\n');
                t = t.replace(/<br>/g, '\n');
                if(t.replace(/\s/g,'').indexOf('href=\"javascript:;\"') == -1 || realText != 'planDescriptionRealText'){
                    jQuery(divTextArea).val(t);
                } else if (t.replace(/\s/g,'').indexOf('href=\"javascript:;\"') != -1) {
                    jQuery(divTextArea).val('');
                }
                jQuery(btn).hide('fast');
                jQuery(divText).fadeOut('fast');
                jQuery(divEdit).fadeIn('slow');  
            }
            else if(mode == 'cancel'){
                jQuery(divEdit).fadeOut('fast'); 
                jQuery(divText).fadeIn('slow');
            }
            else if(mode == 'edit'){
                t = jQuery(divTextArea).val();
                t = t.substring(0, 1024);
                t = t.replace(/\n/g, '<br />');
                jQuery(divTextReal).html(t);
                if(realText == 'planDescriptionRealText' && String(divTextArea.value).replace(/\s/g,'') == ''){
                    divTextReal.innerHTML = document.getElementById('label_msg_no_plan_description').value+''+'<a href=\"javascript:;\" onclick=\"openPlanDescription(true);\"> '+document.getElementById('label_here').value+' </a>'+document.getElementById('label_msg_no_plan_description2').value;
                }
                jQuery(divEdit).fadeOut('fast'); 
                jQuery(divText).fadeIn('slow');
                waitOn();
                save();
            }
            
        }

    jQuery(document).ready(function(){
    
    
    });


</script>    
 

<script>

    function lunchCustomBubble(elem){
        
        adjustmentBoxResetHideShow();
        adjustmentTriggerUpCanceled = false;
        
        var wrapper = document.getElementById('adjustmentBoxContent');
        
        var content = document.createElement('div');
        content.className = 'adjustmentBoxContentLastWrapper';
        content.style.maxHeight = '200px';
        content.style.minWidth = '200px';
        
        var data = jQuery(jQuery(elem).parent()).find('.bubble_html2')[0];
        data = data.cloneNode(true);
        data.className = 'adjustmentBoxTableLastWrapper';
        data.style.display = 'block';
        
        content.appendChild(data);
        
        wrapper.innerHTML = '';
        wrapper.style.width = 'auto';
        wrapper.style.height = 'auto';
        wrapper.appendChild(content);
        
        adjustmentBoxShow();
        
    }

    

</script>
    
    
</apex:page>
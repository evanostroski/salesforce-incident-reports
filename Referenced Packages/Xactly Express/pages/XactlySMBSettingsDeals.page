<!--
Developed by Timba Software Corp. www.timbasoftware.com admin@timbasoftware.com
 This page defines Settings
 @author Juan Bessonart <jbessonart@timbasoftware.com>
-->
<apex:page id="XactlySMBSettingsDeals" controller="XactlyExpress.XactlySMBSettingsDealsController" title="" sidebar="false" showHeader="false" standardStylesheets="true" action="{!pageAction}">

   <!-- Custom Cursor Loader -->
   <c:XactlySMBCursor />
   <!-- Custom Cursor Loader -->
    <title>{!titleLabel}</title>
    <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.XactlySMBResources ,'popup/css/jqpopup.css')}"/>
    <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.XactlySMBResources ,'pages/css/XactlySMBSettingsDeals.css')}" />

    <!-- PAGE WRAPPER -->

    <div class="pageContent" id="pContent" style="min-height: 277px;margin-bottom:0px;">
        <!-- HEADER -->
        <apex:form id="settingsForm" >
            <apex:outputPanel layout="block" styleClass="header" id="headerContainer">
                <c:XactlySMBHeader id="headerCall" useGear="{!(settings.XactlyExpress__ImportSource__c != '')}" isSaveNext="true" gearOptions="{!optionsInDrop}" isAdmin="{!isAdmin}"  isActive="{!isActive}" nbrSeparator="{!nbrSeparator}" nbrDecimal="{!nbrDecimal}" currentUserOrSlected="{!currentUserOrSlected}" emulatingUserURLAppend="{!emulatingUserURLAppend}" wqlabel="{!currentSettings.quotasPluralCap}" wclabel="{!currentSettings.creditsPluralCap}" wlabel="{!currentSettings.dealsPluralCap}" step="3" wtype="setting" hlabel="{!defineDealsFieldsLabel}"  stepHelp="SettingsDeals" showPrevious="true" showNext="true" showSave="true" showRefresh="true" showExport="false" selected="3" selectedLevel2="2"/>
            </apex:outputPanel>
          
            <div  class="error">
                <!-- INSUFFICIENT PERMISSIONS -->
                <apex:outputPanel rendered="{!!isAdmin || !isActive}">
                     <c:XactlySMBErrorMsg error="{!$Label.xactlyexpress__InsufficientPermissions}" />
                </apex:outputPanel>
            </div>

            <div id="shadowContainer" class="shadowContainer">
            <apex:outputpanel layout="block" id="chatter" styleClass="additionalContent" rendered="{!isAdmin && isActive}">  
                <c:XactlySMBChatterWall objectId="{!$User.Id}" showHeader="true" showWall="true" currentPage="{!$CurrentPage.Name}" chatterCurrentUserImageUrl="{!chatterCurrentUser_ImageUrl}" rendered="{!isChatterEnabled && isChatterLoaded}"/>
            </apex:outputPanel>
            <apex:inputText value="{!settings.XactlyExpress__ImportSource__c}" styleclass="importSourceValue"/>
            <input type="hidden" value="{!isDealMapping}" class="isDealMapping"/>
            <!-- MAIN CONTENT -->
            <apex:outputPanel id="dealsContent" layout="block" styleClass="mainContent" rendered="{!isAdmin && isActive}">
                <input type="hidden" id="opportunityFieldsAccounts" value="{!opportunityFieldsAccounts}"/>
                <input type="hidden" id="opportunityFieldsProducts" value="{!opportunityFieldsProducts}"/>
      		    <input class="hidden" id="id_importSourceName" value="{!JSINHTMLENCODE(currentImportSource.Name)}" />
                <input type="hidden" id="countText" value="{!countText}"/>
                <input type="hidden" id="countDate" value="{!countDate}"/>
                <input type="hidden" id="countCurrency" value="{!countCurrency}"/>
                <input type="hidden" id="countNumber" value="{!countNumber}"/>
                <input type="hidden" id="countBoolean" value="{!countBoolean}"/>
                <input class="hidden" id="curr_page_param" value="{!JSINHTMLENCODE(currentPage)}"/>
                
                <input type="hidden" id="currentImportSource_SourceLabel__c" value="{!currentImportSource.XactlyExpress__SourceLabel__c}" />
                
                
                <apex:repeat value="{!ErrorMsg}" var="iter">
                    <apex:outputText value="{!iter}" escape="true" styleclass="errorMsg" style="margin-top:10px;margin-left:204px;position:relative;"/><br/>
                </apex:repeat>
                <apex:outputPanel styleclass="reportDiv"  layout="block" rendered="{!warningMsg.size > 0}" id="errorMsg" style="margin-top:10px;margin-left:204px;position:relative;">
                    <apex:repeat value="{!warningMsg}"  var="iter">
                    	{!iter}
                    </apex:repeat>
                </apex:outputPanel>
                <table class="dealAttributeMainTable" border="0" cellspacing="0px" cellpadding="0px">
                    <tr>
                        <td rowspan="3" style="width: 152px;padding: 20px 10px; 0 5px;" valign="top" align="left">
                            <div class="topLeftPanel"></div>
                            <apex:outputPanel layout="block" id="lateralMenu" styleclass="bodyLeftPanel">
                                <div class="resText">
                                   <apex:outputText value="{!$Label.xactlyexpress__ExpressFields}" />
                                </div>
                                <div onclick="jQuery('.importSourceValue').val('');waitOn();jQuery('.isRefresing').val('Refreshing...');refreshMapping();return false;" class="importSrcItem{!IF(settings.ImportSource__c = '','Selected','')}"><a href="?ImportSource="><apex:outputText value="{!$Label.xactlyexpress__ViewAllFields}" /></a></div>
                                <div class="resText" style="margin-top:30px;">
                                   <apex:outputText value="{!$Label.xactlyexpress__SomeMappings}">
                                       <apex:param value="{!currentSettings.dealsPluralCap}"/>
                                   </apex:outputText>
                                </div>
                                <div onclick="jQuery('.isDealMapping').val('true');jQuery('.importSourceValue').val('CSV__File');waitOn();jQuery('.isRefresing').val('Refreshing...');refreshMapping();return false;" class="importSrcItem{!IF(settings.ImportSource__c= 'CSV__File','Selected','')}"   ><a href="?ImportSource=CSV__File">{!$Label.ExternalCSV}</a></div>
                                <apex:repeat value="{!iSources}" var="impSrc">
                                  <apex:outputPanel rendered="{!!(impSrc.XactlyExpress__ReleaseType__c == IMPORT_SOURCE_RELEASE_TYPE_DELETE)}">
                                    <div onclick="jQuery('.isDealMapping').val('true');jQuery('.importSourceValue').val('{!JSENCODE(impSrc.Name)}');waitOn();jQuery('.isRefresing').val('Refreshing...');refreshMapping();return false;" class="importSrcItem{!IF(settings.ImportSource__c = impSrc.Name,'Selected','')}"><a href="?ImportSource={!impSrc.Name}">{!impSrc.Name}</a></div>
                                  </apex:outputPanel>
                                </apex:repeat>
                                <apex:outputPanel layout="block" rendered="{!iSources.size == 0}" styleclass="noMapDescriptionContainer">
                                    <apex:outputText value="{!$Label.xactlyexpress__FirstNoMappingDesc}" escape="false" />

                                </apex:outputPanel>
                                <div class="resText" style="margin-top:30px;">
                                   <apex:outputText value="{!$Label.xactlyexpress__SomeMappings}">
                                       <apex:param value="{!$Label.xactlyexpress__Release}"/>
                                   </apex:outputText>
                                </div>
                                <div onclick="jQuery('.isDealMapping').val('false');jQuery('.importSourceValue').val('CSV__File_REL');waitOn();jQuery('.isRefresing').val('Refreshing...');refreshMapping();return false;" class="importSrcItem{!IF(settings.ImportSource__c= 'CSV__File_REL','Selected','')}"   ><a href="?ImportSource=CSV__File_REL">{!$Label.ExternalCSV}</a></div>
                                <apex:repeat value="{!rSources}" var="impSrc">
                                   <apex:outputPanel rendered="{!!(impSrc.XactlyExpress__ReleaseType__c == IMPORT_SOURCE_RELEASE_TYPE_DELETE)}">
                                      <div onclick="jQuery('.isDealMapping').val('false');jQuery('.importSourceValue').val('{!JSENCODE(impSrc.Name)}');waitOn();jQuery('.isRefresing').val('Refreshing...');refreshMapping();return false;" class="importSrcItem{!IF(settings.ImportSource__c = impSrc.Name,'Selected','')}"><a href="?ImportSource={!impSrc.Name}">{!impSrc.Name}</a></div>
                                   </apex:outputPanel>
                                </apex:repeat>
                                <div class="resText" style="margin-top:30px;">
                                   <apex:outputText value="{!$Label.xactlyexpress__SomeMappings}">
                                       <apex:param value="{!$Label.xactlyexpress__DeleteHold}"/>
                                   </apex:outputText>
                                </div>
                                <apex:repeat value="{!rSources}" var="impSrc">
                                  <apex:outputPanel rendered="{!impSrc.XactlyExpress__ReleaseType__c == IMPORT_SOURCE_RELEASE_TYPE_DELETE}">
                                    <div onclick="jQuery('.isDealMapping').val('false');jQuery('.importSourceValue').val('{!JSENCODE(impSrc.Name)}');waitOn();jQuery('.isRefresing').val('Refreshing...');refreshMapping();return false;" class="importSrcItem{!IF(settings.ImportSource__c = impSrc.Name,'Selected','')}"><a href="?ImportSource={!impSrc.Name}">{!impSrc.Name}</a></div>
                                  </apex:outputPanel>
                                </apex:repeat>
                                <br/>
                                  <div class="xactlyBtnRectWrapper"  onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);" onclick="addMapping();" id="addMappingLink" style="float:left; margin-left: 44px; margin-top: 14px;">
                                      <div class="xactlyBtnRect">
                                          <div class="xactlyBtnRectBackground">
                                              <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                 <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                     <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel">  {!$Label.AddMapping}</div>
                                                 </div>
                                              </div>
                                          </div>
                                      </div>
                                   </div>
                            </apex:outputPanel>
                            <div class="bottomLeftPanel"></div>
                            
                        </td>
                        <td valign="top"  align="right">


                                <div class="tableDAWrapper">
                                <div class="resText topTableElementMax">{!$Label.Mapping}</div>

                                <apex:outputPanel layout="none" rendered="{!!(settings.XactlyExpress__ImportSource__c != '' )}">
                                    <div class="resText topTableElement">{!$Label.xactlyexpress__viewAllExpressFields}</div>
                                </apex:outputPanel>
                                
		                        <apex:outputPanel layout="block" style="float:right;display:none;" styleClass="btn_silver_wrapper estimatorCreatePage" onmouseover="btnSilverOver(this);" onmouseout="btnSilverOut(this);" onclick="waitOn();createCObjectPageLayoutDA();" rendered="{!((!ISNULL(currentImportSource) && currentImportSource.XactlyExpress__UsageType__c == 'Import' && currentImportSource.XactlyExpress__SourceLabel__c != 'CSV__File'  &&  currentImportSource.Name  != '') && (settings.XactlyExpress__ImportSource__c != 'CSV__File_REL'  && settings.XactlyExpress__ImportSource__c != 'CSV__File' && currentImportSource.XactlyExpress__SourceType__c != IMPORT_SOURCE_QUICKBOOK))}">
		                            <apex:outputPanel layout="inline" styleClass="btn_silver">
		                                <apex:outputPanel layout="inline" styleClass="btn_silver_r">
		                                    <apex:outputText styleClass="a_btn_silver" value="{!$Label.xactlyexpress__CreateEstimatorPage}" />
		                                </apex:outputPanel>
		                            </apex:outputPanel>
		                        </apex:outputPanel>
		                        
		                        <div id="permission_set_process_wrapper" style="float:right;display:none;border:solid 1px #222222; border-radius:5px;padding:5px;color:#222222;margin-top:4px;background:#ffffff;">
		                          <div id="permission_set_process_close" style="float:right;background:url({!URLFOR($Resource.XactlySMBResources ,'img/buttons/cancel.png')});width:12px;height:11px;cursor:pointer;margin-left:10px;" onclick="jQuery('#permission_set_process_wrapper').fadeOut();">&nbsp;</div><div id="permission_set_process_msg" style="float:left;text-align: left;">&nbsp;</div>
		                        </div>
		                        
                                     <apex:outputPanel layout="none" rendered="{!settings.XactlyExpress__ImportSource__c == 'CSV__File' || settings.XactlyExpress__ImportSource__c == 'CSV__File_REL' || (!ISNULL(currentImportSource) && currentImportSource.XactlyExpress__SourceLabel__c = 'CSV__File' && currentImportSource.Name  != '')}">
                                        <c:XactlySMBDealAttributeOrder id="dealAttrOrderComp" importSourceToMapping="{!settings.XactlyExpress__ImportSource__c}"  />
                                     </apex:outputPanel>

                                     <apex:outputPanel layout="none" rendered="{!((ISNULL(currentImportSource) || currentImportSource.XactlyExpress__SourceLabel__c != 'CSV__File'  ||  currentImportSource.Name  == '') && (settings.XactlyExpress__ImportSource__c != 'CSV__File_REL'  && settings.XactlyExpress__ImportSource__c != 'CSV__File'))}">
                                             <table class="dealAttributeTable" cellpadding="0" cellspacing="0">
                                                <thead>
                                                    <tr class="tableHeader">
                                                        <th style="width: 43px;">
                                                            {!$Label.Options}
                                                        </th>
                                                        <th style="width: 80px;">
                                                            <apex:outputPanel rendered="{!sortElement == 'DataType__c'}" layout="block" style="float:left;margin-top:3px;">
                                                                <div class="inteactionIconSprite {!IF(sortByDesc == true,'arrowDown','arrowUp')}"></div>
                                                            </apex:outputPanel>
                                                            <a href="javascript:;" onclick="setOrder('DataType__c')">
                                                                {!$Label.DataType}
                                                            </a>
                                                        </th>
                                                        <apex:outputPanel rendered="{!(settings.XactlyExpress__ImportSource__c != 'CSV__File' && settings.XactlyExpress__ImportSource__c != '')}" layout="none">
                                                            <th>
                                                                <apex:outputPanel rendered="{!sortElement == 'OpportunityMapField__c'}" layout="block" style="float:left;margin-top:3px;">
                                                                    <div class="inteactionIconSprite {!IF(sortByDesc == true,'arrowDown','arrowUp')}"></div>
                                                                </apex:outputPanel>
                                                                <a href="javascript:;" onclick="setOrder('OpportunityMapField__c')">
                                                                    <apex:outputtext rendered="{!currentImportSource.XactlyExpress__SourceType__c != IMPORT_SOURCE_QUICKBOOK}" escape="false" value="{!$Label.xactlyexpress__SalesforceFieldName}">
                                                                       <apex:param value="{!currentImportSource.XactlyExpress__SourceLabel__c}" />
                                                                    </apex:outputtext>
                                                                    <apex:outputtext rendered="{!currentImportSource.XactlyExpress__SourceType__c == IMPORT_SOURCE_QUICKBOOK}" escape="false" value="{!$Label.xactlyexpress__QuickbooksFieldName}">
                                                                       <apex:param value="{!currentImportSource.XactlyExpress__SourceLabel__c}" />
                                                                    </apex:outputtext>
                                                                </a>
                                                            </th>
                                                        </apex:outputPanel>
                                                        <th style="width: 165px;">
                                                            <apex:outputPanel rendered="{!sortElement == 'DisplayName__c'}" layout="block" style="float:left;margin-top:3px;">
                                                                <div class="inteactionIconSprite {!IF(sortByDesc == true,'arrowDown','arrowUp')}"></div>
                                                            </apex:outputPanel>
                                                            <a href="javascript:;" onclick="setOrder('DisplayName__c')">
                                                                {!$Label.ExpressFieldName}
                                                            </a>
                                                        </th>

                                                        <apex:outputPanel rendered="{!settings.XactlyExpress__ImportSource__c == ''}" layout="none">
                                                            <th>{!$Label.xactlyexpress__Description}</th>
                                                        </apex:outputPanel>
                                                        <th style="width: 50px;">
                                                            <apex:outputPanel rendered="{!sortElement == 'isKey__c'}" layout="block" style="float:left;margin-top:3px;">
                                                                <div class="inteactionIconSprite {!IF(sortByDesc == true,'arrowDown','arrowUp')}"></div>
                                                            </apex:outputPanel>
                                                            <a href="javascript:;" onclick="setOrder('isKey__c')">
                                                                {!$Label.UniqueID}
                                                            </a>
                                                        </th>
                                                        <th style="width: 50px;border-right: 0px none;">
                                                            <apex:outputPanel rendered="{!sortElement == 'isRequired__c'}" layout="block" style="float:left;margin-top:3px;">
                                                               <div class="inteactionIconSprite {!IF(sortByDesc == true,'arrowDown','arrowUp')}"></div>
                                                            </apex:outputPanel>
                                                            <a href="javascript:;" onclick="setOrder('isRequired__c')">
                                                                {!$Label.DealAttRequired}
                                                            </a>
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                <apex:variable var="iterIndex" value="{!0}"/>
                                                <apex:repeat id="repdealAttributes" value="{!dealAttributes}"  var="iter">
                                                    <tr class="rowElemenmt{!RIGHT(TEXT(iterIndex),2)} {!IF(iterIndex = 0,'independentRow',IF(MOD(iterIndex,2)=0,'odd','even'))}" >
                                                        <td style="padding-left:  10px;">
                                                             <apex:outputPanel styleclass="actionBtnContainer rowShow{!RIGHT(TEXT(iterIndex),2)}" >
                                                                <div class="inteactionIconSprite pencilEdit" onclick="editDealAttr({!RIGHT(TEXT(iterIndex),2)});" style="cursor:pointer;"></div>
                                                             </apex:outputPanel>
                                                             <apex:outputPanel style="display:none;" styleclass="actionBtnContainer editingDeal row{!RIGHT(TEXT(iterIndex),2)}" >
                                                                 <div class="inteactionIconSprite tic" onclick="lockDealAttr({!RIGHT(TEXT(iterIndex),2)});" style="cursor:pointer;"></div>
                                                             </apex:outputPanel>
                                                             <apex:outputPanel rendered="{!IF(!OR(iter.dealA.XactlyExpress__DealColumnName__c = 'DealId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'DealDate__c', iter.dealA.XactlyExpress__DealColumnName__c = 'ProfileId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'AccountId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'ProductId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'Relationship__c'), false, true)}"  > 
                                                                &nbsp;
                                                             </apex:outputPanel>
                                                             <apex:outputpanel styleclass="actionBtnContainer editMode" rendered="{!IF((OR(iter.dealA.XactlyExpress__DealColumnName__c = 'DealId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'CurrencyIsoCode',  iter.dealA.XactlyExpress__DealColumnName__c = 'DealDate__c', iter.dealA.XactlyExpress__DealColumnName__c = 'ProfileId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'AccountId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'ProductId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'Relationship__c') && (settings.XactlyExpress__ImportSource__c == '' ||  currentImportSource.XactlyExpress__SourceLabel__c == 'CSV__File')) || (currentImportSource.XactlyExpress__SourceLabel__c != 'CSV__File' &&  currentImportSource.XactlyExpress__UsageType__c == 'Import' && !ISNULL(settings.XactlyExpress__ImportSource__c) && settings.XactlyExpress__ImportSource__c != '' && iter.dealA.XactlyExpress__IsRequired__c) || (currentImportSource.XactlyExpress__SourceLabel__c != 'CSV__File' &&  currentImportSource.XactlyExpress__UsageType__c == 'Release' && !ISNULL(settings.XactlyExpress__ImportSource__c) && settings.XactlyExpress__ImportSource__c != '' && (iter.dealA.XactlyExpress__IsKey__c || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')),  false, true)}">
                                                                 <apex:commandLink id="deleteLink"  styleclass="deleteLink{!RIGHT(TEXT(iterIndex),2)}" oncomplete="waitOff();XactlySMBSettingsDealsConf();initMethod();" action="{!deleteDealAttribute}" rerender="dealsContent, errorMsgPopUp,errorMsg" >
                                                                     <apex:param name="rowIndex" value="{!RIGHT(TEXT(iterIndex),2)}" />
                                                                 </apex:commandLink>
                                                                 <div class="inteactionIconSprite delete_small" onclick="noRefreshValues = true;waitOn();jQuery('.deleteLink{!RIGHT(TEXT(iterIndex),2)}').click()" style="cursor:pointer;"></div>
                                                            </apex:outputpanel>
                                                            <div class="myType">{!HTMLENCODE(iter.dealA.DataType__c)}</div>
                                                            <div class="bubble_html"></div>
                                                        </td>
                                                        <td class="contectTableData noTypeColum"  align="left">
                                                            <div class="viewMode " >
                                                                <apex:outputpanel styleclass="dataTypeShow" style=" float: left; ">
                                                                    <apex:outputtext value="{!iter.dataTypeDisplayed}" />
                                                                </apex:outputpanel>
                                                            </div>
                                                            <apex:outputpanel styleclass="editMode">
                                                                <apex:selectList id="dataTypeSelect" styleclass="dataTypeSelect" size="1" onchange="if(!changeDataType('{!iter.dealA.XactlyExpress__DataType__c}',this,jQuery('.reqValue', jQuery(this).parent().parent().parent())[0].checked,{!IF(ISNULL(iter.dealA.Id) || iter.onlyMapping,'true','false')}))return false;waitOn();jQuery('.constantValue', jQuery(this).parent().parent().parent()).hide();jQuery('.constantProfile.toHideOnType.toSelectInitSet').hide();changeToViewMode(this, 'select', true);if({!!ISNULL(currentImportSource)})checkNothingToShow(this,{!RIGHT(TEXT(iterIndex),2)});jQuery('.dealType{!RIGHT(TEXT(iterIndex),2)}')[0].value = this.value;waitOff();" value="{!iter.dealA.XactlyExpress__DataType__c}" rendered="{!IF((OR(iter.dealA.XactlyExpress__DealColumnName__c = 'DealId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'CurrencyIsoCode', iter.dealA.XactlyExpress__DealColumnName__c = 'DealDate__c', iter.dealA.XactlyExpress__DealColumnName__c = 'ProfileId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'AccountId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'ProductId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'Relationship__c') &&  (currentImportSource.XactlyExpress__SourceLabel__c == 'CSV__File'  || currentImportSource.XactlyExpress__SourceLabel__c == '' ||  ISNULL(settings.XactlyExpress__ImportSource__c))) || (iter.dealA.XactlyExpress__IsRequired__c == true && currentImportSource.XactlyExpress__UsageType__c  == 'Import') || ((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release'), false, true)}">
                                                                    <apex:selectOptions value="{!DatatypesOption}" />
                                                                </apex:selectList>

                                                                <apex:inputText id="dealType" style="display:none" styleclass="dealType{!RIGHT(TEXT(iterIndex),2)}" value="{!iter.dealA.XactlyExpress__DataType__c}"/>
                                                                <div class="myIndex" style="display:none;">{!RIGHT(TEXT(iterIndex),2)}</div>
                                                                <apex:outputtext value="{!iter.dataTypeDisplayed}"  rendered="{!IF((OR(iter.dealA.XactlyExpress__DealColumnName__c = 'DealId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'CurrencyIsoCode', iter.dealA.XactlyExpress__DealColumnName__c = 'DealDate__c', iter.dealA.XactlyExpress__DealColumnName__c = 'ProfileId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'AccountId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'ProductId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'Relationship__c') &&  (currentImportSource.XactlyExpress__SourceLabel__c == 'CSV__File' || currentImportSource.XactlyExpress__SourceLabel__c == '' || ISNULL(settings.XactlyExpress__ImportSource__c))) || (!(currentImportSource.XactlyExpress__SourceLabel__c == 'CSV__File' || currentImportSource.XactlyExpress__SourceLabel__c == '' || ISNULL(settings.XactlyExpress__ImportSource__c)) && iter.dealA.XactlyExpress__IsRequired__c) || ((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release'),  true, false)}" />
                                                            </apex:outputpanel>
                                                            <div class="bubble_html"></div>
                                                        </td>
                                                        <apex:outputPanel rendered="{!(settings.XactlyExpress__ImportSource__c != 'CSV__File' && settings.XactlyExpress__ImportSource__c != '')}" layout="none">
                                                            <td class="contectTableData noTypeColum"  align="left">
                                                                  <div class="editMode"><!-- *ALWAYS SHOW SELECT* -->
                                                                      <apex:outputpanel layout="none" rendered="{!IF(iter.dealA.XactlyExpress__IsRequired__c && (iter.dealA.XactlyExpress__DealColumnName__c == 'AccountId__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'ProductId__c'), false , true)}">
                                                                          <select onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;ifConstant(this,{!RIGHT(TEXT(iterIndex),2)});checkChangeAcoountProduct(this);" id="stringSelect{!RIGHT(TEXT(iterIndex),2)}" class="stringSelect toSelectInitSet toHideOnType" style="{!IF(AND(iter.dealA.DataType__c == 'String',iter.dealA.isConstant__c == false),'', 'display:none;')}"  size="1"  >
                                                                              <apex:outputpanel layout="none"  rendered="{!IF(contains(iter.dealA.XactlyExpress__OpportunityMapField__c, '.') && iter.dealA.XactlyExpress__DataType__c == 'String', true, false )}">
                                                                                   <option value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" selected="selected">{!iter.dealA.XactlyExpress__OpportunityMapField__c}</option>
                                                                              </apex:outputpanel>
                                                                              <apex:outputpanel layout="none"  rendered="{!IF((ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="" selected="selected">**{!$Label.WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                            <apex:outputpanel layout="none"  rendered="{!IF(!(ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="">**{!$Label.xactlyexpress__WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                              <apex:repeat id="repopportunityFieldsString" value="{!opportunityFieldsString}"  var="op">
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c == op.value  && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}" selected="selected" >{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c != op.value  && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}" >{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                              </apex:repeat>
                                                                          </select>
                                                                          <select onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;ifConstant(this,{!RIGHT(TEXT(iterIndex),2)});" id="dateSelect{!RIGHT(TEXT(iterIndex),2)}" class="dateSelect toSelectInitSet toHideOnType" style="{!IF(AND(iter.dealA.DataType__c == 'Date',iter.dealA.isConstant__c == false),'', 'display:none;')}"  size="1"  >
                                                                              <apex:outputpanel layout="none"  rendered="{!IF(contains(iter.dealA.XactlyExpress__OpportunityMapField__c, '.')  && iter.dealA.XactlyExpress__DataType__c == 'Date', true, false )}">
                                                                                   <option value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" selected="selected">{!iter.dealA.XactlyExpress__OpportunityMapField__c}</option>
                                                                              </apex:outputpanel>
                                                                              <apex:outputpanel layout="none"  rendered="{!IF((ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="" selected="selected">**{!$Label.WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                            <apex:outputpanel layout="none"  rendered="{!IF(!(ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="">**{!$Label.xactlyexpress__WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                              <apex:repeat id="repopportunityFieldsDate" value="{!opportunityFieldsDate}"  var="op">
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c == op.value  && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}" selected="selected">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c != op.value  && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                              </apex:repeat>
                                                                          </select>
                                                                          <select onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;ifConstant(this,{!RIGHT(TEXT(iterIndex),2)});" id="numberSelect{!RIGHT(TEXT(iterIndex),2)}" class="numberSelect toSelectInitSet toHideOnType" style="{!IF(AND(iter.dealA.DataType__c == 'Decimal',iter.dealA.isConstant__c == false),'', 'display:none;')}"  size="1"  >
                                                                              <apex:outputpanel layout="none"  rendered="{!IF(contains(iter.dealA.XactlyExpress__OpportunityMapField__c, '.')  && iter.dealA.XactlyExpress__DataType__c == 'Decimal', true, false )}">
                                                                                   <option value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" selected="selected">{!iter.dealA.XactlyExpress__OpportunityMapField__c}</option>
                                                                              </apex:outputpanel>
                                                                              <apex:outputpanel layout="none"  rendered="{!IF((ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="" selected="selected">**{!$Label.WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                            <apex:outputpanel layout="none"  rendered="{!IF(!(ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true)&& currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="">**{!$Label.xactlyexpress__WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                              <apex:repeat id="repopportunityFieldsNumber" value="{!opportunityFieldsNumber}"  var="op">
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c == op.value, true, false )}">
                                                                                      <option value="{!op.value}" selected="selected">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c != op.value, true, false )}">
                                                                                      <option value="{!op.value}">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                              </apex:repeat>
                                                                          </select>
                                                                          <select onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;ifConstant(this,{!RIGHT(TEXT(iterIndex),2)});" id="currencySelect{!RIGHT(TEXT(iterIndex),2)}" class="currencySelect toSelectInitSet toHideOnType" style="{!IF(AND(iter.dealA.DataType__c == 'Currency',iter.dealA.isConstant__c == false),'', 'display:none;')}"   size="1" >
                                                                              <apex:outputpanel layout="none"  rendered="{!IF(contains(iter.dealA.XactlyExpress__OpportunityMapField__c, '.')  && iter.dealA.XactlyExpress__DataType__c == 'Currency', true, false )}">
                                                                                   <option value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" selected="selected">{!iter.dealA.XactlyExpress__OpportunityMapField__c}</option>
                                                                              </apex:outputpanel>
                                                                              <apex:outputpanel layout="none"  rendered="{!IF((ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="" selected="selected">**{!$Label.WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                            <apex:outputpanel layout="none"  rendered="{!IF(!(ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="">**{!$Label.xactlyexpress__WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                              <apex:repeat id="repopportunityFieldsCurrency" value="{!opportunityFieldsCurrency}"  var="op">
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c == op.value, true, false )}">
                                                                                      <option value="{!op.value}" selected="selected">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c != op.value, true, false )}">
                                                                                      <option value="{!op.value}">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                              </apex:repeat>
                                                                          </select>
                                                                          <select onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;ifConstant(this,{!RIGHT(TEXT(iterIndex),2)});" id="booleanSelect{!RIGHT(TEXT(iterIndex),2)}" class="booleanSelect toSelectInitSet toHideOnType" style="{!IF(AND(iter.dealA.DataType__c == 'Boolean',iter.dealA.isConstant__c == false),'', 'display:none;')}" size="1" >
                                                                              <apex:outputpanel layout="none"  rendered="{!IF(contains(iter.dealA.XactlyExpress__OpportunityMapField__c, '.')  && iter.dealA.XactlyExpress__DataType__c == 'Boolean', true, false )}">
                                                                                   <option value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" selected="selected">{!iter.dealA.XactlyExpress__OpportunityMapField__c}</option>
                                                                              </apex:outputpanel>
                                                                              <apex:outputpanel layout="none"  rendered="{!IF((ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="" selected="selected">**{!$Label.WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                            <apex:outputpanel layout="none"  rendered="{!IF(!(ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="">**{!$Label.xactlyexpress__WildCard}**</option>
                                                                              </apex:outputpanel>>
                                                                              <apex:repeat id="repopportunityFieldsBoolean" value="{!opportunityFieldsBoolean}"  var="op">
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c == op.value  && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}" selected="selected">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c != op.value  && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}" >{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                              </apex:repeat>
                                                                          </select>
                                                                          <select onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;ifConstant(this,{!RIGHT(TEXT(iterIndex),2)});" id="userSelect{!RIGHT(TEXT(iterIndex),2)}" class="userSelect toSelectInitSet toHideOnType" style="{!IF(AND(iter.dealA.DataType__c == 'Usertype',iter.dealA.isConstant__c == false),'', 'display:none;')}"  size="1">
                                                                              <apex:outputpanel layout="none"  rendered="{!IF(contains(iter.dealA.XactlyExpress__OpportunityMapField__c, '.'), true, false )}">
                                                                                   <option value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" selected="selected">{!iter.dealA.XactlyExpress__OpportunityMapField__c}</option>
                                                                              </apex:outputpanel>
                                                                              <apex:outputpanel layout="none"  rendered="{!IF((ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="" selected="selected">**{!$Label.WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                            <apex:outputpanel layout="none"  rendered="{!IF(!(ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="">**{!$Label.xactlyexpress__WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                              <apex:repeat id="repopportunityFieldsUsers" value="{!opportunityFieldsUsers}"  var="op">
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c == op.value && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}" selected="selected" >{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c != op.value && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                              </apex:repeat>
                                                                          </select>
                                                                          <select onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;ifConstant(this,{!RIGHT(TEXT(iterIndex),2)});" id="allSelect{!RIGHT(TEXT(iterIndex),2)}" class="allSelect toSelectInitSet toHideOnType" style="{!IF(AND(iter.dealA.DataType__c == null,iter.dealA.isConstant__c == false),'', 'display:none;')}" size="1" >
                                                                              <apex:outputpanel layout="none"  rendered="{!IF(contains(iter.dealA.XactlyExpress__OpportunityMapField__c, '.'), true, false )}">
                                                                                   <option value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" selected="selected" >{!iter.dealA.XactlyExpress__OpportunityMapField__c}</option>
                                                                              </apex:outputpanel>
                                                                              <apex:outputpanel layout="none"  rendered="{!IF((ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="" selected="selected">**{!$Label.WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                            <apex:outputpanel layout="none"  rendered="{!IF(!(ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="">**{!$Label.xactlyexpress__WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                              <apex:repeat id="repopportunityFieldsAll" value="{!opportunityFieldsAll}"  var="op">
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c == op.value, true, false )}">
                                                                                      <option value="{!op.value}" selected="selected">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c != op.value, true, false )}">
                                                                                      <option value="{!op.value}">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                              </apex:repeat>
                                                                          </select>

                                                                      </apex:outputpanel>

                                                                      <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__IsRequired__c && (iter.dealA.XactlyExpress__DealColumnName__c == 'ProductId__c') , true , false)}">
                                                                           <select onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;ifConstant(this,{!RIGHT(TEXT(iterIndex),2)});" id="stringSelect2{!RIGHT(TEXT(iterIndex),2)}" class="stringSelect toSelectInitSet toHideOnType" style="{!IF(AND(iter.dealA.DataType__c == 'String', iter.dealA.DealColumnName__c = 'ProductId__c',iter.dealA.isConstant__c == false, iter.dealA.IsRequired__c),'', 'display:none;')}"   size="1"  >
                                                                              <apex:outputpanel layout="none"  rendered="{!IF(contains(iter.dealA.XactlyExpress__OpportunityMapField__c, '.'), true, false )}">
                                                                                   <option value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" selected="selected">{!iter.dealA.XactlyExpress__OpportunityMapField__c}</option>
                                                                              </apex:outputpanel>
                                                                              <apex:outputpanel layout="none"  rendered="{!IF((ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="" selected="selected">**{!$Label.WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                            <apex:outputpanel layout="none"  rendered="{!IF(!(ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="">**{!$Label.xactlyexpress__WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                              <apex:repeat id="repopportunityFieldsProducts" value="{!opportunityFieldsProducts}"  var="op">
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c == op.value  && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}" selected="selected" >{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c != op.value  && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}" >{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                              </apex:repeat>
                                                                          </select>
                                                                      </apex:outputpanel>
                                                                      <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__IsRequired__c && (iter.dealA.XactlyExpress__DealColumnName__c == 'AccountId__c'), true, false )}">
                                                                          <select onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;ifConstant(this,{!RIGHT(TEXT(iterIndex),2)});" id="stringSelect4{!RIGHT(TEXT(iterIndex),2)}" class="stringSelect toSelectInitSet toHideOnType" style="{!IF(AND(iter.dealA.DataType__c == 'String', iter.dealA.DealColumnName__c = 'AccountId__c',iter.dealA.isConstant__c == false,iter.dealA.IsRequired__c),'', 'display:none;')}"  size="1"  >
                                                                              <apex:outputpanel layout="none"  rendered="{!IF(contains(iter.dealA.XactlyExpress__OpportunityMapField__c, '.'), true, false )}">
                                                                                   <option value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" selected="selected">{!iter.dealA.XactlyExpress__OpportunityMapField__c}</option>
                                                                              </apex:outputpanel>
                                                                              <apex:outputpanel layout="none"  rendered="{!IF((ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="" selected="selected">**{!$Label.WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                            <apex:outputpanel layout="none"  rendered="{!IF(!(ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && (iter.dealA.XactlyExpress__IsKey__c == true) && currentImportSource.XactlyExpress__UsageType__c != 'Import' && currentImportSource.XactlyExpress__SourceType__c  == 'Salesforce', true, false )}">
                                                                                   <option value="">**{!$Label.xactlyexpress__WildCard}**</option>
                                                                              </apex:outputpanel>
                                                                              <apex:repeat id="repopportunityFieldsAccounts" value="{!opportunityFieldsAccounts}"  var="op">
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c == op.value  && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}" selected="selected">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                                   <apex:outputpanel layout="none"  rendered="{!IF(iter.dealA.XactlyExpress__OpportunityMapField__c != op.value  && op.value != FORMULA_FIELD_VALUE, true, false )}">
                                                                                      <option value="{!op.value}">{!op.label}</option>
                                                                                   </apex:outputpanel>
                                                                              </apex:repeat>
                                                                          </select>
                                                                      </apex:outputpanel>
                                                                      <apex:outputpanel rendered="{!IF(iter.dealA.XactlyExpress__DealColumnName__c == 'AccountId__c','true','false')}" layout="none">
                                                                           <div id="{!RIGHT(TEXT(iterIndex),2) & '-account'}" style="float:left;width:142px;margin-top:-3px;margin-top /*\**/:-5px\9;margin-top:expression('10px');margin-right:20px;{!IF(iter.dealA.isConstant__c == true && iter.dealA.DealColumnName__c == 'AccountId__c','','display: none;')}" class="constantAccount toHideOnType">
                                                                              <apex:inputText id="inpAcco" styleClass="{!ROUND(iterIndex ,0)}-accountName accountName" onfocus="this.blur();jQuery(this).prop('readonly', true);" value="{!iter.accountName}" style="width:100px !important;width:100px;color:#000000;cursor:default;background-color:#EFEFEF;"/>
                                                                              <apex:image styleClass="img-magnifier" url="{!URLFOR($Resource.XactlyExpress__XactlySMBResources, 'img/icons/magnifier.png')}" onclick="javascript: accountsWindow = window.open('/apex/XactlySMBAccountPopup?index={!ROUND(iterIndex ,0)}', 'Accounts','location=0,status=0,scrollbars=1,width=700px,height=500px'); accountsWindow.moveTo(100,100);"/>
                                                                           </div>
                                                                      </apex:outputpanel>
                                                                      <apex:outputpanel rendered="{!IF(iter.dealA.XactlyExpress__DealColumnName__c == 'ProductId__c','true','false')}" layout="none">
                                                                           <div id="{!RIGHT(TEXT(iterIndex),2) & '-product'}" style="float:left;width:142px;margin-top:-3px;margin-top /*\**/:-5px\9;margin-top:expression('10px');margin-right:20px;{!IF(iter.dealA.isConstant__c == true && iter.dealA.DealColumnName__c == 'ProductId__c','','display: none;')}" class="constantProduct toHideOnType">
                                                                              <apex:inputText id="inpProd"  styleClass="{!ROUND(iterIndex ,0)}-productName productName" onfocus="this.blur();jQuery(this).prop('readonly', true);" value="{!iter.productName}" style="width:100px !important;width:100px;color:#000000;cursor:default;background-color:#EFEFEF;"/>
                                                                              <apex:image styleClass="img-magnifier" url="{!URLFOR($Resource.XactlyExpress__XactlySMBResources, 'img/icons/magnifier.png')}" onclick="javascript: productsWindow = window.open('/apex/XactlySMBProductPopup?index={!ROUND(iterIndex ,0)}', 'Products','location=0,status=0,scrollbars=1,width=700px,height=500px'); productsWindow.moveTo(100,100);"/>
                                                                           </div>
                                                                      </apex:outputpanel>
                                                                      <apex:selectList styleClass="constantProfile toHideOnType toSelectInitSet" multiselect="false" size="1" value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;" onclick="jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;"  style="margin-right:20px;{!IF(iter.dealA.XactlyExpress__isConstant__c == true && iter.dealA.XactlyExpress__DataType__c == 'Usertype','','display: none;')}">
                                                                          <apex:selectOptions value="{!Salespersons}" />
                                                                      </apex:selectList>

                                                                      <div class="formulaContainer" style="{!IF(iter.isFormula == true && (iter.dealA.DataType__c == 'Currency' || iter.dealA.DataType__c == 'Decimal'),'','display: none;')}">
                                                                        {!HTMLENCODE(iter.formulaToDisplay)}
                                                                      </div>
                                                                      <div class="editFormulaContainer" style="float:right;{!IF(iter.isFormula == true && (iter.dealA.DataType__c == 'Currency' || iter.dealA.DataType__c == 'Decimal'),'','display: none;')}" >
                                                                           <div class="inteactionIconSprite pencilEdit" onclick="var objToForm = this;waitOn();completeLoadDAFormulaCallback = function() {showDAFormula(jQuery('.constantValue', jQuery(objToForm).parent().parent())[0],jQuery('.formulaContainer', jQuery(objToForm).parent().parent())[0], jQuery('.isAdvFormula', jQuery(objToForm).parent().parent())[0]);}; if (!loadOnDemand('DAFormula')) {completeLoadDAFormulaCallback();}" style="cursor:pointer;"></div>
                                                                      </div>
                                                                      <apex:inputCheckbox id="isAdvFormula" value="{!iter.isAdvFormula}" styleClass="isAdvFormula" style="display:none;"  />
                                                                      <apex:inputCheckbox id="isFormula" value="{!iter.isFormula}"  styleClass="isFormula" style="display:none;"  />
                                                                      <apex:inputText id="constantDate" onchange="if(checkDate(this))jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;" onfocus="showCalendar(this.id);" value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" style="{!IF(iter.dealA.XactlyExpress__isConstant__c == true && iter.dealA.XactlyExpress__DataType__c == 'Date','','display: none;')}float:left;width:80%" styleClass="constantDate toHideOnType"/>
                                                                      <apex:inputText id="inpCurr" onchange="if(checkCurr(this))jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;" value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" style="{!IF(iter.dealA.XactlyExpress__isConstant__c == true && iter.dealA.XactlyExpress__DataType__c == 'Currency' && !(iter.isFormula),'','display: none;')}float:left;width:80%" styleClass="constantCurrency toHideOnType"/>
                                                                      <apex:inputText id="inpNum" onchange="if(checkNum(this))jQuery('.constantValue',jQuery(this).parent())[0].value = this.value;" value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" style="{!IF(iter.dealA.XactlyExpress__isConstant__c == true && iter.dealA.XactlyExpress__DataType__c == 'Decimal' && !(iter.isFormula),'','display: none;')}float:left;width:80%" styleClass="constantNumber toHideOnType"/>

                                                                      <apex:inputCheckbox id="inpConst" onchange="jQuery('.constantValue',jQuery(this).parent())[0].value = this.checked;"  value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}"  styleClass="constantBoolean toHideOnType" style="{!IF(iter.dealA.XactlyExpress__DataType__c == 'Boolean' && iter.dealA.XactlyExpress__isConstant__c == true,'', 'display:none;')}"  />
                                                                      <apex:inputText id="inpOpp" value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" style="{!IF(iter.dealA.XactlyExpress__isConstant__c == true && iter.dealA.XactlyExpress__DataType__c == 'String' && iter.dealA.XactlyExpress__DealColumnName__c != 'ProductId__c' && iter.dealA.XactlyExpress__DealColumnName__c != 'AccountId__c' && iter.dealA.XactlyExpress__DealColumnName__c != 'ProfileId__c'  ,'','display: none;')}float:left;width:80%" styleClass="constantValue toHideOnType {!RIGHT(TEXT(iterIndex),2)}-productId {!RIGHT(TEXT(iterIndex),2)}-accountId " />

                                                                      <apex:inputText id="OpportunityMapFieldType" value="{!iter.OpportunityMapFieldType}" style="display:none;" styleClass="OpportunityMapFieldType" />
                                                                      <apex:inputText id="isConstant" value="{!iter.dealA.XactlyExpress__isConstant__c}" style="display:none;" styleClass="isConstant" />
                                                                      <input type="hidden" class="firstType" value="{!JSENCODE(iter.dealA.DataType__c)}"/>
                                                                      <span class="arrowCont" style="{!IF(iter.dealA.isConstant__c == true,'','display: none;')}float:right;cursor:pointer;" onclick="returnConstant(this,{!RIGHT(TEXT(iterIndex),2)});"><img src="{!URLFOR($Resource.XactlySMBResources ,'img/buttons/orangeArrow.png')}" width="30"/></span>
                                                                  </div>
                                                                  <div class="viewMode {!IF(LEN(iter.dealA.OpportunityMapField__c) > 30,'toEllipsis trigger','')}">
                                                                      <apex:outputpanel styleclass="dataTypeShow" style=" float: left; " rendered="{!iter.dealA.XactlyExpress__isConstant__c}">
                                                                            <apex:outputPanel layout="none" rendered="{!iter.dealA.XactlyExpress__DataType__c != 'Boolean'}" >
                                                                                <apex:outputPanel layout="none" rendered="{!iter.dealA.XactlyExpress__DataType__c == 'Usertype'}" >
                                                                                    "<apex:outputtext value="{!iter.UserName}" />"
                                                                                </apex:outputPanel>
                                                                                <apex:outputPanel layout="none" rendered="{!iter.dealA.XactlyExpress__DataType__c != 'Usertype'}" >
                                                                                    <apex:outputPanel layout="none" rendered="{!iter.isFormula}" >
                                                                                        "<apex:outputtext value="{!iter.formulaToDisplay}" />"
                                                                                    </apex:outputPanel>
                                                                                    <apex:outputPanel layout="none" rendered="{!!iter.isFormula}" >
                                                                                        "<apex:outputtext value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" />"
                                                                                    </apex:outputPanel>
                                                                                </apex:outputPanel>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel layout="none" rendered="{!iter.dealA.XactlyExpress__DataType__c == 'Boolean'}" >
                                                                                 <apex:outputPanel layout="none" rendered="{!iter.dealA.XactlyExpress__OpportunityMapField__c = 'true'}">
                                                                                     <input type="checkbox" value="1"  checked="checked" disabled="disabled"/>
                                                                                 </apex:outputPanel>
                                                                                 <apex:outputPanel layout="none" rendered="{!iter.dealA.XactlyExpress__OpportunityMapField__c != 'true'}">
                                                                                     <input type="checkbox" value="1"  disabled="disabled"/>
                                                                                 </apex:outputPanel>
                                                                             </apex:outputPanel>
                                                                      </apex:outputpanel>
                                                                      <apex:outputpanel styleclass="dataTypeShow" style=" float: left; " rendered="{!!iter.dealA.XactlyExpress__isConstant__c}">
                                                                            <apex:outputtext value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" />
                                                                      </apex:outputpanel>
                                                                      <apex:outputpanel styleclass="dataTypeShow" style=" float: left; " rendered="{!(ISNULL(iter.dealA.XactlyExpress__OpportunityMapField__c) || iter.dealA.XactlyExpress__OpportunityMapField__c == '') && currentImportSource.XactlyExpress__UsageType__c != 'Import'}">
																			**{!$Label.xactlyexpress__WildCard}**	
                                                                      </apex:outputpanel>
                                                                  </div>
                                                                 <div class="bubble_html"><apex:outputtext value="{!iter.dealA.XactlyExpress__OpportunityMapField__c}" /></div>
                                                            </td>
                                                        </apex:outputPanel>
                                                        <td class="contectTableData dealAttributeName noTypeColum"  align="left">
                                                              <div class="viewMode dealName {!IF(LEN(iter.dealA.name) > 20,'toEllipsis trigger','')}" style="width: 160px;">
                                                                  <apex:outputpanel rendered="{!IF(AND(iter.dealA.XactlyExpress__DealColumnName__c != 'AccountId__c', iter.dealA.XactlyExpress__DealColumnName__c != 'ProductId__c', iter.dealA.XactlyExpress__DealColumnName__c != 'Relationship__c'), true, false)}">
                                                                      <apex:outputtext value="{!iter.dealA.name}"/>
                                                                  </apex:outputpanel>
                                                                  <apex:outputpanel style="display: block; float: left; width: 130px;" rendered="{!IF(OR(iter.dealA.XactlyExpress__DealColumnName__c = 'AccountId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'ProductId__c', iter.dealA.XactlyExpress__DealColumnName__c = 'Relationship__c'), true, false)}">
                                                                      <apex:outputtext value="{!IF(iter.dealA.name == 'Product Id',$Label.xactlyexpress__Product,IF(iter.dealA.name == 'Account Id',$Label.xactlyexpress__Account,iter.dealA.name))}"/>
                                                                  </apex:outputpanel>
                                                              </div>
                                                              <apex:outputpanel styleClass="editMode">


                                                                <apex:outputPanel style="float:right;" rendered="{!!iter.dealA.XactlyExpress__IsRequired__c && !iter.dealA.XactlyExpress__IsKey__c && settings.XactlyExpress__ImportSource__c != ''}" styleclass="actionBtnContainer editDeal{!RIGHT(TEXT(iterIndex),2)}" >
                                                                    <div class="inteactionIconSprite pencilEdit" onclick="editDealAttReal('{!RIGHT(TEXT(iterIndex),2)}')" style="cursor:pointer;"></div>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel style="display:none; float:right;" rendered="{!!iter.dealA.XactlyExpress__IsRequired__c && settings.XactlyExpress__ImportSource__c != ''}" styleclass="actionBtnContainer editingDeal deal{!RIGHT(TEXT(iterIndex),2)}" >
                                                                     <div class="inteactionIconSprite tic" onclick="jQuery('.dealName{!RIGHT(TEXT(iterIndex),2)}').focus().blur();lockDealAttReal('{!RIGHT(TEXT(iterIndex),2)}')"   style="cursor:pointer;"></div>                                                                
                                                                  </apex:outputPanel>
                                                                  <apex:selectList id="daStringsProductsAccounts" onchange="jQuery('.dealAttrNameInput',jQuery(this).parent())[0].value = this.value;jQuery('.allSelect',jQuery(this).parent())[0].value = this.value;changeReqAndKey(this);if(this.selectedIndex == 0){ editDealAttReal('{!RIGHT(TEXT(iterIndex),2)}');  }" styleclass="{!IF(!ISNULL(currentImportSource) && currentImportSource.XactlyExpress__SourceType__c == 'Quickbook', 'stringSelect' ,'')}" multiselect="false" size="1" value="{!iter.dealA.name}" style="{!IF(AND(iter.dealA.XactlyExpress__DataType__c == 'String' && (!ISNULL(currentImportSource)  && currentImportSource.XactlyExpress__SourceType__c == 'Quickbook') && iter.onlyMapping ),'', 'display:none;')}"  rendered="{!!iter.dealA.XactlyExpress__IsRequired__c && !(iter.dealA.XactlyExpress__IsKey__c) && (currentImportSource.XactlyExpress__SourceLabel__c != 'CSV__File' && !ISNULL(settings.XactlyExpress__ImportSource__c) && settings.XactlyExpress__ImportSource__c != '')}">
                                                                      <apex:selectOptions value="{!currentMappingAttributes.dealAttributeStringAP}" />
                                                                  </apex:selectList>
                                                                  <apex:selectList id="daProducts" onchange="jQuery('.dealAttrNameInput',jQuery(this).parent())[0].value = this.value;jQuery('.allSelect',jQuery(this).parent())[0].value = this.value;changeReqAndKey(this);if(this.selectedIndex == 0){ editDealAttReal('{!RIGHT(TEXT(iterIndex),2)}');  }" styleclass="productsSelect" multiselect="false" size="1" value="{!iter.dealA.name}"  style="{!IF(AND(iter.dealA.XactlyExpress__DataType__c == 'String', iter.dealA.XactlyExpress__DealColumnName__c = 'ProductId__c',iter.onlyMapping, currentImportSource.XactlyExpress__SourceType__c != 'Quickbook'),'', 'display:none;')}" rendered="{!!(iter.dealA.XactlyExpress__IsRequired__c && currentImportSource.XactlyExpress__UsageType__c = 'Import')  && !((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release')}">
                                                                      <apex:selectOptions value="{!currentMappingAttributes.dealAttributeProducts}" />
                                                                  </apex:selectList>
                                                                  <apex:selectList id="daAccounts" onchange="jQuery('.dealAttrNameInput',jQuery(this).parent())[0].value = this.value;jQuery('.allSelect',jQuery(this).parent())[0].value = this.value;changeReqAndKey(this);if(this.selectedIndex == 0){ editDealAttReal('{!RIGHT(TEXT(iterIndex),2)}');  }" styleclass="accountsSelect" multiselect="false" size="1" value="{!iter.dealA.name}" style="{!IF(AND(iter.dealA.XactlyExpress__DataType__c == 'String', iter.dealA.XactlyExpress__DealColumnName__c = 'AccountId__c',iter.onlyMapping,currentImportSource.XactlyExpress__SourceType__c != 'Quickbook'),'', 'display:none;')}" rendered="{!!(iter.dealA.XactlyExpress__IsRequired__c && currentImportSource.XactlyExpress__UsageType__c = 'Import')  && !((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release')}">
                                                                      <apex:selectOptions value="{!currentMappingAttributes.dealAttributeAccounts}" />
                                                                  </apex:selectList>
                                                                  <apex:selectList id="daStrings" onchange="jQuery('.dealAttrNameInput',jQuery(this).parent())[0].value = this.value;jQuery('.allSelect',jQuery(this).parent())[0].value = this.value;changeReqAndKey(this);if(this.selectedIndex == 0){ editDealAttReal('{!RIGHT(TEXT(iterIndex),2)}');  }" styleclass="{!IF(!ISNULL(currentImportSource) && currentImportSource.XactlyExpress__SourceType__c == 'Quickbook', '' ,'stringSelect')}" multiselect="false" size="1" value="{!iter.dealA.name}" style="{!IF(AND(iter.dealA.XactlyExpress__DataType__c == 'String' && currentImportSource.XactlyExpress__SourceType__c != 'Quickbook' && iter.dealA.XactlyExpress__DealColumnName__c != 'AccountId__c' && iter.dealA.XactlyExpress__DealColumnName__c != 'ProductId__c' && iter.onlyMapping ),'', 'display:none;')}"  rendered="{!!(iter.dealA.XactlyExpress__IsRequired__c && currentImportSource.XactlyExpress__UsageType__c = 'Import')  && !((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release')}">
                                                                      <apex:selectOptions value="{!currentMappingAttributes.dealAttributeString}" />
                                                                  </apex:selectList>
                                                                  <apex:selectList id="daNumbers" onchange="jQuery('.dealAttrNameInput',jQuery(this).parent())[0].value = this.value;jQuery('.allSelect',jQuery(this).parent())[0].value = this.value;changeReqAndKey(this);if(this.selectedIndex == 0){ editDealAttReal('{!RIGHT(TEXT(iterIndex),2)}');  }" styleclass="numberSelect" multiselect="false" size="1" value="{!iter.dealA.name}" style="{!IF(AND(iter.dealA.XactlyExpress__DataType__c == 'Decimal',iter.onlyMapping),'', 'display:none;')}"  rendered="{!!(iter.dealA.XactlyExpress__IsRequired__c && currentImportSource.XactlyExpress__UsageType__c = 'Import')  && !((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release')}">
                                                                      <apex:selectOptions value="{!currentMappingAttributes.dealAttributeNumber}" />
                                                                  </apex:selectList>
                                                                  <apex:selectList id="daDates" onchange="jQuery('.dealAttrNameInput',jQuery(this).parent())[0].value = this.value;jQuery('.allSelect',jQuery(this).parent())[0].value = this.value;changeReqAndKey(this);if(this.selectedIndex == 0){ editDealAttReal('{!RIGHT(TEXT(iterIndex),2)}');  }" styleclass="dateSelect" multiselect="false" size="1" value="{!iter.dealA.name}" style="{!IF(AND(iter.dealA.XactlyExpress__DataType__c == 'Date',iter.onlyMapping),'', 'display:none;')}"  rendered="{!!(iter.dealA.XactlyExpress__IsRequired__c && currentImportSource.XactlyExpress__UsageType__c = 'Import')  && !((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release')}">
                                                                      <apex:selectOptions value="{!currentMappingAttributes.dealAttributeDate}" />
                                                                  </apex:selectList>
                                                                  <apex:selectList id="daCurrencys" onchange="jQuery('.dealAttrNameInput',jQuery(this).parent())[0].value = this.value;jQuery('.allSelect',jQuery(this).parent())[0].value = this.value;changeReqAndKey(this);if(this.selectedIndex == 0){ editDealAttReal('{!RIGHT(TEXT(iterIndex),2)}');  }" styleclass="currencySelect" multiselect="false" size="1" value="{!iter.dealA.name}" style="{!IF(AND(iter.dealA.XactlyExpress__DataType__c == 'Currency',iter.onlyMapping),'', 'display:none;')}"   rendered="{!!(iter.dealA.XactlyExpress__IsRequired__c && currentImportSource.XactlyExpress__UsageType__c = 'Import')  && !((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release')}">
                                                                      <apex:selectOptions value="{!currentMappingAttributes.dealAttributeCurrency}" />
                                                                  </apex:selectList>
                                                                  <apex:selectList id="daBooleans" onchange="jQuery('.dealAttrNameInput',jQuery(this).parent())[0].value = this.value;jQuery('.allSelect',jQuery(this).parent())[0].value = this.value;changeReqAndKey(this);if(this.selectedIndex == 0){ editDealAttReal('{!RIGHT(TEXT(iterIndex),2)}');  }" styleclass="booleanSelect" multiselect="false" size="1" value="{!iter.dealA.name}" style="{!IF(AND(iter.dealA.XactlyExpress__DataType__c == 'Boolean',iter.onlyMapping),'', 'display:none;')}" rendered="{!!(iter.dealA.XactlyExpress__IsRequired__c && currentImportSource.XactlyExpress__UsageType__c = 'Import')  && !((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release')}">
                                                                      <apex:selectOptions value="{!currentMappingAttributes.dealAttributeBoolean}" />
                                                                  </apex:selectList>
                                                                  <apex:selectList id="daUsers" onchange="jQuery('.dealAttrNameInput',jQuery(this).parent())[0].value = this.value;jQuery('.allSelect',jQuery(this).parent())[0].value = this.value;changeReqAndKey(this);if(this.selectedIndex == 0){ editDealAttReal('{!RIGHT(TEXT(iterIndex),2)}');  }" styleclass="userSelect" multiselect="false" size="1" value="{!iter.dealA.name}" style="{!IF(AND(iter.dealA.XactlyExpress__DataType__c == 'Usertype',iter.onlyMapping),'', 'display:none;')}" rendered="{!!(iter.dealA.XactlyExpress__IsRequired__c && currentImportSource.XactlyExpress__UsageType__c = 'Import')  && !((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release')}">
                                                                      <apex:selectOptions value="{!currentMappingAttributes.dealAttributeUser}" />
                                                                  </apex:selectList>
                                                                  <apex:selectList id="daAll" styleclass="allSelect" onchange="jQuery('.dealAttrNameInput',jQuery(this).parent())[0].value = this.value;changeReqAndKey(this);" multiselect="false" size="1" value="{!iter.dealA.name}" style="{!IF(AND(iter.dealA.XactlyExpress__DataType__c == null,iter.onlyMapping),'', 'display:none;')}"  rendered="{!!(iter.dealA.XactlyExpress__IsRequired__c && currentImportSource.XactlyExpress__UsageType__c = 'Import')  && !((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField')  && currentImportSource.XactlyExpress__UsageType__c  == 'Release')}">
                                                                      <apex:selectOptions value="{!currentMappingAttributes.allDealAttributes}" />
                                                                  </apex:selectList>
                                                                  <apex:inputText id="oldName" styleclass="oldName{!RIGHT(TEXT(iterIndex),2)}"  style="display:none;" value="{!iter.oldName}" />
                                                                  <apex:outputpanel layout="none" rendered="{!!((iter.dealA.XactlyExpress__DealColumnName__c == 'AccountId__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'ProductId__c'  || iter.dealA.XactlyExpress__DealColumnName__c == 'CurrencyIsoCode'   ||  iter.dealA.XactlyExpress__DealColumnName__c == 'DealId__c'  || iter.dealA.XactlyExpress__DealColumnName__c == 'DealDate__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'ProfileId__c')  && (currentImportSource.XactlyExpress__SourceLabel__c = 'CSV__File' || ISNULL(settings.XactlyExpress__ImportSource__c) || settings.XactlyExpress__ImportSource__c = '')) || !(iter.dealA.XactlyExpress__IsRequired__c && currentImportSource.XactlyExpress__UsageType__c = 'Import')}">
                                                                      <apex:inputField id="inputNames" style="{!IF(iter.onlyMapping || ((iter.dealA.XactlyExpress__DealColumnName__c == 'AccountId__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'ProductId__c'  || iter.dealA.XactlyExpress__DealColumnName__c == 'CurrencyIsoCode'   ||  iter.dealA.XactlyExpress__DealColumnName__c == 'DealId__c'  || iter.dealA.XactlyExpress__DealColumnName__c == 'DealDate__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'ProfileId__c') && ISNULL(currentImportSource) ),'display:none;','')}width:130px;" styleclass="dealAttrNameInput dealNameInp dealName{!RIGHT(TEXT(iterIndex),2)}" onblur="fixSpaces(this);changeToViewMode(jQuery('.dataTypeSelect',jQuery(this).parent().parent().parent())[0], 'String', true);" value="{!iter.dealA.name}" />                                                                  
                                                                  </apex:outputpanel>
                                                                  <apex:outputpanel style="display: block; float: left; width: 130px;" rendered="{!((iter.dealA.XactlyExpress__DealColumnName__c == 'AccountId__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'ProductId__c'   || iter.dealA.XactlyExpress__DealColumnName__c == 'CurrencyIsoCode' || iter.dealA.XactlyExpress__DealColumnName__c == 'DealId__c'  || iter.dealA.XactlyExpress__DealColumnName__c == 'DealDate__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'ProfileId__c')  && (currentImportSource.XactlyExpress__SourceLabel__c = 'CSV__File' || ISNULL(settings.XactlyExpress__ImportSource__c) || settings.XactlyExpress__ImportSource__c = '')) || (iter.dealA.XactlyExpress__IsRequired__c && (currentImportSource.XactlyExpress__UsageType__c = 'Import')) || ((iter.dealA.XactlyExpress__IsKey__c == true || iter.dealA.XactlyExpress__DealColumnName__c = '_____EventNameField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ReleaseDateField' || iter.dealA.XactlyExpress__DealColumnName__c = '_____ToProrateCreditField') && currentImportSource.XactlyExpress__UsageType__c = 'Release')}">
                                                                      <apex:outputtext value="{!IF(iter.dealA.name == 'Product Id',$Label.xactlyexpress__Product,IF(iter.dealA.name == 'Account Id',$Label.xactlyexpress__Account,iter.dealA.name))}"/>
                                                                  </apex:outputpanel>
                                                                  <input type="text" id="dealAttrRealName{!RIGHT(TEXT(iterIndex),2)}" value="" disabled="disabled" style="display:none" />
                                                                 <apex:inputCheckbox id="onlyMapping" styleclass="onlyMapping{!RIGHT(TEXT(iterIndex),2)}"  value="{!iter.onlyMapping}" style="display:none;"  />
                                                              </apex:outputpanel>
                                                              <div class="bubble_html"><apex:outputtext value="{!iter.dealA.name}"/></div>
                                                        </td>
                                                        <apex:outputPanel rendered="{!settings.XactlyExpress__ImportSource__c == ''}" layout="none">
                                                            <td class="contectTableData "  align="left">
                                                                  <div class="viewMode {!IF(LEN(iter.dealA.Description__c) > 50,'toEllipsis trigger','')} dataTypeShow overflow" style="width: 310px;">
                                                                       <apex:outputtext value="{!iter.dealA.XactlyExpress__Description__c}"/>
                                                                  </div>
                                                                  <div class="editMode">
                                                                      <apex:inputText style="width: 300px;" id="daDescription" value="{!iter.dealA.XactlyExpress__Description__c}"/>
                                                                  </div>
                                                                  <div class="bubble_html"><apex:outputtext value="{!iter.dealA.XactlyExpress__Description__c}" /></div>
                                                            </td>
                                                         </apex:outputPanel>
                                                         <td align="center">
                                                             <apex:outputPanel layout="block" styleclass="viewMode">
                                                                 <apex:outputPanel layout="none" rendered="{!iter.dealA.XactlyExpress__IsKey__c}">
                                                                     <input type="checkbox" value="1"  checked="checked" disabled="disabled"/>
                                                                 </apex:outputPanel>
                                                                 <apex:outputPanel layout="none" rendered="{!!iter.dealA.XactlyExpress__IsKey__c}">
                                                                     <input type="checkbox" value="1"  disabled="disabled"/>
                                                                 </apex:outputPanel>
                                                             </apex:outputPanel>
                                                             <apex:outputpanel layout="block" styleclass="editMode">
                                                                 <apex:outputPanel layout="none"  rendered="{!(iter.dealA.XactlyExpress__DealColumnName__c == 'CurrencyIsoCode')}" >
                                                                    <input type="checkbox" class="toBlock noClick" value="1" disabled="disabled"/>
                                                                 	<apex:inputCheckbox styleclass="keyValue noClick" disabled="disabled" id="uniChckbxDis" value="{!iter.dealA.XactlyExpress__IsKey__c}" style="display:none;"/>
                                                                 </apex:outputPanel> 
                                                                 <apex:outputPanel layout="none"  rendered="{!!(iter.dealA.XactlyExpress__DealColumnName__c == 'CurrencyIsoCode')}" >
                                                                     <apex:outputPanel layout="none" rendered="{!iter.dealA.XactlyExpress__IsKey__c}">
                                                                         <input type="checkbox" disabled="disabled" class="toBlock noClick" onclick="jQuery(this).parent().parent().find('.viewMode>input').prop('checked', $(this).is(':checked')); jQuery(this).siblings('.keyValue').prop('checked', $(this).is(':checked'));"  value="1"   id="uniChckbx{!RIGHT(TEXT(iterIndex),2)}" checked="checked"/>                                                                     
                                                                     </apex:outputPanel>
                                                                     <apex:outputPanel layout="none" rendered="{!!iter.dealA.XactlyExpress__IsKey__c}">
                                                                         <input type="checkbox" disabled="disabled" class="toBlock noClick" onclick="jQuery(this).parent().parent().find('.viewMode>input').prop('checked', $(this).is(':checked')); jQuery(this).siblings('.keyValue').prop('checked', $(this).is(':checked'));"  value="1" id="uniChckbx{!RIGHT(TEXT(iterIndex),2)}" />                                                                     
                                                                     </apex:outputPanel>
                                                                     <apex:inputCheckbox styleclass="keyValue noClick" id="uniChckbx" value="{!iter.dealA.XactlyExpress__IsKey__c}" style="display:none;"/>
                                                                 </apex:outputPanel>
                                                             </apex:outputpanel>
                                                             <input type="hidden" value="{!iter.onlyMapping}" id="onlyMapping{!RIGHT(TEXT(iterIndex),2)}"/>
                                                             <div class="bubble_html"></div>
                                                         </td>
                                                         <td align="center"  style="border-right: 0px none;">
                                                             <apex:outputPanel layout="block" styleclass="viewMode">
                                                                 <apex:outputPanel layout="none" rendered="{!iter.dealA.XactlyExpress__IsRequired__c}">
                                                                     <input type="checkbox" value="1"  checked="checked" disabled="disabled"/>
                                                                 </apex:outputPanel>
                                                                 <apex:outputPanel layout="none" rendered="{!!iter.dealA.XactlyExpress__IsRequired__c}">
                                                                     <input type="checkbox" value="1"  disabled="disabled"/>
                                                                 </apex:outputPanel>
                                                             </apex:outputPanel>
                                                             <apex:outputpanel layout="block" styleclass="editMode">
                                                                 <apex:outputPanel layout="none"  rendered="{!!(iter.dealA.XactlyExpress__DealColumnName__c == 'DealId__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'DealDate__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'ProfileId__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'CurrencyIsoCode')}" >
                                                                    <apex:outputPanel layout="none" rendered="{!iter.dealA.XactlyExpress__IsRequired__c}">
                                                                        <input type="checkbox" class="toBlock noClick" value="1" onclick="jQuery(this).parent().parent().find('.viewMode>input').prop('checked', $(this).is(':checked')); jQuery(this).siblings('.reqValue').prop('checked', $(this).is(':checked'));" id="reqChckbx{!RIGHT(TEXT(iterIndex),2)}" checked="checked" />                                                                    
                                                                    </apex:outputPanel>
                                                                    <apex:outputPanel layout="none" rendered="{!!iter.dealA.XactlyExpress__IsRequired__c}">
                                                                        <input type="checkbox" class="noClick" value="1" onclick="jQuery(this).parent().parent().find('.viewMode>input').prop('checked', $(this).is(':checked')); jQuery(this).siblings('.reqValue').prop('checked', $(this).is(':checked'));" id="reqChckbx{!RIGHT(TEXT(iterIndex),2)}" />
                                                                    </apex:outputPanel>
                                                                    <apex:inputCheckbox styleclass="reqValue noClick" id="reqChckbx" value="{!iter.dealA.XactlyExpress__IsRequired__c}" style="display:none;"/>
                                                                 </apex:outputPanel>
                                                                 
                                                                 <apex:outputPanel layout="none"  rendered="{!(iter.dealA.XactlyExpress__DealColumnName__c == 'DealId__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'DealDate__c'  || iter.dealA.XactlyExpress__DealColumnName__c == 'ProfileId__c' || iter.dealA.XactlyExpress__DealColumnName__c == 'CurrencyIsoCode')}" >
                                                                    <input type="checkbox" class="noClick" value="1" disabled="disabled" checked="checked" />
                                                                    <apex:inputCheckbox styleclass="reqValue noClick" disabled="disabled" id="reqChckbxDis" value="{!iter.dealA.XactlyExpress__IsRequired__c}" style="display:none;"/>
                                                                 </apex:outputPanel>
                                                             </apex:outputpanel>
                                                             <div class="bubble_html"></div>
                                                            <input type="hidden" class="mustBeCheked" id="IndexOfReqChckbx{!RIGHT(TEXT(iterIndex),2)}" value="{!!(iter.dealA.DealColumnName__c == 'DealDate__c' || iter.dealA.DealColumnName__c == 'CurrencyIsoCode')}"/>
                                                            <input type="hidden" class="mustBeDisabled" id="IndexOfReqChckbx{!RIGHT(TEXT(iterIndex),2)}" value="{!iter.onlyMapping && (iter.dealA.DealColumnName__c == 'DealDate__c'  || iter.dealA.DealColumnName__c == 'CurrencyIsoCode')}"/>
                                                         </td>
                                                    </tr>
                                                    <apex:variable var="iterIndex" value="{!iterIndex +1}"/>
                                                </apex:repeat>
                                                <tr class="independentRow" style="height: 34px; padding-left: 70px;">
                                                    <td colspan="6" style="border-right: 0px none;">
                                                          <div class="xactlyBtnRectWrapper"  onmouseover="xactlyBtnRectMouseOver(this);" onmouseout="xactlyBtnRectMouseOut(this);" onclick="waitOn();buttonUtils.setObjectTarget(jQuery('.addField'));buttonUtils.storeOnclickEvents();addNewAttr();"   style="float:left;margin-left:10px; margin-top: 4px;{!IF(totalExtraReleaseField < 2,'','display:none;')}">
                                                              <div class="xactlyBtnRect">
                                                                  <div class="xactlyBtnRectBackground">
                                                                      <div class="middleOffMouse xactlyBtnRectMiddle" >
                                                                         <div class="rigthOffMouseBtn xactlyBtnRectRight" >
                                                                             <div class="xactlyBtnRectTextWrapper xactlyBtnRectLabel"> {!$Label.AddRow}</div>
                                                                         </div>
                                                                      </div>
                                                                  </div>
                                                              </div>
                                                           </div>
                                                      </td>
                                                </tr>
                                            </tbody>
                                         </table>
                                         <apex:repeat value="{!allDealAttributesLst}" var="da">
                                            <input type="hidden" id="{!da.id}" value="{!da.Name}##{!da.IsRequired__c}|{!da.IsKey__c}"/>
                                         </apex:repeat>
                                         
                                         <apex:repeat value="{!fieldToType}" var="t">
                                            <input type="hidden" class="fieldToType" id="{!t.value}" value="{!t.label}" />
                                         </apex:repeat>
                                         
                                         <input class="hidden" id="allDealAttributesLst" value="{!allDealAttributesLst}" />
                                        
                                    </apex:outputPanel>
                                </div>
                        </td>
                    </tr>
                </table>
                <div style="clear:both"></div>
            </apex:outputPanel>
            
            <apex:outputPanel id="dummy" />
            
            </div>

            <!-- FOOTER  -->
            <c:XactlySMBFooter isReadOnlyAdmin="{!isReadOnlyAdmin}" id="footerCall" isSaveNext="true" packageVersion="{!packageVersion}" showPrevious="true" showNext="true" showSave="true" showRefresh="true" showExport="false"/>
            <apex:actionFunction name="pageInitActions" action="{!pageAction}" rerender="dummy" oncomplete="waitOff();" />
            <!-- 
            <apex:actionFunction name="addNewAttr" action="{!addNewAttribute}"  rerender="dealsContent,errorMsgPopUp"  oncomplete="XactlySMBSettingsDealsConf();initMethod();buttonUtils.setObjectTarget(jQuery('.addField'));editDealAttr(0);waitOff();" />
            <apex:actionFunction name="saveFN" action="{!saveDealAttributes}"/>
            <apex:actionFunction name="saveNext" action="{!saveNext}"/>
            <apex:actionFunction name="refreshMapping" action="{!refreshMapping}" rerender="dealsContent,actionFunctions,lastLevelMenuC" oncomplete="XactlySMBSettingsDealsConf();initMethod();jQuery('.toEllipsis').ellipsis(); initSelectedLevel(); controlMouse = true;callBackToOriginal();controlMouse = false;initSuperbox();waitOff();"/>
            --><apex:actionFunction name="refreshMappingNoWaitOff" action="{!genISources}" rerender="dealsContent,actionFunctions,lastLevelMenuC" oncomplete="XactlySMBSettingsDealsConf();initMethod();jQuery('.toEllipsis').ellipsis();"/>
            <apex:actionFunction name="refresISources" action="{!genISources}"  rerender="dealsContent" oncomplete="XactlySMBSettingsDealsConf();initMethod();waitOff();"/>
            <apex:actionFunction name="refreshOrder" action="{!genDealAttributes}" rerender="dealsContent" oncomplete="XactlySMBSettingsDealsConf();initMethod();waitOff();"/>
            <apex:actionFunction name="deleteCurrantImportSource" action="{!removeISources}"/>

            <!-- BEGIN Components load on-demand actionFunction -->
            <apex:actionFunction name="loadDAFormula" action="{!dummy}" oncomplete="completeLoadDAFormula();" rerender="DAFormulaWrapper">
                <apex:param assignTo="{!showDAFormula}" value="true" name="DAFormula" />
            </apex:actionFunction>

            <apex:actionFunction name="loadImportSource" action="{!dummy}" oncomplete="completeLoadImportSource();" rerender="ImportSourceWrapper">
                <apex:param assignTo="{!showImportSource}" value="true" name="ImportSource" />
            </apex:actionFunction>

            <apex:actionFunction name="loadTestMapping" action="{!dummy}" oncomplete="completeLoadTestMapping();" rerender="TestMappingWrapper">
                <apex:param assignTo="{!showTestMapping}" value="true" name="TestMapping" />
            </apex:actionFunction>

            <apex:actionFunction name="loadLookupsField" action="{!dummy}" oncomplete="completeLoadLookupsField();" rerender="LookupsFieldWrapper">
                <apex:param assignTo="{!showLookupsField}" value="true" name="LookupsField" />
            </apex:actionFunction>
            
            <apex:actionFunction name="loadCopyImportSource" action="{!dummy}" oncomplete="completeLoadCopyImportSource();" rerender="CopyImportSourceWrapper">
                <apex:param assignTo="{!showCopyImportSource}" value="true" name="CopyImportSource" />
            </apex:actionFunction>
            
            <!-- new Action Functions -->
            <apex:actionFunction name="addNewAttr" action="{!addNewAttribute}" rerender="dealsContent,errorMsgPopUp" oncomplete="reIndexDealAttributesAddNew();"/>
            <apex:actionFunction name="reIndexDealAttributesAddNew" action="{!reIndexDealAttributes}" rerender="dealsContent,errorMsgPopUp"  oncomplete="XactlySMBSettingsDealsConf();initMethod();buttonUtils.setObjectTarget(jQuery('.addField'));editDealAttr(0);waitOff();"> </apex:actionFunction>
            <apex:actionFunction name="saveFNFinal" action="{!saveDealAttributes}"/>
            <apex:actionFunction name="justRerenderContent" rerender="dealsContent,errorMsgPopUp,actionFunctions" oncomplete="waitOff();"/>
            <apex:actionFunction name="justValidate" action="{!justValidate}" oncomplete="if({!isValid}==true){saveFNFinal();}else{justRerenderContent();}"/>
            <apex:actionFunction name="saveFN" action="{!tempDealAttribFunc}" oncomplete="justValidate();">
            	<apex:param assignTo="{!isSaveFN}" value="true" name="isSaveFN"/>
            </apex:actionFunction>
            <apex:actionFunction name="saveNext" action="{!saveNext}" oncomplete="justValidate();">
            	<apex:param assignTo="{!isSaveFN}" value="true" name="isSaveNextFN"/>
            	<apex:param assignTo="{!isSaveFNRedirect}" value="true" name="isSaveNextFNRedirect"/>
            </apex:actionFunction>
            <apex:actionFunction name="saveNextRedirect" action="{!SaveNextRedirect}"/>
            <apex:actionFunction name="refreshMapping" action="{!refreshMapping}" oncomplete="genOppFields();" rerender="dealsContent,actionFunctions,lastLevelMenuC">
            	<apex:param assignTo="{!isRefreshMapping}" value="true" name="isRefreshMapping"/>
            </apex:actionFunction>
            <apex:actionFunction name="genOppFields" action="{!genOpportunityFields}" rerender="dealsContent,actionFunctions,lastLevelMenuC" oncomplete="XactlySMBSettingsDealsConf();initMethod();jQuery('.toEllipsis').ellipsis(); initSelectedLevel(); controlMouse = true;callBackToOriginal();controlMouse = false;initSuperbox();waitOff();"/>
            <apex:actionFunction name="completeLoading" action="{!completeLoading}" rerender="dealsContent,actionFunctions,errorMsgPopUp" oncomplete="initAll();waitOff();"/>
            <!-- END Components load on-demand actionFunction -->
            <apex:outputPanel id="hiddedPanel">
            	<input type="hidden" id="isSaveFNRedirect" value="{!isSaveFNRedirect}"/>
            </apex:outputPanel>
            
            <apex:inputField value="{!dummyDeal.XactlyExpress__DealDate__c}" id="dateField" style="display:none;"></apex:inputField>
            <apex:inputText value="{!sortElement}" id="sortField" style="display:none;"/>
            <apex:inputCheckbox value="{!sortByDesc}" id="sortByDesc" style="display:none;"/>
            
            
            <!-- BEGIN Components loaded on-demand -->
            <apex:outputPanel id="ImportSourceWrapper">
                <input type="hidden" id="ImportSourceLoaded" value="{!showImportSource}" />
                <apex:outputPanel rendered="{!showImportSource}" layout="block" styleClass="idImportSource">
                    <c:XactlySMBImportSource id="XactlySMBImportSource" />
                </apex:outputPanel>
            </apex:outputPanel>

            <apex:outputPanel id="DAFormulaWrapper">
                <input type="hidden" id="DAFormulaLoaded" value="{!showDAFormula}" />
                <apex:outputPanel rendered="{!showDAFormula}" layout="block" styleClass="idDAFormula">
                    <c:XactlySMBDAFormula id="formulaComp"/>
                </apex:outputPanel>
            </apex:outputPanel>
            
            <apex:outputPanel id="TestMappingWrapper">
                <input type="hidden" id="TestMappingLoaded" value="{!showTestMapping}" />
                <apex:outputPanel rendered="{!showTestMapping}" layout="block" styleClass="idTestMapping">
                    <c:XactlySMBTestMapping id="testMappingComp" />
                </apex:outputPanel>
            </apex:outputPanel>
            
             
            <apex:outputPanel id="CopyImportSourceWrapper">
                <input type="hidden" id="CopyImportSourceLoaded" value="{!showCopyImportSource}" />
                <apex:outputPanel rendered="{!showCopyImportSource}" layout="block" styleClass="idCopyImportSource">
                    <c:XactlySMBCopyImportSource id="XactlySMBCopyImportSource" mappingToCopy="{!settings.XactlyExpress__ImportSource__c}" />
                </apex:outputPanel>
            </apex:outputPanel>
            <!-- END Components loaded on-demand -->
            
            <apex:outputPanel id="actionFunctions">
                <input type="hidden" value="{!(ISNULL(currentImportSource) || currentImportSource.SourceLabel__c != 'CSV__File'  || currentImportSource.Name  == '') && settings.ImportSource__c != 'CSV__File' && settings.ImportSource__c != 'CSV__File_REL' }" id="AFOpt1"/>
                <input type="hidden" value="{!settings.ImportSource__c == 'CSV__File' || settings.ImportSource__c == 'CSV__File_REL' || (!ISNULL(currentImportSource) && currentImportSource.SourceLabel__c == 'CSV__File'   &&  currentImportSource.Name  != '')}" id="AFOpt2"/>
            </apex:outputPanel>
            
            
            <apex:actionfunction id="chatterLoader" name="loadChatter" action="{!loadChatter}" rerender="chatter" oncomplete="waitOff();initChatter();jQuery('.innerOcultar a').click();"/>
        </apex:form>
    </div>
    <div style="display: none;">
        <a class="commentBoxBtn"></a>
        <div id="fooPopup_px" class="jqpopup_cross"></div>
        <div class="jqpopup_header" id="fooPopup_ph"></div>
        <div id="fooPopup_pm" class="jqpopup_message"></div>
        <div id="'fooPopup'_pc" class="jqpopup_content"></div>
        <div id="fooPopup_pf" class="jqpopup_footer"></div>
        <div id="fooPopup_ps" class="jqpopup_resize"></div>
        <div id="fooPopup_pl" class="jqpopup_center"></div>
    </div>
	<div class="hidden">
		<input type="hidden" id="stepName" value="{!stepName}" />
	</div>
    <div class="hidden">
        <input class="hidden" id="url_settings_users" value="{!$Page.XactlySMBSettingsUsers}" />
        <input class="hidden" id="const_data_type_constant" value="{!JSINHTMLENCODE(DATA_TYPE_CONSTANT)}" />
        <input class="hidden" id="const_lookup_field_value" value="{!JSINHTMLENCODE(LOOKUP_FIELD_VALUE)}" />
        <input class="hidden" id="const_formula_field_value" value="{!JSINHTMLENCODE(FORMULA_FIELD_VALUE)}" />
        <input class="hidden" id="label_some_salesforce_fileds_not_difined" value="{!JSINHTMLENCODE($Label.SomeSalesforceFiledsNotDefined)}" />
        <input class="hidden" id="label_attribute_max_text" value="{!JSINHTMLENCODE($Label.AttributeMaxText)}" />
        <input class="hidden" id="label_attribute_max_date" value="{!JSINHTMLENCODE($Label.AttributeMaxDate)}" />
        <input class="hidden" id="label_attribute_max_currency" value="{!JSINHTMLENCODE($Label.AttributeMaxCurrency)}" />
        <input class="hidden" id="label_attribute_max_boolean" value="{!JSINHTMLENCODE($Label.AttributeMaxBoolean)}" />
        <input class="hidden" id="label_attribute_max_number" value="{!JSINHTMLENCODE($Label.AttributeMaxNumber)}" />
        <input class="hidden" id="label_attribute_max_user_type" value="{!JSINHTMLENCODE($Label.AttributeMaxUsertype)}" />
        <input class="hidden" id="dateFirst" value="{!JSINHTMLENCODE(dateFirst)}" />
        <input class="hidden" id="dateSeparator" value="{!JSINHTMLENCODE(dateSeparator)}" />
        <input class="hidden" id="label_wrong_date_format_js" value="{!JSINHTMLENCODE($Label.WrongDateFormatJS)}" />
        <input class="hidden" id="label_wrong_number_format_js" value="{!JSINHTMLENCODE($Label.WrongNumberFormatJS)}" />
        <input class="hidden" id="label_wrong_currency_format_js" value="{!JSINHTMLENCODE($Label.WrongCurrencyFormatJS)}" />
        <input class="hidden" id="url_export_mapping" value="{!$Page.XactlySMBExportMapping}" />
        <input class="hidden" id="label_delete_mapping_question" value="{!JSINHTMLENCODE($Label.DeleteMappingQuestion)}" />
        <input class="hidden" id="const_min_select_element" value="{!JSINHTMLENCODE(TEXT(MIN_SELECT_ELEMENT))}" />
        <input class="hidden" id="label_you_can_not_change_data_type_of_requiered_da" value="{!JSINHTMLENCODE($Label.YouCanNotChangeDataTypeOfRequieredDA)}" />
        <input class="hidden" id="label_if_you_change_data_type_will_lost_associated_data" value="{!JSINHTMLENCODE(IfYouChangeDataLabel)}" />
        <input type="hidden" id="isMakeListSortable" value="{!settings.ImportSource__c == 'CSV__File' || (!ISNULL(currentImportSource) && currentImportSource.SourceLabel__c = 'CSV__File' && currentImportSource.Name  != '')}"/>
        <input type="hidden" id="Api_Session_ID" value="{!$Api.Session_ID}"/>
        <input type="hidden" id="metaEndpoint" value="{!metaEndpoint}" />
        <input type="hidden" id="assignExtraPermissionSets" value="{!$RemoteAction.XactlySMBSettingsDealsController.assignExtraPermissionSets}" />
        <input class="hidden" id="label_create_estimator_page" value="{!$Label.xactlyexpress__CreateEstimatorPage}" />
        <input class="hidden" id="label_creating_page" value="{!JSINHTMLENCODE($Label.CreatingPage)}" />
        <input type="hidden" id="NameSpace" value="{!nameSpace}"/>
        <input class="hidden" id="label_saveChanges" value="{!$Label.saveChangesBeforeContinue}" />
        <input class="hidden" id="lbl_processing" value="{!$Label.processing}" />
        <input class="hidden" id="lbl_error" value="{!$Label.error}" />
        <input class="hidden" id="lbl_please_wait" value="{!$Label.pleasewait}" />
        <input class="hidden" id="lbl_UnableToAssignExtraPermissionsets" value="{!$Label.UnableToAssignExtraPermissionsets}" />
        <input class="hidden" id="lbl_YouInsufficientPermissions" value="{!$Label.YouInsufficientPermissions}" />
        
    </div>

    <c:XactlySMBFooterScript isChatterEnabled="{!isChatterEnabled}" loadPerformantJs="true" loadHeaderJs="true" />
    <script src="../../soap/ajax/24.0/connection.js" type="text/javascript"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'popup/js/jqDnR.min.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'popup/js/jquery.jqpopup.min.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'js/jQueryOverflow.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'components/js/XactlySMBSObjDescribe.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'components/js/XactlySMBDAFormula.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'components/js/XactlySMBDealAttributeOrder.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'components/js/XactlySMBImportSource.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'components/js/XactlySMBTestMapping.js')}"></script>
    
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'js/jszip/jszip.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'js/jszip/jszip-load.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'js/jszip/jszip-deflate.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'js/jszip/jszip-inflate.js')}"></script> 
    
    <script type="text/javascript" src="{!URLFOR($Resource.XactlySMBResources, 'pages/js/XactlySMBSettingsDeals.js')}"></script>
    <c:XactlySMBFeedbackTab />
    <c:XactlySMBSObjDescribe title="{!$Label.xactlyexpress__addFieldViaLookup}" sub_title="{!$Label.xactlyexpress__addFieldOrMore}" />
</apex:page>